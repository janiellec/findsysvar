-- -----------------------------------------------------------------------
--
--   MODULE:         GMSPOTVR3.KL
--   TITLE:          GMSPOTVR3 PROGRAM
--
--
--   WRITTEN BY:     RANDY KOSASKI
--   REVISION DATE:  1/23/16
--
--   LANGUAGE:       KAREL 8.33 R30iB
--   CONTROL GROUP:  BODY SHOP EXECUTION GROUP
--   STATUS:
--
--
--   ORDER NUMBER:   GMGBL4
--   PROJECT NAME:   GM Global Center
--
--
--         FANUC Robotics retains rights in any and all Software
--         contained in the material attached hereto and sai
--         Software may not be copied or reproduced without the
--         written permission of FANUC Robotics.
--
--         All Software, (C) Copyright FANUC Robotics Corporation, 2016
--         DESCRIPTION: Spot Program  program files. These routines will be
--                      called from the main wizard, no prompts are in the Variable file
--                      only the setttings GMWIZARD are the questions
--
--         HISTORY OF CHANGES:
--
--         REVISION   DATE       BY               COMMENTS
--         --------   ---------  ---------------  --------------------
--             V4.1   2017/02/13 marchaka         Removed $dev_path setting.  Replaced with 
--                                                KCL CHDIR command.
--             V4.2   2017/07/07 marchaka         Fixed an issue with amp question getting asked when
--                                                servo gun axis is being installed
--             V4.3   2018/04/06 marchaka         Modify IMA44-Tol text
--             V4.4   2018/09/18 marchaka         set_tddt and td_mtr_var routine moved to gmspotvr5, fix routine calls
--             v4.4   2018/09/26 marchaka         DT file configuration for servo gun tool change applications will be
--                                                handled in gmwizspt2.  This will be cleaner and easier to maintain.
--                                                Motor setup for additional guns on gun change application was added for v833p06.
--             v4.4   2018/10/11 marchaka         Remove erroneous copying of svg3a1.dt.  It wasn't needed adn was posting an unnecessary fault.
--             v4.5   2019/08/27 marchaka         Add servo nut welder setup
--
--
--
--
--------------------------------------------------------------------------
PROGRAM GMSPOTVR3

%COMMENT = 'GM Spot V4.5'

%NOLOCKGROUP
%INVISIBLE
%RWACCESS
%NOPAUSE = ERROR + COMMAND + TPENABLE

%ENVIRONMENT SGDEF1  --SWG variables
%ENVIRONMENT SWGDEF  --spot variables
%ENVIRONMENT SYSDEF  --system variables
%ENVIRONMENT PRODDEF --$application variables
%ENVIRONMENT UIF     --col_desc_t

%INCLUDE KLEVCCDF  -- Required for the TPERROR write command for the contants

-- variables declared for All shops
%INCLUDE gmcfgcel  -- GM wizard variables for workcell variables that are common across all shops
%INCLUDE gmcfgerr  -- Required for the configuration for GM Error counting and logging
%INCLUDE gmcfgspt  -- GM spot application variables
%INCLUDE gmcfgbdy  -- GM bodyshop application variables

CONST
Version = '2019-08-27'
MAX_MOTORS = 10
-- the flag for loadig p-code to the temporary pool
  TEMP_MEM_C = 10  --for isdtsetup
%INCLUDE gmcnstnt -- all GM constants for the wizard

TYPE
  motor_info_t FROM GMCUSTO = STRUCTURE
    motor_name   : STRING[32]
  ENDSTRUCTURE

  sg_qs_t FROM GMCUSTO = STRUCTURE
    gear_data    : REAL
    lower_limit  : REAL
    gun_type     : INTEGER
    amp_num      : INTEGER
  ENDSTRUCTURE

VAR

  Current_Ver  IN SHADOW :STRING[32] -- Set equal to Version constant in initialization routine
  StrtinErs   : INTEGER   -- How many errors I/O error counter had when the program started
  SpotVR3Setup  IN SHADOW : BOOLEAN  -- Keeps track if routine setup Mh I/O at least first time

  gm_status : INTEGER

  g_servog_opt IN SHADOW FROM GMVARS : BOOLEAN     -- Servo gun option loaded
  got_rtu      IN SHADOW FROM GMCUSTO  : BOOLEAN   -- Extended axis option loaded
  motor_def    IN SHADOW FROM GMCUSTO  : ARRAY[MAX_MOTORS] OF motor_info_T
  dtgfiletmp   IN SHADOW FROM GMCUSTO  : ARRAY[4] OF STRING[64] 
  dtg2filetmp   IN SHADOW FROM GMCUSTO  : ARRAY[4] OF STRING[64]
  dtafiletmp   IN SHADOW FROM GMCUSTO  : ARRAY[5] OF STRING[64]
  dtafiletmpa2 IN SHADOW FROM GMCUSTO  : ARRAY[5] OF STRING[64]
  dft_sg_qs    IN SHADOW FROM GMCUSTO  : ARRAY[5,2] OF sg_qs_t
  dt_name      IN SHADOW FROM GMCUSTO : STRING[16]  
  defpath      IN SHADOW FROM GMCUSTO : STRING[16]
  dt_file      IN SHADOW FROM GMCUSTO : FILE
  dt_fulnam    IN SHADOW FROM GMCUSTO : STRING[32]
  dsbl_msk_val : INTEGER  -- Temp. save of the $scr.$mb_dsbl_msk value
  found        : INTEGER  -- Temp. save of the $scr.$mb_dsbl_msk value
  
  frvrc        IN CMOS from atshell   	: BOOLEAN

  med_frm_done  FROM ATINSTAL: BOOLEAN
  medinitstat   FROM ATINSTAL: BOOLEAN
  med_status    FROM ATINSTAL: INTEGER
  media_sel     FROM ATINSTAL: INTEGER

  srvo_td_opt  IN SHADOW FROM GMCUSTO: BOOLEAN --servo tip dress option loaded
  srvotd      IN SHADOW: BOOLEAN --user selected servo tip dresser in wizard

  setup_axis  IN SHADOW: BOOLEAN --user selected setting up servo gun axis

  config_gp_ax IN SHADOW: ARRAY[2] OF BOOLEAN

  grp2_add IN SHADOW    : BOOLEAN
  grp3_add IN SHADOW    : BOOLEAN
  grp_sub  IN SHADOW    : BOOLEAN
  grp_add  IN SHADOW    : BOOLEAN

  dtdfiltmp   IN SHADOW   : ARRAY[35] OF STRING[64]  --isdt.dt
  dtdcfgftmp  IN SHADOW   : ARRAY[27] OF STRING[64]  --isdtcfg.dt
  numsrvodrs  IN SHADOW   : INTEGER --number of servo tip dressers

  data_file             : STRING[15]  --isdt setup
  g_file_id      : FILE  --isdt setup

  srvo_dress   IN SHADOW FROM GMCUSTO: INTEGER
  UseToolChngr IN SHADOW FROM gmcfgtlc : BOOLEAN -- If Tool Changer on Tool
  sgunchng     IN SHADOW FROM GMCUSTO  : BOOLEAN   -- Servo gun tool changer option loaded

%INCLUDE swicomn
%INCLUDE rlsetatr -- set and reset ATR information
%INCLUDE rlstatr2 -- set ATR with search
%INCLUDE swrdutil

ROUTINE writeLog(p_message: STRING; isError: BOOLEAN) FROM GMWIZLOG

%INCLUDE klrdutil
%INCLUDE GMRDUTIL -- Utility Routine for Setting Variables

ROUTINE srvo_optn FROM gmwizspt --check if servo gun option loaded
ROUTINE rtu_optn  FROM gmwizspt --check if extended axis option is loaded
ROUTINE deinstall (l_path, mneumonic, volume, order: STRING) FROM SWIROBT
ROUTINE reinstall (l_path, mneumonic, volume: STRING) : INTEGER FROM SWIROBT
ROUTINE srvotd_optn FROM gmwizspt
ROUTINE set_tddt FROM gmspotvr5
ROUTINE td_mtr_var FROM gmspotvr5
ROUTINE dt_sgtcgpcfg FROM gmspotvr6 --setup DT files for gun change apps
ROUTINE dt_sgtc_var FROM gmspotvr6 --setup DT files for gun change apps

-----------------------------------------------------------------------------
ROUTINE initspot3var
-- PURPOSE: to initialize registers associated with setup
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  do_kcl_Cmnd('CHDIR FRSU:\') --reset FRS to root directory
  do_kcl_Cmnd('CHDIR FRS:\') --reset FRS to root directory
  do_kcl_Cmnd('CHDIR FR:\') --reset FR to root directory

  IF UNINIT(g_servog_opt) THEN
    srvo_optn
  ENDIF

  IF UNINIT(got_rtu) THEN
    rtu_optn
  ENDIF

  IF UNINIT(srvo_td_opt) THEN
    srvotd_optn  --servo tip dreser option loaded
  ENDIF 

  --reset VAR
  srvotd = FALSE
  numsrvodrs = 0

  IF (srvo_td_opt = TRUE) THEN --servo tip dresser option on robot
    sp_eqnum = 1       --initialize equipment setup for wizard to equipment 1
    sp_gnnum = 1       --initialize gun setup for wizard questions to gun 1	
    sp_eqgn_num = spttl_eq1gn  --initialize guns per equipment tracker

    FOR sp_eqnum = 1 TO sp_ttl_eq DO
      FOR sp_gnnum = 1 TO sp_eqgn_num DO    
        IF (spotapp_eq[sp_eqnum].spotgun[sp_gnnum].sp_srvo_td = wizans_yes) THEN --servo tipdress
          srvotd = TRUE
          numsrvodrs = numsrvodrs + 1
        ENDIF --tip dress            
      ENDFOR   
        IF (spttl_eq2gn = 2) THEN --reinitialize variables for equipment 2 gun setup
          sp_eqgn_num = sp_ttl_gn
        ENDIF
      ENDFOR
  ENDIF --servo tip dresser option on robot

  IF UNINIT(srvo_dress) THEN
    srvo_dress = 0
  ENDIF
     
END initspot3var
----------------------------------------------------------------------------
ROUTINE init_allaxis
--                                                                        --
-- Description: This routine will auto config all axis for each           --
--              group defined in the system                               --
--                                                                        --
-- NOTE: It is NOT possible to just init 1 axis of a group                --
--                                                                        --
-- INPUT: config_gp_ax from s_sg_axis routine in swwizsg                  --
--                                                                        --
----------------------------------------------------------------------------
VAR 
  l_group      : INTEGER 

BEGIN

IF (setup_axis = TRUE) THEN

  FOR  l_group = 2 to $SCR.$NUM_GROUP DO
    -- ONLY configure a group if an axis on that group has been 
    -- mofified.
    IF config_gp_ax[l_group-1] = TRUE THEN
      --writeconsole('[h869] config true')
      IF (l_group > $SCR.$NUM_GROUP) THEN
        gnum = 0
      ELSE
        gnum = l_group
      ENDIF
      $AUTOINIT = 1
        IF (srvo_td_opt = TRUE) THEN --servo tip dress option on robot
				     --need to run whether app calls for
				     --servo tip dress or not

          data_file = 'ISDTCFG'		         --from rlsvprax.kl
          data_file = 'FRS:'+ data_file + '.DT'
          CLR_IO_STAT(g_file_id)
          OPEN FILE g_file_id ('RO',data_file)
          gm_status = io_status(g_file_id)

          data_file = 'ISDT'                      --from rlsvis.kl
          data_file = 'FRS:\'+ data_file + '.DT'
          CLR_IO_STAT(g_file_id)
          OPEN FILE g_file_id ('RO',data_file)
          gm_status = io_status(g_file_id)

          IF ((srvotd = TRUE) OR (srvo_dress = wizans_yes)) THEN --tip dressers need to be configured
            td_mtr_var  --set servo tip dress motor variables
	  ENDIF --servo tip dressers to configure      

        ENDIF --servo tip dress option on robot
      --writeconsole('[h869] @modify')
      gm_status = modify ('h869')
      $AUTOINIT = 0 
      --writeconsole('[h869] @modify done')
    ENDIF
  ENDFOR

ENDIF --setup axis

END init_allaxis

-----------------------------------------------------------------------------
ROUTINE initsgdt
-- PURPOSE: to initialize registers associated with setup
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
VAR
  l_equip      : INTEGER
  l_gun        : INTEGER

BEGIN

  IF (g_servog_opt = TRUE) THEN --initalize SWG variables
      
    -- Write DT file
    defpath = 'FR:'

    -- Init Motor INFO.
    motor_def[1].motor_name = 'Tol SW44'
    motor_def[2].motor_name = 'Tol HT23'
    motor_def[3].motor_name = 'GSWA 201/202-ARO3G'
    motor_def[4].motor_name = 'GSWA 101-Tol'
    motor_def[5].motor_name = 'GSWA 102/103/202/203/IMA44-Tol'
    motor_def[6].motor_name = 'GSWA 201/301/302/IMA33-Tol'
    motor_def[7].motor_name = 'FANUC ACa8/4000iS-40/80A'

    -- Init DTFILE string array that resembles group DT file
    dtgfiletmp[1] = 'hw_strt 7   -- Hardware start axis'      -- Determined by Application
    dtgfiletmp[2] = 'a1_exist 1  -- Automatically generate'   -- Determined by Application
    dtgfiletmp[3] = 'a2_exist 1  -- Automatically generate'   -- Determined by Application
    dtgfiletmp[4] = 'fssb_line 1 -- Automatically generate'   -- Determined by Application

    dtg2filetmp[1] = 'hw_strt 8   -- Hardware start axis'      -- Determined by Application
    dtg2filetmp[2] = 'a1_exist 1  -- Automatically generate'   -- Determined by Application
    dtg2filetmp[3] = 'a2_exist 1  -- Automatically generate'   -- Determined by Application
    dtg2filetmp[4] = 'fssb_line 1 -- Automatically generate'   -- Determined by Application

    dtafiletmp[1] = 'setup_type 1 -- Generated Automatically' -- Ask user
    dtafiletmp[2] = 'motor 42933 -- Generated Automatically'  -- Ask user
    dtafiletmp[3] = 'gn_cl_dir 1 -- Generated Automatically'
    dtafiletmp[4] = 'brk 0 -- Generated Automatically'
    dtafiletmp[5] = 'amp_num 2 -- Generated Automatically'    -- Must determine per application

    dtafiletmpa2[1] = 'setup_type 1 -- Generated Automatically' -- Ask user
    dtafiletmpa2[2] = 'motor 42933 -- Generated Automatically'  -- Ask user
    dtafiletmpa2[3] = 'gn_cl_dir 1 -- Generated Automatically'
    dtafiletmpa2[4] = 'brk 0 -- Generated Automatically'
    dtafiletmpa2[5] = 'amp_num 2 -- Generated Automatically'    -- Must determine per application

    FOR l_equip = 1 TO 2 DO
      FOR l_gun = 1 TO 2 DO
        IF UNINIT(dft_sg_qs[l_equip, l_gun].gear_data) THEN
          dft_sg_qs[l_equip, l_gun].gear_data  = 0.0
        ENDIF
        IF UNINIT(dft_sg_qs[l_equip, l_gun].lower_limit) THEN
          dft_sg_qs[l_equip, l_gun].lower_limit = 0.0
        ENDIF
      ENDFOR
    ENDFOR

  ENDIF --servo gun

END initsgdt
-----------------------------------------------------------------------------
ROUTINE set_swgmotor
-- PURPOSE: set swg motor up
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

IF (numwldctrl <> 0) THEN --spot welding applciation

  setup_axis = FALSE --reset

  sp_eqnum = 1       --initialize equipment setup for wizard to equipment 1
  sp_gnnum = 1       --initialize gun setup for wizard questions to gun 1	
  sp_eqgn_num = spttl_eq1gn  --initialize guns per equipment tracker

  FOR sp_eqnum = 1 TO sp_ttl_eq DO
    FOR sp_gnnum = 1 TO sp_eqgn_num DO    

      IF (spotapp_eq[sp_eqnum].spotgun[sp_gnnum].sg_ax_setup = wizans_yes) THEN --setup axis
        setup_axis = TRUE
      ENDIF

    ENDFOR
    IF (spttl_eq2gn = 2) THEN --reinitialize variables for equipment 2 gun setup
      sp_eqgn_num = sp_ttl_gn
    ENDIF
  ENDFOR

  SELECT spttl_eq1gn OF
    CASE(1):  --one gun on equipment one
      IF (spotapp_eq[1].spotgun[1].sg_ax_setup = wizans_yes) THEN --init group 2
        config_gp_ax[1] = TRUE
      ELSE
        config_gp_ax[1] = FALSE
      ENDIF
    CASE(2):  --two guns on equipment one
      IF ((spotapp_eq[1].spotgun[1].sg_ax_setup = wizans_yes) AND (spotapp_eq[1].spotgun[2].sg_ax_setup = wizans_yes)) THEN --setup axis
        config_gp_ax[1] = TRUE
      ELSE
        config_gp_ax[1] = FALSE
      ENDIF
    ELSE:
  ENDSELECT

  IF (spotapp_eq[2].spotgun[1].sg_ax_setup = wizans_yes) THEN --setup axis, G4 only has one gun on equipment 2, so no need to check additional guns
     config_gp_ax[2] = TRUE
  ELSE
     config_gp_ax[2] = FALSE
  ENDIF

ENDIF --spot welding applicaiton

END set_swgmotor
-----------------------------------------------------------------------------
ROUTINE init_grpcfg
-- PURPOSE: Determine if groups need to be added or deleted
--          
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

IF (g_servog_opt) ThEN --servo gun option is loaded on the robot

  --Determine if groups need to be added or not based on configuration and wizard answers

  IF ((bshop_proc1 = spotappl) AND (bshop_proc2 <> spotappl)) THEN
    SELECT wld1_app OF  --process 1 weld applciation
      CASE(wld1app_cg, wld1app_pg, wld1app_cgmh, wld1app_snut):  --one equipment, one gun
        IF (spotapp_eq[1].spotgun[1].sp_srvogn = wizans_yes) THEN  --servo gun is used
          IF ($scr.$num_group = 2) THEN
            grp2_add = FALSE
            grp3_add = FALSE
            grp_add  = FALSE
          ENDIF --don't need to add group 2
          IF ($scr.$num_group = 1) THEN
            grp2_add = TRUE
            grp3_add = FALSE
            grp_add  = TRUE
          ENDIF -- need to add group 2
          IF ($scr.$num_group > 2) THEN
            grp_sub = TRUE
          ELSE
            grp_sub = FALSE
          ENDIF --subtract a group   
        ELSE  --servo gun is not used
          grp2_add = FALSE
          grp3_add = FALSE
          grp_add  = FALSE
          IF ($scr.$num_group > 1) THEN
            grp_sub = TRUE
          ELSE
            grp_sub = FALSE 
          ENDIF         
        ENDIF --equipment 1 is a servo gun

      CASE(wld1app_spdg):  --one equipment, two guns
        IF ((spotapp_eq[1].spotgun[1].sp_srvogn = wizans_yes) OR (spotapp_eq[1].spotgun[2].sp_srvogn = wizans_yes))  THEN --at least one gun is a servo gun, need group 2
          IF ($scr.$num_group = 2) THEN
            grp2_add = FALSE
            grp3_add = FALSE
            grp_add  = FALSE
          ENDIF --don't need to add group 2
          IF ($scr.$num_group = 1) THEN
            grp2_add = TRUE
            grp3_add = FALSE
            grp_add  = TRUE
          ENDIF -- need to add group 2
          IF ($scr.$num_group > 2) THEN
            grp_sub = TRUE
          ELSE
            grp_sub = FALSE
          ENDIF --subtract a group
        ENDIF --at least one gun is a servo gun, need group 2
        IF ((spotapp_eq[1].spotgun[1].sp_srvogn = wizans_no) AND (spotapp_eq[1].spotgun[2].sp_srvogn = wizans_no))  THEN  --neither equipment are servo guns
          grp2_add = FALSE
          grp3_add = FALSE
          grp_add  = FALSE
          IF ($scr.$num_group > 1) THEN
            grp_sub = TRUE
          ELSE
            grp_sub = FALSE
          ENDIF --subtract a group
        ENDIF --neither equipment are servo guns 

      CASE(wld1app_dpsg):  --two equipment, two guns
        IF (((spotapp_eq[1].spotgun[1].sp_srvogn = wizans_yes) AND (spotapp_eq[2].spotgun[1].sp_srvogn = wizans_no)) OR
             ((spotapp_eq[1].spotgun[1].sp_srvogn = wizans_no) AND (spotapp_eq[2].spotgun[1].sp_srvogn = wizans_yes))) THEN  --one of the equipment is a servo gun, the other is not
          IF ($scr.$num_group = 2) THEN
            grp2_add = FALSE
            grp3_add = FALSE
            grp_add  = FALSE
          ENDIF --don't need to add group 2
          IF ($scr.$num_group = 1) THEN
            grp2_add = TRUE
            grp3_add = FALSE
            grp_add  = TRUE
          ENDIF -- need to add group 2
          IF ($scr.$num_group > 2) THEN
            grp_sub = TRUE
          ELSE
            grp_sub = FALSE
          ENDIF --subtract a group
        ENDIF --one of the equipment is a servo gun, the other is not
        IF ((spotapp_eq[1].spotgun[1].sp_srvogn = wizans_yes) AND (spotapp_eq[2].spotgun[1].sp_srvogn = wizans_yes))  THEN  --both equipment are servo guns
          IF ($scr.$num_group = 1) THEN
            grp2_add = TRUE
            grp3_add = TRUE
            grp_add  = TRUE
          ENDIF --add groups 2 and 3
          IF ($scr.$num_group = 2) THEN
            grp2_add = FALSE
            grp3_add = TRUE
            grp_add  = TRUE
          ENDIF --add group 3
          IF ($scr.$num_group = 3) THEN
            grp2_add = FALSE
            grp3_add = FALSE
            grp_add  = FALSE
          ENDIF --don't add any groups
          IF ($scr.$num_group > 3) THEN
            grp_sub = TRUE
          ELSE
	    grp_sub = FALSE
          ENDIF --subtract group
        ENDIF --both equipment are servo guns
        IF ((spotapp_eq[1].spotgun[1].sp_srvogn = wizans_no) AND (spotapp_eq[2].spotgun[1].sp_srvogn = wizans_no))  THEN  --neither equipment are servo guns
          grp2_add = FALSE
          grp3_add = FALSE
          grp_add  = FALSE
          IF ($scr.$num_group > 1) THEN
            grp_sub = TRUE
          ELSE
            grp_sub = FALSE
          ENDIF --subtract a group
        ENDIF --neither equipment are servo guns 

        ELSE:
     ENDSELECT   
  ENDIF --single process

  IF ((bshop_proc1 = spotappl) AND (bshop_proc2 = spotappl)) THEN --both processes are spot applications
    SELECT wld2_app OF --spot process

      CASE(wld2app_spdg):  --one equipment two guns
        IF ((spotapp_eq[1].spotgun[1].sp_srvogn = wizans_yes) OR (spotapp_eq[1].spotgun[2].sp_srvogn = wizans_yes))  THEN --at least one gun is a servo gun, need group 2
          IF ($scr.$num_group = 2) THEN
            grp2_add = FALSE
            grp3_add = FALSE
            grp_add  = FALSE
          ENDIF --don't need to add group 2
          IF ($scr.$num_group = 1) THEN
            grp2_add = TRUE
            grp3_add = FALSE
            grp_add  = TRUE
          ENDIF -- need to add group 2
          IF ($scr.$num_group > 2) THEN
            grp_sub = TRUE
          ELSE
            grp_sub = FALSE
          ENDIF --subtract a group
        ENDIF --at least one gun is a servo gun, need group 2
        IF ((spotapp_eq[1].spotgun[1].sp_srvogn = wizans_no) AND (spotapp_eq[1].spotgun[2].sp_srvogn = wizans_no))  THEN  --neither equipment are servo guns
          grp2_add = FALSE
          grp3_add = FALSE
          grp_add  = FALSE
          IF ($scr.$num_group > 1) THEN
            grp_sub = TRUE
          ELSE
            grp_sub = FALSE
          ENDIF --subtract a group
        ENDIF --neither equipment are servo guns
     
      CASE(wld2app_dpsg, wld2app_cgpg):  --two equipment, two guns
        IF (((spotapp_eq[1].spotgun[1].sp_srvogn = wizans_yes) AND (spotapp_eq[2].spotgun[1].sp_srvogn = wizans_no)) OR
             ((spotapp_eq[1].spotgun[1].sp_srvogn = wizans_no) AND (spotapp_eq[2].spotgun[1].sp_srvogn = wizans_yes))) THEN  --one of the equipment is a servo gun, the other is not
          IF ($scr.$num_group = 2) THEN
            grp2_add = FALSE
            grp3_add = FALSE
            grp_add  = FALSE
          ENDIF --don't need to add group 2
          IF ($scr.$num_group = 1) THEN
            grp2_add = TRUE
            grp3_add = FALSE
            grp_add  = TRUE
          ENDIF -- need to add group 2
          IF ($scr.$num_group > 2) THEN
            grp_sub = TRUE
          ELSE
            grp_sub = FALSE
          ENDIF --subtract a group
        ENDIF --one of the equipment is a servo gun, the other is not
        IF ((spotapp_eq[1].spotgun[1].sp_srvogn = wizans_yes) AND (spotapp_eq[2].spotgun[1].sp_srvogn = wizans_yes))  THEN  --both equipment are servo guns
          IF ($scr.$num_group = 1) THEN
            grp2_add = TRUE
            grp3_add = TRUE
            grp_add  = TRUE
          ENDIF --add groups 2 and 3
          IF ($scr.$num_group = 2) THEN
            grp2_add = FALSE
            grp3_add = TRUE
            grp_add  = TRUE
          ENDIF --add group 3
          IF ($scr.$num_group = 3) THEN
            grp2_add = FALSE
            grp3_add = FALSE
            grp_add  = FALSE
          ENDIF --don't add any groups
          IF ($scr.$num_group > 3) THEN
            grp_sub = TRUE
          ELSE
	    grp_sub = FALSE
          ENDIF --subtract group
        ENDIF --both equipment are servo guns
        IF ((spotapp_eq[1].spotgun[1].sp_srvogn = wizans_no) AND (spotapp_eq[2].spotgun[1].sp_srvogn = wizans_no))  THEN  --neither equipment are servo guns
          grp2_add = FALSE
          grp3_add = FALSE
          grp_add  = FALSE
          IF ($scr.$num_group > 1) THEN
            grp_sub = TRUE
          ELSE
            grp_sub = FALSE
          ENDIF --subtract a group
        ENDIF --neither equipment are servo guns

      ELSE:
    ENDSELECT --spot process

  ENDIF --both processes are spot application

ENDIF --swg option on robot

END init_grpcfg
-----------------------------------------------------------------------------
ROUTINE dt_sg_var
-- PURPOSE: set dt variables based on wizard answers.  do this before setting
--          up the groups and axis.
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
VAR
ls_amp_num   : STRING[16]
l_i          : INTEGER
l_copy_str   : STRING[32]

BEGIN


  IF (g_servog_opt = TRUE) THEN  --swg on robot

    SELECT numwldctrl OF  --number of spot applications

      CASE(1):  --one spot application

        SELECT wld1_app OF --configure motor appropriately per config
 
          CASE(wld1app_cg, wld1app_pg, wld1app_cgmh, wld1app_snut):  --single gun applications
            IF (spotapp_eq[1].spotgun[1].sp_srvogn = wizans_yes) THEN --gun is a servo gun
              IF (spotapp_eq[1].spotgun[1].sg_ax_setup = wizans_yes) THEN --setup servo gun
                SELECT spotapp_eq[1].spotgun[1].sg_motr OF --set up based on motor configuration
	          CASE(tol_sw44):
        	    dtafiletmp[2] = 'motor 42421' + ' --Generated by Wizard'  
          	  CASE(tol_HT23):
            	    dtafiletmp[2] = 'motor 41909' + ' --Generated by Wizard'  
          	  CASE(gswa_201_202):
            	    dtafiletmp[2] = 'motor 43301' + ' --Generated by Wizard'  
          	  CASE(gswa_101):
            	    dtafiletmp[2] = 'motor 42677' + ' --Generated by Wizard'  
          	  CASE(gswa_ima44):
            	    dtafiletmp[2] = 'motor 42933' + ' --Generated by Wizard'  
          	  CASE(gswa_ima33):
            	    dtafiletmp[2] = 'motor 43701' + ' --Generated by Wizard'  
          	  CASE(fac_4000):
            	    IF (spotapp_eq[1].spotgun[1].sg_mot2 = fac_4000_40) THEN
              	      dtafiletmp[2] = 'motor 16053' + ' --Generated by Wizard' 
            	    ENDIF
            	    IF(spotapp_eq[1].spotgun[1].sg_mot2 = fac_4000_80) THEN
              	      dtafiletmp[2] = 'motor 16055' + ' --Generated by Wizard'  
            	    ENDIF
           	  ELSE:
                ENDSELECT  --setup motor config 

                IF (got_rtu = FALSE) THEN --no RTU
                  spotapp_eq[1].spotgun[1].sg_ampno = 2 --amplifier used
                ELSE --RTU
                  spotapp_eq[1].spotgun[1].sg_ampno = 3 --amplifier used
                ENDIF
                --amp setup motor setup moved to item 5 in array, fixes issue with amp question
		--getting asked during gun axis configuration
                SELECT spotapp_eq[1].spotgun[1].sg_ampno OF --setup amp
                  CASE(2):  --amp 2
                    CNV_INT_STR(2,1,0,ls_amp_num)
                    dtafiletmp[5] = 'amp_num ' + ls_amp_num + ' -- Generated by Wizard'
                  CASE(3):  --amp 3
                    CNV_INT_STR(3,1,0,ls_amp_num)
                    dtafiletmp[5] = 'amp_num ' + ls_amp_num + ' -- Generated by Wizard'
                  ELSE:
                ENDSELECT --amp setup

                dt_name = 'svg' + INT_TO_STRG(2) + 'a' + INT_TO_STRG(1) + '.dt'
                dt_fulnam = defpath + dt_name
                --writeconsole('[svg2a1.dt] request open')
                OPEN FILE dt_file('RW', dt_fulnam)
                gm_status = IO_STATUS(dt_file)
                --writeconsole('[svg2a1.dt] open ok')
                IF (gm_status <> 0) THEN
                  --writeconsole('[svg2a1.dt] open fail')
                  ABORT
                ENDIF
      
               FOR l_i=1 TO ARRAY_LEN(dtafiletmp) DO
                 WRITE dt_file(dtafiletmp[l_i], CR)
               ENDFOR
               WRITE dt_file('ENDOFL -- End of file', CR)

               CLOSE FILE dt_file
               --writeconsole('[svg2a1.dt] file closed')    -- Copy DT's to FRSU
               l_copy_str = 'frcopy ' + defpath + dt_name + ' FRSU:'
               SPRUNCMD( l_copy_str, gm_status )

              ENDIF --setup servo gun                     
            ENDIF --gun is a servo gun
          
          CASE(wld1app_spdg):
            IF (spotapp_eq[1].spotgun[1].sp_srvogn = wizans_yes) THEN --gun is a servo gun
              IF (spotapp_eq[1].spotgun[1].sg_ax_setup = wizans_yes) THEN --setup servo gun
                SELECT spotapp_eq[1].spotgun[1].sg_motr OF --set up based on motor configuration
	          CASE(tol_sw44):
        	    dtafiletmp[2] = 'motor 42421' + ' --Generated by Wizard'  
          	  CASE(tol_HT23):
            	    dtafiletmp[2] = 'motor 41909' + ' --Generated by Wizard'   
          	  CASE(gswa_201_202):
            	    dtafiletmp[2] = 'motor 43301' + ' --Generated by Wizard'   
          	  CASE(gswa_101):
            	    dtafiletmp[2] = 'motor 42677' + ' --Generated by Wizard'   
          	  CASE(gswa_ima44):
            	    dtafiletmp[2] = 'motor 42933' + ' --Generated by Wizard'  
          	  CASE(gswa_ima33):
            	    dtafiletmp[2] = 'motor 43701' + ' --Generated by Wizard'   
          	  CASE(fac_4000):
            	    IF (spotapp_eq[1].spotgun[1].sg_mot2 = fac_4000_40) THEN
              	      dtafiletmp[2] = 'motor 16053' + ' --Generated by Wizard'  
            	    ENDIF
            	    IF(spotapp_eq[1].spotgun[1].sg_mot2 = fac_4000_80) THEN
              	      dtafiletmp[2] = 'motor 16055' + ' --Generated by Wizard'   
            	      ENDIF
           	  ELSE:
                ENDSELECT  --setup motor config   

                IF (got_rtu = FALSE) THEN --no RTU
                  IF (srvo_td_opt = FALSE) THEN --no servo tip dresser
                    spotapp_eq[1].spotgun[1].sg_ampno = 2
                  ELSE --servo tip dresser
                    IF (srvotd = TRUE) THEN --user selected servo tip dressing
                      spotapp_eq[1].spotgun[1].sg_ampno = 3
                    ELSE --user does not want servo tip dressing
                      spotapp_eq[1].spotgun[1].sg_ampno = 2
                    ENDIF --user selected servo tip dressing 
                  ENDIF --no servo tip dresser
                ELSE --RTU
                  IF (srvo_td_opt = FALSE) THEN --no servo tip dresser
                    spotapp_eq[1].spotgun[1].sg_ampno = 3
                  ELSE --servo tip dresser
                    IF (srvotd = TRUE) THEN --user selected servo tip dressing
                      spotapp_eq[1].spotgun[1].sg_ampno = 4
                    ELSE --user does not want servo tip dressing
                      spotapp_eq[1].spotgun[1].sg_ampno = 3
                    ENDIF --user selected servo tip dressing 
                  ENDIF --no servo tip dresser
                ENDIF --no RTU
                SELECT spotapp_eq[1].spotgun[1].sg_ampno OF --setup amp
                  CASE(2):  --amp 2
                    CNV_INT_STR(2,1,0,ls_amp_num)
                    dtafiletmp[5] = 'amp_num ' + ls_amp_num + ' -- Generated by Wizard'
                  CASE(3):  --amp 3
                    CNV_INT_STR(3,1,0,ls_amp_num)
                    dtafiletmp[5] = 'amp_num ' + ls_amp_num + ' -- Generated by Wizard'
                  CASE(4):  --amp 4
                    CNV_INT_STR(4,1,0,ls_amp_num)
                    dtafiletmp[5] = 'amp_num ' + ls_amp_num + ' -- Generated by Wizard'
                  ELSE:
                ENDSELECT --amp setup

                dt_name = 'svg' + INT_TO_STRG(2) + 'a' + INT_TO_STRG(1) + '.dt' 
                dt_fulnam = defpath + dt_name
                --writeconsole('[svg2a1.dt] request open')
                OPEN FILE dt_file('RW', dt_fulnam)
                gm_status = IO_STATUS(dt_file)
                --writeconsole('[svg2a1.dt] open ok')
                IF (gm_status <> 0) THEN
                  --writeconsole('[svg2a1.dt] open fail')
                  ABORT
                ENDIF
      
               FOR l_i=1 TO ARRAY_LEN(dtafiletmp) DO
                 WRITE dt_file(dtafiletmp[l_i], CR)
               ENDFOR
               WRITE dt_file('ENDOFL -- End of file', CR)

               CLOSE FILE dt_file
               --writeconsole('[svg2a1.dt] file closed')    -- Copy DT's to FRSU
               l_copy_str = 'frcopy ' + defpath + dt_name + ' FRSU:'
               SPRUNCMD( l_copy_str, gm_status )       

              ENDIF --setup servo gun 
            ENDIF --gun is a servo gun
            IF (spotapp_eq[1].spotgun[2].sp_srvogn = wizans_yes) THEN --gun is a servo gun
              IF (spotapp_eq[1].spotgun[2].sg_ax_setup = wizans_yes) THEN --setup servo gun
                SELECT spotapp_eq[1].spotgun[2].sg_motr OF --set up based on motor configuration
	          CASE(tol_sw44):
        	    dtafiletmpa2[2] = 'motor 42421' + ' --Generated by Wizard'   
          	  CASE(tol_HT23):
            	    dtafiletmpa2[2] = 'motor 41909' + ' --Generated by Wizard'   
          	  CASE(gswa_201_202):
            	    dtafiletmpa2[2] = 'motor 43301' + ' --Generated by Wizard'   
          	  CASE(gswa_101):
            	    dtafiletmpa2[2] = 'motor 42677' + ' --Generated by Wizard'   
          	  CASE(gswa_ima44):
            	    dtafiletmp[2] = 'motor 42933' + ' --Generated by Wizard'   
          	  CASE(gswa_ima33):
            	    dtafiletmpa2[2] = 'motor 43701' + ' --Generated by Wizard'   
          	  CASE(fac_4000):
            	    IF (spotapp_eq[1].spotgun[2].sg_mot2 = fac_4000_40) THEN
              	      dtafiletmpa2[2] = 'motor 16053' + ' --Generated by Wizard' 
            	    ENDIF
            	    IF(spotapp_eq[1].spotgun[2].sg_mot2 = fac_4000_80) THEN
              	      dtafiletmpa2[2] = 'motor 16055' + ' --Generated by Wizard'  
            	    ENDIF
           	  ELSE:
                ENDSELECT  --setup motor config

                IF (got_rtu = FALSE) THEN --no RTU
                  IF (srvo_td_opt = FALSE) THEN --no servo tip dresser
                    spotapp_eq[1].spotgun[2].sg_ampno = 2
                  ELSE --servo tip dresser
                    IF (srvotd = TRUE) THEN --user selected servo tip dressing
                      spotapp_eq[1].spotgun[2].sg_ampno = 3
                    ELSE --user does not want servo tip dressing
                      spotapp_eq[1].spotgun[2].sg_ampno = 2
                    ENDIF --user selected servo tip dressing 
                  ENDIF --no servo tip dresser
                ELSE --RTU
                  IF (srvo_td_opt = FALSE) THEN --no servo tip dresser
                    spotapp_eq[1].spotgun[2].sg_ampno = 3
                  ELSE --servo tip dresser
                    IF (srvotd = TRUE) THEN --user selected servo tip dressing
                      spotapp_eq[1].spotgun[2].sg_ampno = 4
                    ELSE --user does not want servo tip dressing
                      spotapp_eq[1].spotgun[2].sg_ampno = 3
                    ENDIF --user selected servo tip dressing 
                  ENDIF --no servo tip dresser
                ENDIF --no RTU
                SELECT spotapp_eq[1].spotgun[2].sg_ampno OF --setup amp
                  CASE(2):  --amp 2
                    CNV_INT_STR(2,1,0,ls_amp_num)
                    dtafiletmpa2[5] = 'amp_num ' + ls_amp_num + ' -- Generated by Wizard'
                  CASE(3):  --amp 3
                    CNV_INT_STR(3,1,0,ls_amp_num)
                    dtafiletmpa2[5] = 'amp_num ' + ls_amp_num + ' -- Generated by Wizard'
                  CASE(4):  --amp 4
                    CNV_INT_STR(4,1,0,ls_amp_num)
                    dtafiletmpa2[5] = 'amp_num ' + ls_amp_num + ' -- Generated by Wizard'
                  ELSE:
                ENDSELECT --amp setup

                dt_name = 'svg' + INT_TO_STRG(2) + 'a' + INT_TO_STRG(2) + '.dt' 
                dt_fulnam = defpath + dt_name
                --writeconsole('[svg2a2.dt] request open')
                OPEN FILE dt_file('RW', dt_fulnam)
                gm_status = IO_STATUS(dt_file)
                --writeconsole('[svg2a2.dt] open ok')
                IF (gm_status <> 0) THEN
                  --writeconsole('[svg2a2.dt] open fail')
                  ABORT
                ENDIF
      
               FOR l_i=1 TO ARRAY_LEN(dtafiletmpa2) DO
                 WRITE dt_file(dtafiletmpa2[l_i], CR)
               ENDFOR
               WRITE dt_file('ENDOFL -- End of file', CR)

               CLOSE FILE dt_file
               --writeconsole('[svg2a2.dt] file closed')    -- Copy DT's to FRSU
               l_copy_str = 'frcopy ' + defpath + dt_name + ' FRSU:'
               SPRUNCMD( l_copy_str, gm_status ) 

              ENDIF --setup servo gun
            ENDIF --gun 2 is a servo gun
        
          CASE(wld1app_dpsg):
            IF (spotapp_eq[1].spotgun[1].sp_srvogn = wizans_yes) THEN --gun is a servo gun
              IF (spotapp_eq[1].spotgun[1].sg_ax_setup = wizans_yes) THEN --setup servo gun
                SELECT spotapp_eq[1].spotgun[1].sg_motr OF --set up based on motor configuration
	          CASE(tol_sw44):
        	    dtafiletmp[2] = 'motor 42421' + ' --Generated by Wizard'  
          	  CASE(tol_HT23):
            	    dtafiletmp[2] = 'motor 41909' + ' --Generated by Wizard'  
          	  CASE(gswa_201_202):
            	    dtafiletmp[2] = 'motor 43301' + ' --Generated by Wizard'  
          	  CASE(gswa_101):
            	    dtafiletmp[2] = 'motor 42677' + ' --Generated by Wizard'  
          	  CASE(gswa_ima44):
            	    dtafiletmp[2] = 'motor 42933' + ' --Generated by Wizard'  
          	  CASE(gswa_ima33):
            	    dtafiletmp[2] = 'motor 43701' + ' --Generated by Wizard'  
          	  CASE(fac_4000):
            	    IF (spotapp_eq[1].spotgun[1].sg_mot2 = fac_4000_40) THEN
              	      dtafiletmp[2] = 'motor 16053' + ' --Generated by Wizard' 
            	    ENDIF
            	    IF(spotapp_eq[1].spotgun[1].sg_mot2 = fac_4000_80) THEN
              	      dtafiletmp[2] = 'motor 16055' + ' --Generated by Wizard'  
            	    ENDIF
           	  ELSE:
                ENDSELECT  --setup motor config  

                IF (got_rtu = FALSE) THEN --no RTU
                  IF (srvo_td_opt = FALSE) THEN --no servo tip dresser
                    spotapp_eq[1].spotgun[1].sg_ampno = 2
                  ELSE --servo tip dresser
                    IF (srvotd = TRUE) THEN --user selected servo tip dressing
                      spotapp_eq[1].spotgun[1].sg_ampno = 3
                    ELSE --user does not want servo tip dressing
                      spotapp_eq[1].spotgun[1].sg_ampno = 2
                    ENDIF --user selected servo tip dressing 
                  ENDIF --no servo tip dresser
                ELSE --RTU
                  IF (srvo_td_opt = FALSE) THEN --no servo tip dresser
                    spotapp_eq[1].spotgun[1].sg_ampno = 3
                  ELSE --servo tip dresser
                    IF (srvotd = TRUE) THEN --user selected servo tip dressing
                      spotapp_eq[1].spotgun[1].sg_ampno = 4
                    ELSE --user does not want servo tip dressing
                      spotapp_eq[1].spotgun[1].sg_ampno = 3
                    ENDIF --user selected servo tip dressing 
                  ENDIF --no servo tip dresser
                ENDIF --no RTU
                SELECT spotapp_eq[1].spotgun[1].sg_ampno OF --setup amp
                  CASE(2):  --amp 2
                    CNV_INT_STR(2,1,0,ls_amp_num)
                    dtafiletmp[5] = 'amp_num ' + ls_amp_num + ' -- Generated by Wizard'
                  CASE(3):  --amp 3
                    CNV_INT_STR(3,1,0,ls_amp_num)
                    dtafiletmp[5] = 'amp_num ' + ls_amp_num + ' -- Generated by Wizard'
                  CASE(4):  --amp 4
                    CNV_INT_STR(4,1,0,ls_amp_num)
                    dtafiletmp[5] = 'amp_num ' + ls_amp_num + ' -- Generated by Wizard'
                  ELSE:
                ENDSELECT --amp setup

                dt_name = 'svg' + INT_TO_STRG(2) + 'a' + INT_TO_STRG(1) + '.dt' 
                dt_fulnam = defpath + dt_name
                --writeconsole('[svg2a1.dt] request open')
                OPEN FILE dt_file('RW', dt_fulnam)
                gm_status = IO_STATUS(dt_file)
                --writeconsole('[svg2a1.dt] open ok')
                IF (gm_status <> 0) THEN
                  --writeconsole('[svg2a1.dt] open fail')
                  ABORT
                ENDIF
      
               FOR l_i=1 TO ARRAY_LEN(dtafiletmp) DO
                 WRITE dt_file(dtafiletmp[l_i], CR)
               ENDFOR
               WRITE dt_file('ENDOFL -- End of file', CR)

               CLOSE FILE dt_file
               --writeconsole('[svg2a1.dt] file closed')    -- Copy DT's to FRSU
               l_copy_str = 'frcopy ' + defpath + dt_name + ' FRSU:'
               SPRUNCMD( l_copy_str, gm_status ) 

              ENDIF --setup a servo gun        
            ENDIF --gun is a servo gun 

            IF (spotapp_eq[2].spotgun[1].sp_srvogn = wizans_yes) THEN --gun is a servo gun
              IF (spotapp_eq[2].spotgun[1].sg_ax_setup = wizans_yes) THEN --setup servo gun
                SELECT spotapp_eq[2].spotgun[1].sg_motr OF --set up based on motor configuration
	          CASE(tol_sw44):
        	    dtafiletmpa2[2] = 'motor 42421' + ' --Generated by Wizard'  
          	  CASE(tol_HT23):
            	    dtafiletmpa2[2] = 'motor 41909' + ' --Generated by Wizard'  
          	  CASE(gswa_201_202):
            	    dtafiletmpa2[2] = 'motor 43301' + ' --Generated by Wizard'  
          	  CASE(gswa_101):
            	    dtafiletmpa2[2] = 'motor 42677' + ' --Generated by Wizard'  
          	  CASE(gswa_ima44):
            	    dtafiletmp[2] = 'motor 42933' + ' --Generated by Wizard'  
          	  CASE(gswa_ima33):
            	    dtafiletmpa2[2] = 'motor 43701' + ' --Generated by Wizard'  
          	  CASE(fac_4000):
            	    IF (spotapp_eq[2].spotgun[1].sg_mot2 = fac_4000_40) THEN
              	      dtafiletmpa2[2] = 'motor 16053' + ' --Generated by Wizard' 
            	    ENDIF
            	    IF(spotapp_eq[2].spotgun[1].sg_mot2 = fac_4000_80) THEN
              	      dtafiletmpa2[2] = 'motor 16055' + ' --Generated by Wizard'  
            	    ENDIF
           	  ELSE:
                ENDSELECT  --setup motor config

                IF (got_rtu = FALSE) THEN --no RTU
                  IF (srvo_td_opt = FALSE) THEN --no servo tip dresser
                    spotapp_eq[2].spotgun[1].sg_ampno = 2
                  ELSE --servo tip dresser
                    IF (srvotd = TRUE) THEN --user selected servo tip dressing
                      spotapp_eq[2].spotgun[1].sg_ampno = 3
                    ELSE --user does not want servo tip dressing
                      spotapp_eq[2].spotgun[1].sg_ampno = 2
                    ENDIF --user selected servo tip dressing 
                  ENDIF --no servo tip dresser
                ELSE --RTU
                  IF (srvo_td_opt = FALSE) THEN --no servo tip dresser
                    spotapp_eq[2].spotgun[1].sg_ampno = 3
                  ELSE --servo tip dresser
                    IF (srvotd = TRUE) THEN --user selected servo tip dressing
                      spotapp_eq[2].spotgun[1].sg_ampno = 4
                    ELSE --user does not want servo tip dressing
                      spotapp_eq[2].spotgun[1].sg_ampno = 3
                    ENDIF --user selected servo tip dressing 
                  ENDIF --no servo tip dresser
                ENDIF --no RTU
                SELECT spotapp_eq[2].spotgun[1].sg_ampno OF --setup amp
                  CASE(2):  --amp 2
                    CNV_INT_STR(2,1,0,ls_amp_num)
                    dtafiletmpa2[5] = 'amp_num ' + ls_amp_num + ' -- Generated by Wizard'
                  CASE(3):  --amp 3
                    CNV_INT_STR(3,1,0,ls_amp_num)
                    dtafiletmpa2[5] = 'amp_num ' + ls_amp_num + ' -- Generated by Wizard'
                  CASE(4):  --amp 4
                    CNV_INT_STR(4,1,0,ls_amp_num)
                    dtafiletmpa2[5] = 'amp_num ' + ls_amp_num + ' -- Generated by Wizard'
                  ELSE:
                ENDSELECT --amp setup

                dt_name = 'svg' + INT_TO_STRG(3) + 'a' + INT_TO_STRG(1) + '.dt' 
                dt_fulnam = defpath + dt_name
                --writeconsole('[svg3a1.dt] request open')
                OPEN FILE dt_file('RW', dt_fulnam)
                gm_status = IO_STATUS(dt_file)
                --writeconsole('[svg3a1.dt] open ok')
                IF (gm_status <> 0) THEN
                  --writeconsole('[svg3a1.dt] open fail')
                  ABORT
                ENDIF
      
               FOR l_i=1 TO ARRAY_LEN(dtafiletmpa2) DO
                 WRITE dt_file(dtafiletmpa2[l_i], CR)
               ENDFOR
               WRITE dt_file('ENDOFL -- End of file', CR)

               CLOSE FILE dt_file
               --writeconsole('[svg3a1.dt] file closed')    -- Copy DT's to FRSU
               l_copy_str = 'frcopy ' + defpath + dt_name + ' FRSU:'
               SPRUNCMD( l_copy_str, gm_status ) 

              ENDIF --setup a servo gun
            ENDIF --gun 2 is a servo gun
          
        ELSE:
        ENDSELECT --configure motor appropriatey per config      

      CASE(2):  --two spot applications

        SELECT wld2_app OF

          CASE(wld2app_spdg):

            IF (spotapp_eq[1].spotgun[1].sp_srvogn = wizans_yes) THEN --gun is a servo gun
              IF (spotapp_eq[1].spotgun[1].sg_ax_setup = wizans_yes) THEN --setup servo gun
                SELECT spotapp_eq[1].spotgun[1].sg_motr OF --set up based on motor configuration
	          CASE(tol_sw44):
        	    dtafiletmp[2] = 'motor 42421' + ' --Generated by Wizard'  
          	  CASE(tol_HT23):
            	    dtafiletmp[2] = 'motor 41909' + ' --Generated by Wizard'  
          	  CASE(gswa_201_202):
            	    dtafiletmp[2] = 'motor 43301' + ' --Generated by Wizard'  
          	  CASE(gswa_101):
            	    dtafiletmp[2] = 'motor 42677' + ' --Generated by Wizard'  
          	  CASE(gswa_ima44):
            	    dtafiletmp[2] = 'motor 42933' + ' --Generated by Wizard'  
          	  CASE(gswa_ima33):
            	    dtafiletmp[2] = 'motor 43701' + ' --Generated by Wizard'  
          	  CASE(fac_4000):
            	    IF (spotapp_eq[1].spotgun[1].sg_mot2 = fac_4000_40) THEN
              	      dtafiletmp[2] = 'motor 16053' + ' --Generated by Wizard' 
            	    ENDIF
            	    IF(spotapp_eq[1].spotgun[1].sg_mot2 = fac_4000_80) THEN
              	      dtafiletmp[2] = 'motor 16055' + ' --Generated by Wizard'  
            	      ENDIF
           	  ELSE:
                ENDSELECT  --setup motor config   

                IF (got_rtu = FALSE) THEN --no RTU
                  IF (srvo_td_opt = FALSE) THEN --no servo tip dresser
                    spotapp_eq[1].spotgun[1].sg_ampno = 2
                  ELSE --servo tip dresser
                    IF (srvotd = TRUE) THEN --user selected servo tip dressing
                      spotapp_eq[1].spotgun[1].sg_ampno = 3
                    ELSE --user does not want servo tip dressing
                      spotapp_eq[1].spotgun[1].sg_ampno = 2
                    ENDIF --user selected servo tip dressing 
                  ENDIF --no servo tip dresser
                ELSE --RTU
                  IF (srvo_td_opt = FALSE) THEN --no servo tip dresser
                    spotapp_eq[1].spotgun[1].sg_ampno = 3
                  ELSE --servo tip dresser
                    IF (srvotd = TRUE) THEN --user selected servo tip dressing
                      spotapp_eq[1].spotgun[1].sg_ampno = 4
                    ELSE --user does not want servo tip dressing
                      spotapp_eq[1].spotgun[1].sg_ampno = 3
                    ENDIF --user selected servo tip dressing 
                  ENDIF --no servo tip dresser
                ENDIF --no RTU
                SELECT spotapp_eq[1].spotgun[1].sg_ampno OF --setup amp
                  CASE(2):  --amp 2
                    CNV_INT_STR(2,1,0,ls_amp_num)
                    dtafiletmp[5] = 'amp_num ' + ls_amp_num + ' -- Generated by Wizard'
                  CASE(3):  --amp 3
                    CNV_INT_STR(3,1,0,ls_amp_num)
                    dtafiletmp[5] = 'amp_num ' + ls_amp_num + ' -- Generated by Wizard'
                  CASE(4):  --amp 4
                    CNV_INT_STR(4,1,0,ls_amp_num)
                    dtafiletmp[5] = 'amp_num ' + ls_amp_num + ' -- Generated by Wizard'
                  ELSE:
                ENDSELECT --amp setup

                dt_name = 'svg' + INT_TO_STRG(2) + 'a' + INT_TO_STRG(1) + '.dt' 
                dt_fulnam = defpath + dt_name
                --writeconsole('[svg2a1.dt] request open')
                OPEN FILE dt_file('RW', dt_fulnam)
                gm_status = IO_STATUS(dt_file)
                --writeconsole('[svg2a1.dt] open ok')
                IF (gm_status <> 0) THEN
                  --writeconsole('[svg2a1.dt] open fail')
                  ABORT
                ENDIF
      
               FOR l_i=1 TO ARRAY_LEN(dtafiletmp) DO
                 WRITE dt_file(dtafiletmp[l_i], CR)
               ENDFOR
               WRITE dt_file('ENDOFL -- End of file', CR)

               CLOSE FILE dt_file
               --writeconsole('[svg2a1.dt] file closed')    -- Copy DT's to FRSU
               l_copy_str = 'frcopy ' + defpath + dt_name + ' FRSU:'
               SPRUNCMD( l_copy_str, gm_status )       

              ENDIF --setup servo gun 
            ENDIF --gun is a servo gun
            IF (spotapp_eq[1].spotgun[2].sp_srvogn = wizans_yes) THEN --gun is a servo gun
              IF (spotapp_eq[1].spotgun[2].sg_ax_setup = wizans_yes) THEN --setup servo gun
                SELECT spotapp_eq[1].spotgun[2].sg_motr OF --set up based on motor configuration
	          CASE(tol_sw44):
        	    dtafiletmpa2[2] = 'motor 42421' + ' --Generated by Wizard'  
          	  CASE(tol_HT23):
            	    dtafiletmpa2[2] = 'motor 41909' + ' --Generated by Wizard'  
          	  CASE(gswa_201_202):
            	    dtafiletmpa2[2] = 'motor 43301' + ' --Generated by Wizard'  
          	  CASE(gswa_101):
            	    dtafiletmpa2[2] = 'motor 42677' + ' --Generated by Wizard'  
          	  CASE(gswa_ima44):
            	    dtafiletmp[2] = 'motor 42933' + ' --Generated by Wizard'  
          	  CASE(gswa_ima33):
            	    dtafiletmpa2[2] = 'motor 43701'  + ' --Generated by Wizard' 
          	  CASE(fac_4000):
            	    IF (spotapp_eq[1].spotgun[2].sg_mot2 = fac_4000_40) THEN
              	      dtafiletmpa2[2] = 'motor 16053' + ' --Generated by Wizard' 
            	    ENDIF
            	    IF(spotapp_eq[1].spotgun[2].sg_mot2 = fac_4000_80) THEN
              	      dtafiletmpa2[2] = 'motor 16055' + ' --Generated by Wizard'  
            	    ENDIF
           	  ELSE:
                ENDSELECT  --setup motor config

                IF (got_rtu = FALSE) THEN --no RTU
                  IF (srvo_td_opt = FALSE) THEN --no servo tip dresser
                    spotapp_eq[1].spotgun[2].sg_ampno = 2
                  ELSE --servo tip dresser
                    IF (srvotd = TRUE) THEN --user selected servo tip dressing
                      spotapp_eq[1].spotgun[2].sg_ampno = 3
                    ELSE --user does not want servo tip dressing
                      spotapp_eq[1].spotgun[2].sg_ampno = 2
                    ENDIF --user selected servo tip dressing 
                  ENDIF --no servo tip dresser
                ELSE --RTU
                  IF (srvo_td_opt = FALSE) THEN --no servo tip dresser
                    spotapp_eq[1].spotgun[2].sg_ampno = 3
                  ELSE --servo tip dresser
                    IF (srvotd = TRUE) THEN --user selected servo tip dressing
                      spotapp_eq[1].spotgun[2].sg_ampno = 4
                    ELSE --user does not want servo tip dressing
                      spotapp_eq[1].spotgun[2].sg_ampno = 3
                    ENDIF --user selected servo tip dressing 
                  ENDIF --no servo tip dresser
                ENDIF --no RTU

                SELECT spotapp_eq[1].spotgun[2].sg_ampno OF --setup amp
                  CASE(2):  --amp 2
                    CNV_INT_STR(2,1,0,ls_amp_num)
                    dtafiletmpa2[5] = 'amp_num ' + ls_amp_num + ' -- Generated by Wizard'
                  CASE(3):  --amp 3
                    CNV_INT_STR(3,1,0,ls_amp_num)
                    dtafiletmpa2[5] = 'amp_num ' + ls_amp_num + ' -- Generated by Wizard'
                  CASE(4):  --amp 4
                    CNV_INT_STR(4,1,0,ls_amp_num)
                    dtafiletmpa2[5] = 'amp_num ' + ls_amp_num + ' -- Generated by Wizard'
                  ELSE:
                ENDSELECT --amp setup

                dt_name = 'svg' + INT_TO_STRG(2) + 'a' + INT_TO_STRG(2) + '.dt' 
                dt_fulnam = defpath + dt_name
                --writeconsole('[svg2a2.dt] request open')
                OPEN FILE dt_file('RW', dt_fulnam)
                gm_status = IO_STATUS(dt_file)
                --writeconsole('[svg2a2.dt] open ok')
                IF (gm_status <> 0) THEN
                  --writeconsole('[svg2a2.dt] open fail')
                  ABORT
                ENDIF
      
               FOR l_i=1 TO ARRAY_LEN(dtafiletmpa2) DO
                 WRITE dt_file(dtafiletmpa2[l_i], CR)
               ENDFOR
               WRITE dt_file('ENDOFL -- End of file', CR)

               CLOSE FILE dt_file
               --writeconsole('[svg2a2.dt] file closed')    -- Copy DT's to FRSU
               l_copy_str = 'frcopy ' + defpath + dt_name + ' FRSU:'
               SPRUNCMD( l_copy_str, gm_status ) 

              ENDIF --setup servo gun
            ENDIF --gun 2 is a servo gun

          CASE(wld2app_dpsg, wld2app_cgpg):

            IF (spotapp_eq[1].spotgun[1].sp_srvogn = wizans_yes) THEN --gun is a servo gun
              IF (spotapp_eq[1].spotgun[1].sg_ax_setup = wizans_yes) THEN --setup servo gun
                SELECT spotapp_eq[1].spotgun[1].sg_motr OF --set up based on motor configuration
	          CASE(tol_sw44):
        	    dtafiletmp[2] = 'motor 42421' + ' --Generated by Wizard'  
          	  CASE(tol_HT23):
            	    dtafiletmp[2] = 'motor 41909' + ' --Generated by Wizard'  
          	  CASE(gswa_201_202):
            	    dtafiletmp[2] = 'motor 43301' + ' --Generated by Wizard'  
          	  CASE(gswa_101):
            	    dtafiletmp[2] = 'motor 42677' + ' --Generated by Wizard'  
          	  CASE(gswa_ima44):
            	    dtafiletmp[2] = 'motor 42933' + ' --Generated by Wizard'  
          	  CASE(gswa_ima33):
            	    dtafiletmp[2] = 'motor 43701' + ' --Generated by Wizard'  
          	  CASE(fac_4000):
            	    IF (spotapp_eq[1].spotgun[1].sg_mot2 = fac_4000_40) THEN
              	      dtafiletmp[2] = 'motor 16053' + ' --Generated by Wizard'
            	    ENDIF
            	    IF(spotapp_eq[1].spotgun[1].sg_mot2 = fac_4000_80) THEN
              	      dtafiletmp[2] = 'motor 16055' + ' --Generated by Wizard'  
            	    ENDIF
           	  ELSE:
                ENDSELECT  --setup motor config  

                IF (got_rtu = FALSE) THEN --no RTU
                  IF (srvo_td_opt = FALSE) THEN --no servo tip dresser
                    spotapp_eq[1].spotgun[1].sg_ampno = 2
                  ELSE --servo tip dresser
                    IF (srvotd = TRUE) THEN --user selected servo tip dressing
                      spotapp_eq[1].spotgun[1].sg_ampno = 3
                    ELSE --user does not want servo tip dressing
                      spotapp_eq[1].spotgun[1].sg_ampno = 2
                    ENDIF --user selected servo tip dressing 
                  ENDIF --no servo tip dresser
                ELSE --RTU
                  IF (srvo_td_opt = FALSE) THEN --no servo tip dresser
                    spotapp_eq[1].spotgun[1].sg_ampno = 3
                  ELSE --servo tip dresser
                    IF (srvotd = TRUE) THEN --user selected servo tip dressing
                      spotapp_eq[1].spotgun[1].sg_ampno = 4
                    ELSE --user does not want servo tip dressing
                      spotapp_eq[1].spotgun[1].sg_ampno = 3
                    ENDIF --user selected servo tip dressing 
                  ENDIF --no servo tip dresser
                ENDIF --no RTU
                SELECT spotapp_eq[1].spotgun[1].sg_ampno OF --setup amp
                  CASE(2):  --amp 2
                    CNV_INT_STR(2,1,0,ls_amp_num)
                    dtafiletmp[5] = 'amp_num ' + ls_amp_num + ' -- Generated by Wizard'
                  CASE(3):  --amp 3
                    CNV_INT_STR(3,1,0,ls_amp_num)
                    dtafiletmp[5] = 'amp_num ' + ls_amp_num + ' -- Generated by Wizard'
                  CASE(4):  --amp 4
                    CNV_INT_STR(4,1,0,ls_amp_num)
                    dtafiletmp[5] = 'amp_num ' + ls_amp_num + ' -- Generated by Wizard'
                  ELSE:
                ENDSELECT --amp setup

                dt_name = 'svg' + INT_TO_STRG(2) + 'a' + INT_TO_STRG(1) + '.dt' 
                dt_fulnam = defpath + dt_name
                --writeconsole('[svg2a1.dt] request open')
                OPEN FILE dt_file('RW', dt_fulnam)
                gm_status = IO_STATUS(dt_file)
                --writeconsole('[svg2a1.dt] open ok')
                IF (gm_status <> 0) THEN
                  --writeconsole('[svg2a1.dt] open fail')
                  ABORT
                ENDIF
      
               FOR l_i=1 TO ARRAY_LEN(dtafiletmp) DO
                 WRITE dt_file(dtafiletmp[l_i], CR)
               ENDFOR
               WRITE dt_file('ENDOFL -- End of file', CR)

               CLOSE FILE dt_file
               --writeconsole('[svg2a1.dt] file closed')    -- Copy DT's to FRSU
               l_copy_str = 'frcopy ' + defpath + dt_name + ' FRSU:'
               SPRUNCMD( l_copy_str, gm_status ) 

              ENDIF --setup a servo gun        
            ENDIF --gun is a servo gun 

            IF (spotapp_eq[2].spotgun[1].sp_srvogn = wizans_yes) THEN --gun is a servo gun
              IF (spotapp_eq[2].spotgun[1].sg_ax_setup = wizans_yes) THEN --setup servo gun
                SELECT spotapp_eq[2].spotgun[1].sg_motr OF --set up based on motor configuration
	          CASE(tol_sw44):
        	    dtafiletmpa2[2] = 'motor 42421' + ' --Generated by Wizard'  
          	  CASE(tol_HT23):
            	    dtafiletmpa2[2] = 'motor 41909' + ' --Generated by Wizard'  
          	  CASE(gswa_201_202):
            	    dtafiletmpa2[2] = 'motor 43301' + ' --Generated by Wizard'  
          	  CASE(gswa_101):
            	    dtafiletmpa2[2] = 'motor 42677' + ' --Generated by Wizard'  
          	  CASE(gswa_ima44):
            	    dtafiletmp[2] = 'motor 42933' + ' --Generated by Wizard'  
          	  CASE(gswa_ima33):
            	    dtafiletmpa2[2] = 'motor 43701' + ' --Generated by Wizard'  
          	  CASE(fac_4000):
            	    IF (spotapp_eq[2].spotgun[1].sg_mot2 = fac_4000_40) THEN
              	      dtafiletmpa2[2] = 'motor 16053' + ' --Generated by Wizard' 
            	    ENDIF
            	    IF(spotapp_eq[2].spotgun[1].sg_mot2 = fac_4000_80) THEN
              	      dtafiletmpa2[2] = 'motor 16055' + ' --Generated by Wizard'  
            	    ENDIF
           	  ELSE:
                ENDSELECT  --setup motor config

                IF (got_rtu = FALSE) THEN --no RTU
                  IF (srvo_td_opt = FALSE) THEN --no servo tip dresser
                    spotapp_eq[2].spotgun[1].sg_ampno = 2
                  ELSE --servo tip dresser
                    IF (srvotd = TRUE) THEN --user selected servo tip dressing
                      spotapp_eq[2].spotgun[1].sg_ampno = 3
                    ELSE --user does not want servo tip dressing
                      spotapp_eq[2].spotgun[1].sg_ampno = 2
                    ENDIF --user selected servo tip dressing 
                  ENDIF --no servo tip dresser
                ELSE --RTU
                  IF (srvo_td_opt = FALSE) THEN --no servo tip dresser
                    spotapp_eq[2].spotgun[1].sg_ampno = 3
                  ELSE --servo tip dresser
                    IF (srvotd = TRUE) THEN --user selected servo tip dressing
                      spotapp_eq[2].spotgun[1].sg_ampno = 4
                    ELSE --user does not want servo tip dressing
                      spotapp_eq[2].spotgun[1].sg_ampno = 3
                    ENDIF --user selected servo tip dressing 
                  ENDIF --no servo tip dresser
                ENDIF --no RTU

                SELECT spotapp_eq[2].spotgun[1].sg_ampno OF --setup amp
                  CASE(2):  --amp 2
                    CNV_INT_STR(2,1,0,ls_amp_num)
                    dtafiletmpa2[5] = 'amp_num ' + ls_amp_num + ' -- Generated by Wizard'
                  CASE(3):  --amp 3
                    CNV_INT_STR(3,1,0,ls_amp_num)
                    dtafiletmpa2[5] = 'amp_num ' + ls_amp_num + ' -- Generated by Wizard'
                  CASE(4):  --amp 4
                    CNV_INT_STR(4,1,0,ls_amp_num)
                    dtafiletmpa2[5] = 'amp_num ' + ls_amp_num + ' -- Generated by Wizard'
                  ELSE:
                ENDSELECT --amp setup

                dt_name = 'svg' + INT_TO_STRG(3) + 'a' + INT_TO_STRG(1) + '.dt' 
                dt_fulnam = defpath + dt_name
                --writeconsole('[svg3a1.dt] request open')
                OPEN FILE dt_file('RW', dt_fulnam)
                gm_status = IO_STATUS(dt_file)
                --writeconsole('[svg3a1.dt] open ok')
                IF (gm_status <> 0) THEN
                  --writeconsole('[svg3a1.dt] open fail')
                  ABORT
                ENDIF
      
               FOR l_i=1 TO ARRAY_LEN(dtafiletmpa2) DO
                 WRITE dt_file(dtafiletmpa2[l_i], CR)
               ENDFOR
               WRITE dt_file('ENDOFL -- End of file', CR)

               CLOSE FILE dt_file
               --writeconsole('[svg3a1.dt] file closed')    -- Copy DT's to FRSU
               l_copy_str = 'frcopy ' + defpath + dt_name + ' FRSU:'
               SPRUNCMD( l_copy_str, gm_status ) 

              ENDIF --setup a servo gun
            ENDIF --gun 2 is a servo gun

          ELSE:
        ENDSELECT

      ELSE:

    ENDSELECT --number of spot applications

  ENDIF --swg on robot
 
END dt_sg_var
-----------------------------------------------------------------------------
ROUTINE dt_sg_gpcfg
-- PURPOSE: Routine to create DT files and load to FRSU 
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
VAR
  l_i          : INTEGER
  l_copy_str   : STRING[32]
  l_ans_real   : REAL
  
BEGIN


IF (g_servog_opt) ThEN --servo gun option is loaded on the robot
      
  -- Correct number of groups configured just update svgX.dt files
  -- Must Add additional axis to groups.
  -- ****************************************************************************
  -- Build SVG2.DT files:
  -- ****************************************************************************
  IF got_rtu = FALSE THEN

    IF (srvo_td_opt = FALSE) THEN  --no servo tip dresser
      dtgfiletmp[1] = 'hw_strt 7 -- Generated by Wizard' -- Determined by Application
    ELSE  --servo tip dresser         
      IF (srvotd = TRUE) THEN  --user selected servo tip dresesr in wizard
        IF ((wld1_app = wld1app_spdg) OR (wld1_app = wld1app_dpsg) OR (numwldctrl = 2)) THEN --possibility of two servo tip dressers
          IF ((wld1_app = wld1app_spdg) OR (wld2_app = wld2app_spdg)) THEN --one equipment, two guns
            IF ((spotapp_eq[1].spotgun[1].sp_srvo_td = wizans_yes) AND (spotapp_eq[1].spotgun[2].sp_srvo_td = wizans_yes)) THEN --two servo tip dressers
              dtgfiletmp[1] = 'hw_strt 9 -- Generated by Wizard' -- Determined by Application
            ELSE --only one servo tip dresser
              dtgfiletmp[1] = 'hw_strt 8 -- Generated by Wizard' -- Determined by Application
            ENDIF  --two servo tip dressers
          ELSE --two equipment, one gun each
            IF ((spotapp_eq[1].spotgun[1].sp_srvo_td = wizans_yes) AND (spotapp_eq[2].spotgun[1].sp_srvo_td = wizans_yes)) THEN --two servo tip dressers
              dtgfiletmp[1] = 'hw_strt 9 -- Generated by Wizard' -- Determined by Application
            ELSE --only one servo tip dresser
              dtgfiletmp[1] = 'hw_strt 8 -- Generated by Wizard' -- Determined by Application
            ENDIF  --two servo tip dressers
          ENDIF --one equipment, two guns
        ELSE -- only one servo tip dresser
          dtgfiletmp[1] = 'hw_strt 8 -- Generated by Wizard' -- Determined by Application
        ENDIF
      ELSE
        dtgfiletmp[1] = 'hw_strt 7 -- Generated by Wizard' -- Determined by Application
      ENDIF  --user selected servo tip dress in wizard
    ENDIF --servo tip dresser

  ELSE  --RTU

    IF (srvo_td_opt = FALSE) THEN  --no servo tip dresser
      dtgfiletmp[1] = 'hw_strt 8 -- Generated by Wizard' -- Determined by Application
    ELSE --servo tip dresser
      IF (srvotd = TRUE) THEN  --user selected servo tip dresser in wizard
        IF ((wld1_app = wld1app_spdg) OR (wld1_app = wld1app_dpsg) OR (numwldctrl = 2)) THEN --possibility of two servo tip dressers
          IF ((wld1_app = wld1app_spdg) OR (wld2_app = wld2app_spdg)) THEN --one equipment, two guns
            IF ((spotapp_eq[1].spotgun[1].sp_srvo_td = wizans_yes) AND (spotapp_eq[1].spotgun[2].sp_srvo_td = wizans_yes)) THEN --two servo tip dressers
              dtgfiletmp[1] = 'hw_strt 10 -- Generated by Wizard' -- Determined by Application
            ELSE --only one servo tip dresser
              dtgfiletmp[1] = 'hw_strt 9 -- Generated by Wizard' -- Determined by Application
            ENDIF  --two servo tip dressers
          ELSE --two equipment, one gun each
            IF ((spotapp_eq[1].spotgun[1].sp_srvo_td = wizans_yes) AND (spotapp_eq[2].spotgun[1].sp_srvo_td = wizans_yes)) THEN --two servo tip dressers
              dtgfiletmp[1] = 'hw_strt 10 -- Generated by Wizard' -- Determined by Application
            ELSE --only one servo tip dresser
              dtgfiletmp[1] = 'hw_strt 9 -- Generated by Wizard' -- Determined by Application
            ENDIF  --two servo tip dressers
          ENDIF --one equipment, two guns
        ELSE -- only one servo tip dresser
          dtgfiletmp[1] = 'hw_strt 9 -- Generated by Wizard' -- Determined by Application
        ENDIF
      ELSE
        dtgfiletmp[1] = 'hw_strt 8 -- Generated by Wizard' -- Determined by Application
      ENDIF --user selected servo tip dresser in wizard
    ENDIF --servo tip dresser

  ENDIF -- RTU

  IF $spoteqsetup[1].$num_guns = 2 THEN
    dtgfiletmp[2] = 'a1_exist 1 -- Generated by Wizard' -- Determined by Application
    dtgfiletmp[3] = 'a2_exist 1 -- Generated by Wizard' -- Determined by Application
  ELSE
    dtgfiletmp[2] = 'a1_exist 1 -- Generated by Wizard' -- Determined by Application
    dtgfiletmp[3] = 'a2_exist 0 -- Generated by Wizard' -- Determined by Application
  ENDIF

  -- defpath = 'fr:\'
  -- Because servo guns always start on group #2 we will have to add 
  -- a 1 to p_equipment.       \
  -- Always adding Group #3 ONLY, User should NOT delete group 2 
  dt_name = 'svg' + INT_TO_STRG(2) + '.dt'
 
  dt_fulnam = defpath + dt_name
  OPEN FILE dt_file('RW', dt_fulnam)
  gm_status = IO_STATUS(dt_file)
  IF (gm_status <> 0) THEN
    WRITE TPERROR(CHR(cc_clear_win),'Open.',dt_name,' failed',CR)
    ABORT
  ENDIF
      
  FOR l_i=1 TO ARRAY_LEN(dtgfiletmp) DO
    WRITE dt_file(dtgfiletmp[l_i], CR)
  ENDFOR
  WRITE dt_file('ENDOFL -- End of file', CR)

  CLOSE FILE dt_file
  
  -- Copy DT's to FRSU
  l_copy_str = 'frcopy ' + defpath + dt_name + ' FRSU:'
  SPRUNCMD( l_copy_str, gm_status )

  -- ****************************************************************************
  -- Build SVG3.DT files:
  -- ****************************************************************************

  IF (wld1_app = wld1app_dpsg) OR (wld2_app = wld2app_dpsg) OR (wld2_app = wld2app_cgpg) THEN --group 3 is used

    IF got_rtu = FALSE THEN  

      IF (srvo_td_opt = FALSE) THEN  --no servo tip dresser
         dtg2filetmp[1] = 'hw_strt 8 -- Generated by Wizard' -- Determined by Application
      ELSE --servo tip dresser

        IF (srvotd = TRUE) THEN  --user selected servo tip dresesr in wizard
          IF (spotapp_eq[1].spotgun[1].sp_srvo_td = wizans_yes) AND (spotapp_eq[2].spotgun[1].sp_srvo_td = wizans_yes) THEN --two servo tip dressers
            dtg2filetmp[1] = 'hw_strt 10 -- Generated by Wizard' -- Determined by Application
          ELSE --user only selected one servo tip dresser 
            dtg2filetmp[1] = 'hw_strt 9 -- Generated by Wizard' -- Determined by Application
          ENDIF --user selected servo tip dresser in wizard
        ELSE --user did not select servo tip dresser 
          dtg2filetmp[1] = 'hw_strt 8 -- Generated by Wizard' -- Determined by Application  --no servo tip dressers selected by user
        ENDIF --user selected servo tip dresser

      ENDIF -- servo tip dresser

    ELSE  --RTU

      IF (srvo_td_opt = FALSE) THEN  --no servo tip dresser
        dtg2filetmp[1] = 'hw_strt 9 -- Generated by Wizard' -- Determined by Application
      ELSE --servo tip dresser

        IF (srvotd = TRUE) THEN  --user selected servo tip dresesr in wizard
          IF (spotapp_eq[1].spotgun[1].sp_srvo_td = wizans_yes) AND (spotapp_eq[2].spotgun[1].sp_srvo_td = wizans_yes) THEN --two servo tip dressers
            dtg2filetmp[1] = 'hw_strt 11 -- Generated by Wizard' -- Determined by Application
          ELSE --user only selected one servo tip dresser 
            dtg2filetmp[1] = 'hw_strt 10 -- Generated by Wizard' -- Determined by Application
          ENDIF --user selected servo tip dresser in wizard
        ELSE --user did not select servo tip dresser 
          dtg2filetmp[1] = 'hw_strt 9 -- Generated by Wizard' -- Determined by Application  --no servo tip dressers selected by user
        ENDIF --user selected servo tip dresser

      ENDIF --servo tip dresser

    ENDIF  --RTU

    dtg2filetmp[2] = 'a1_exist 1 -- Generated3 by Wizard' -- Determined by Application
    dtg2filetmp[3] = 'a2_exist 0 -- Generated3 by Wizard' -- Determined by Application
      
    -- defpath = 'fr:\'
    -- Because servo guns always start on group #2 we will have to add 
    -- a 1 to p_equipment.       \
    -- Always adding Group #3 ONLY, User should NOT delete group 2 
    dt_name = 'svg' + INT_TO_STRG(3) + '.dt'

    dt_fulnam = defpath + dt_name
    OPEN FILE dt_file('RW', dt_fulnam)
    gm_status = IO_STATUS(dt_file)
    IF (gm_status <> 0) THEN
      WRITE TPERROR(CHR(cc_clear_win),'Open.',dt_name,' failed',CR)
      ABORT
    ENDIF
      
    FOR l_i=1 TO ARRAY_LEN(dtg2filetmp) DO
      WRITE dt_file(dtg2filetmp[l_i], CR)
    ENDFOR
    WRITE dt_file('ENDOFL -- End of file', CR)

    CLOSE FILE dt_file
  
    -- Copy DT's to FRSU
    l_copy_str = 'frcopy ' + defpath + dt_name + ' FRSU:'
    SPRUNCMD( l_copy_str, gm_status )

  ENDIF --two servo gun groups
    
ENDIF --servo gun option is loaded on the robot

END dt_sg_gpcfg
-----------------------------------------------------------------------------
ROUTINE grp_cfg
-- PURPOSE: add or delete groups
--          
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
VAR
  l_gear_dat   : STRING[5]
  ls_gear_dat  : STRING[16]
  ls_max_spd   : STRING[16]
  ls_low_lim   : STRING[16]
  ls_amp_num   : STRING[16]
  ls_group     : STRING[1]
  ls_gun       : STRING[1]
  l_ans_int    : INTEGER
  l_gun        : INTEGER
  l_kk         : INTEGER
  axs_num      : INTEGER
  amp_typ      : INTEGER
  amp_num      : INTEGER


BEGIN

IF (g_servog_opt) ThEN --servo gun option is loaded on the robot

  --must add or subtract groups
  IF ((grp_add = TRUE) OR (grp_sub = TRUE)) THEN 

    IF UNINIT(frvrc) THEN
      frvrc = FALSE
    ENDIF

    IF NOT frvrc THEN
      -- Prompt user to insert MEDIA
      REPEAT
        CLR_STND_SCR(gm_status)
        WRITE(CR,'Select Media',CR)
        WRITE ('1. MC:  Memory Card',CR)
        WRITE ('2. UD1: Robot Panel USB',CR)
        WRITE ('Enter Selection 1-2:  ')
        READ (l_ans_int)
      UNTIL ((l_ans_int = 1) OR (l_ans_int = 2))
        IF l_ans_int = 1 THEN
	  $LOAD_DEVICE = 'MC:'
        ELSE
          $LOAD_DEVICE = 'UD1:'
          media_sel = 4
          med_status = 0
          med_frm_done = TRUE
          medinitstat = TRUE
        ENDIF
     ENDIF

   IF (grp_add = TRUE) THEN --need to add a group  

     -- *************************************************************
     -- The following was copied and modified from swirobt
     -- *************************************************************
     gnum = $SCR.$NUM_GROUP

     gnum = gnum + 1
     IF (gnum > 5) THEN
       gnum = 5
     ENDIF

     -- Temp. save of the value
     dsbl_msk_val = $scr.$mb_dsbl_msk  
     -- Set to zero so that all loaded softparts get initialized.
     Set_I_sVar('$scr.$mb_dsbl_msk', 0)

     IF (rloaded[5, gnum]) THEN 
       -- May have to do a search for h869=nobot just incase
       -- Robot lib changes. We will always be adding a nobot axis for servo guns
       gm_status = reinstall ('product', 'h869', rvolume[5])
       IF (gm_status = 0) THEN
         $APPLICATION[6] = context.version
       ENDIF
     ELSE
       IF ($rob_ord_num[gnum] = '') THEN
         gm_status = install ('product', 'h869', rvolume[5], ROBOT_C, rorder[5], FALSE) 
         IF (gm_status = 0) THEN
           $APPLICATION[6] = context.version
           rloaded[5, gnum] = TRUE 
           rdisplay[5, gnum] = LOAD_C 
         ENDIF 
         $SCR.$NUM_GROUP = gnum
         spruncmd ('RE_CTRL', gm_status)
       ELSE
       ENDIF
     ENDIF

  ENDIF -- need to add group

  IF (grp_sub = TRUE) THEN --need to subtract a group
        
    -- *************************************************************
    -- The following was copied and modified from swirobt
    -- *************************************************************
      IF $SCR.$NUM_GROUP > 1 THEN
        GNUM = $SCR.$NUM_GROUP
        found = 0
        FOR l_kk = 1 TO rob_index-1 DO
          IF rloaded[l_kk, gnum] THEN
            found = l_kk
          ENDIF
        ENDFOR
        IF found > 0 THEN
          save_ordfil2 (gm_status) -- remove last group from orderfile
          IF (gm_status = 0) THEN
            -- need to remove deliverables and change $feature
            rloaded[found, gnum] = FALSE

            -- Delete ATR and AMP setting for the group which
            -- is being deleted. The following sysvars are deleted here.
            --   $SCR.$ATR[] of the group which is being deleted
            --   $SCR.$AMP_TYPE[] of the group which is being deleted
            --   $SCR.$CAP_AMP_DIS[] of the group which is being deleted
            FOR axs_num = 1 TO 9 DO
              amp_num = $SCR_GRP[GNUM].$AXS_AMP_NUM[axs_num]
              IF (amp_num <> 0) THEN
                amp_typ = $SCR.$AMP_TYPE[amp_num]
              ELSE
                amp_typ = 0
              ENDIF
              IF ($SCR_GRP[GNUM].$AXISORDER[axs_num] <> 0) THEN
                rldlatr2(($SCR_GRP[GNUM].$AXISORDER[axs_num]), amp_typ)
              ENDIF
              $SCR_GRP[GNUM].$AXS_AMP_NUM[axs_num] = 0
              rldlatyp(amp_num) -- delete amp setting
            ENDFOR  
            $SCR.$NUM_GROUP = $SCR.$NUM_GROUP  - 1
            GNUM = $SCR.$NUM_GROUP
            $SCR.$NUM_RLIBSOC = $SCR.$NUM_GROUP

            spruncmd ('RE_CTRL', gm_status)
          ENDIF
        ENDIF
      ENDIF
    ENDIF -- need to subtract a group

  ENDIF --must add or delete groups

ENDIF --swg option on robot

END grp_cfg
-----------------------------------------------------------------------------
ROUTINE set_spotvar3
-- PURPOSE: after wizard is completed, before spot config menu, 
--          run additional motor setup
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------

BEGIN

IF (numwldctrl <> 0) THEN --spot welding applciation
  
  set_swgmotor

  IF (setup_axis = TRUE) THEN --configure servo gun axis 
    initSpot3var
    initsgdt
    init_grpcfg
    set_tddt

    IF (wld1_app = wld1app_cg) AND (UseToolChngr = TRUE) AND (sgunchng = TRUE) THEN --carried servo gun change app
      dt_sgtcgpcfg
      dt_sgtc_var
    ELSE  --do standard DT file setup
      dt_sg_gpcfg
      dt_sg_var
    ENDIF

    init_allaxis  --this must happen after dt_sg_var, need dt files configured before launching
                  --motor setup
    grp_cfg
  ENDIF --configure servo gun axis

ENDIF --numwldctrl

END set_spotvar3
-----------------------------------------------------------------------------
BEGIN

END GMSPOTVR3
