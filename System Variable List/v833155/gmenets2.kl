-- -----------------------------------------------------------------------
--
--   MODULE:         GMENETS2.KL
--   TITLE:          GMENETS2 PROGRAM
--
--
--   WRITTEN BY:     RANDY KOSASKI
--   REVISION DATE:  1/23/16
--
--   LANGUAGE:       KAREL 8.30 R30iB
--   CONTROL GROUP:  BODY SHOP EXECUTION GROUP
--   STATUS:
--
--
--   ORDER NUMBER:   000000
--   PROJECT NAME:   GOOD CUSTOMER
--
--
--         FANUC Robotics retains rights in any and all Software
--         contained in the material attached hereto and said
--         Software may not be copied or reproduced without the
--         written permission of FANUC Robotics.
--
--         All Software, (C) Copyright FANUC Robotics Corporation, 2016
--         DESCRIPTION: X PROGRAM
--
--         HISTORY OF CHANGES:
--
--         REVISION   DATE       BY               COMMENTS
--         --------   ---------  ---------------  --------------------
--                    2017/03/21 marchaka         Add laser line controller setup routine
--                    2018/03/12 marchaka         Add laser app setup routines
--                    2018/03/26 marchaka         Add laser head scan sonic ENET settings
--                    2018/04/30 marchaka         Update Lessmuller and WireFeeder ENET settings.  Add Trumpf Laser Gen Settings.
--                    2019/09/16 marchaka         Add IPFO with RSI Interface setup routine
--                    2019/09/27 marchaka         Change IPFO with RSI input and output size to 50
--
--
--
--
--------------------------------------------------------------------------
PROGRAM GMENETS2

%COMMENT = 'Enet 2 Routines'
%NOLOCKGROUP
%STACKSIZE = 1000
%RWACCESS
%NOPAUSE = ERROR + COMMAND + TPENABLE


CONST
Revision='2019-09-27'
%INCLUDE gmcnstnt  -- Constant file for GM

VAR

  Current_Ver  IN SHADOW :STRING[32] -- Set equal to Version constant in initialization routine

  gm_status  : INTEGER

    Armor_Err_Sv,
    Cell_Err_Sv,
    WTC_Err_Sv,
    EtStd_Err_Sv,
    HenRb_Err_Sv,
    Nelsn_Err_Sv,
    SqrD_Err_Sv,
    RqSvr_Err_Sv,
    Tool_Err_Sv,
    Sca_Err_Sv,
    Weber_Err_Sv,
    LsrLn_Err_Sv,
    Bwirf_Err_Sv,
    Lproc_Err_Sv,
    ScSon_Err_Sv,
    Trumf_Err_Sv,
    Ipfo_Err_Sv,
    IpfoR_Err_Sv,
    Plwm_Err_Sv IN SHADOW FROM GMENETSU: INTEGER -- Used for the Severity $EIP_CONN[x].$ERR_SV setting by GMENETS2

%INCLUDE gmcfgcel -- used for the cell variables for configuration in the wizard

%INCLUDE GMRDUTIL -- Utility Routine for Int@str, VerifyAnswer Etc...
ROUTINE writeLog(p_message: STRING; isError: BOOLEAN) FROM GMWIZLOG
-----------------------------------------------------------------------------
ROUTINE TURK_BLCEN(P_Con_Num:INTEGER;p_Con_Name:STRING)
-- PURPOSE:Setup the EIP connection for the Input Connection # passed
--
--
--
-- INPUT:   Connection Number to Setup
--          Some setting are assume and Hard coded based on the type Setup
--          Connection Name to comment the connection to
--          for instance the input block are assumed to be specific brands
--          - Turck analog block BLCEN-1M12MT-1CNT-ENC
--
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
VAR
  Con_String :STRING[3]
  Con_name : STRING[33]
  l_host_ip : STRING[33]
  l_entry :INTEGER

BEGIN
 -- Check the severity has been setup
    Ch_err_sv

     Current_Ver = Version

-- Convert the passed integer to string to add to the variable for setting.
  Con_String = int2str(P_Con_Num)

-- set the description comment set above
  Set_S_Svar('$EIP_CONN['+Con_String+'].$DESC',P_Con_Name)

-- Setup the host name for the device i.e. its IPConfig
  l_host_ip = '192.168.1.'+Con_String -- The host name is equal to base setup and Passed element
  Set_S_Svar('$EIP_CONN['+Con_String+'].$HOST',l_host_ip)

  -- Set Connection is Scanner
  set_B_sVar('$EIP_CONN['+Con_String+'].$IS_SC',TRUE)
  -- Set to Warning Error Serverity
  Set_I_Svar('$EIP_CONN['+Con_String+'].$ERR_SV',Tool_Err_Sv)--0= stop 1= warn,2=pause
  -- Set Connection State
  Set_I_Svar('$EIP_CONN['+Con_String+'].$STATE',2)
  --$DATATYPE = TRUE makes it 8 byte - when FALSE 16 bit
  Set_B_Svar('$EIP_SC['+Con_String+'].$DATATYPE',FALSE)
  -- Setup all EIP Scanner variables
  --Set the I/O Consume size
  Set_I_Svar('$EIP_CONN['+Con_String+'].$CS_SZ',48)--When Scanner=Input
  --Set the I/O Produce size for the Block in 16-Bit words
  Set_I_Svar('$EIP_CONN['+Con_String+'].$PR_SZ',48)--When Scanner=Output

  -- EtherNet IP target device vender ID variable for electronic keying Valid when Robot is Scanner
  Set_I_Svar('$EIP_SC['+Con_String+'].$VENDOR',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$DEVTYPE',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PRDCODE',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_VENDOR',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_DEVTYPE',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_PRDCODE',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_REV',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$TORPI',32)
  Set_I_Svar('$EIP_SC['+Con_String+'].$OTRPI',32)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CONN_FLAG',32)
  Set_I_Svar('$EIP_SC['+Con_String+'].$MULT',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$TRIG',1)
  Set_I_Svar('$EIP_SC['+Con_String+'].$NETC_OT',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$NETC_TO',0)
  Set_B_Svar('$EIP_SC['+Con_String+'].$MULTICAST',FALSE)
  Set_B_Svar('$EIP_SC['+Con_String+'].$RECONNECT',FALSE)
  Set_I_Svar('$EIP_SC['+Con_String+'].$RECONNTIME',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_SIZE',9)

  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[1]',52)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[2]',4)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[3]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[4]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[5]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[6]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[7]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[8]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[9]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[10]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[11]',32)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[12]',4)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[13]',36)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[14]',106)-- Configuration instance
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[15]',44)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[16]',104)--assembly instance (output)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[17]',44)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[18]',103) --assembly instance (input)

  -- Enable the connection
  Set_B_Svar('$EIP_CONN['+Con_String+'].$ENABLE',TRUE)
  -- Enable
  Set_I_Svar('$EIP_CONN['+Con_String+'].$STATE',2)

END TURK_BLCEN
-----------------------------------------------------------------------------
ROUTINE Balf_BLCEN(P_Con_Num:INTEGER;p_Con_Name:STRING)
-- PURPOSE:Setup the EIP connection for the Input Connection # passed
--
--
--
-- INPUT:   Connection Number to Setup
--          Some setting are assume and Hard coded based on the type Setup
--          Connection Name to comment the connection to
--          for instance the input block are assumed to be specific brands
--          - Baluff analog block BLCEN-1M12MT-1CNT-ENC
--
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
VAR
  Con_String :STRING[3]
  Con_name : STRING[33]
  l_host_ip : STRING[33]
  l_entry :INTEGER

BEGIN
 -- Check the severity has been setup
    Ch_err_sv

     Current_Ver = Version

-- Convert the passed integer to string to add to the variable for setting.
  Con_String = int2str(P_Con_Num)

-- set the description comment set above
  Set_S_Svar('$EIP_CONN['+Con_String+'].$DESC',P_Con_Name)

-- Setup the host name for the device i.e. its IPConfig
  l_host_ip = '192.168.1.'+Con_String -- The host name is equal to base setup and Passed element
  Set_S_Svar('$EIP_CONN['+Con_String+'].$HOST',l_host_ip)

  -- Set Connection is Scanner
  set_B_sVar('$EIP_CONN['+Con_String+'].$IS_SC',TRUE)
  -- Set to Warning Error Serverity
  Set_I_Svar('$EIP_CONN['+Con_String+'].$ERR_SV',Tool_Err_Sv)--0= stop 1= warn,2=pause
  -- Set Connection State
  Set_I_Svar('$EIP_CONN['+Con_String+'].$STATE',2)
  --$DATATYPE = TRUE makes it 8 byte - when FALSE 16 bit
  Set_B_Svar('$EIP_SC['+Con_String+'].$DATATYPE',TRUE)
  -- Setup all EIP Scanner variables
  --Set the I/O Consume size
  Set_I_Svar('$EIP_CONN['+Con_String+'].$CS_SZ',200)--When Scanner=Input
  --Set the I/O Produce size for the Block in 16-Bit words
  Set_I_Svar('$EIP_CONN['+Con_String+'].$PR_SZ',134)--When Scanner=Output

  -- EtherNet IP target device vender ID variable for electronic keying Valid when Robot is Scanner
  Set_I_Svar('$EIP_SC['+Con_String+'].$VENDOR',43)
  Set_I_Svar('$EIP_SC['+Con_String+'].$DEVTYPE',43)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PRDCODE',20522)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_VENDOR',43)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_DEVTYPE',43)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_PRDCODE',205)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_REV',772)
  Set_I_Svar('$EIP_SC['+Con_String+'].$TORPI',20)
  Set_I_Svar('$EIP_SC['+Con_String+'].$OTRPI',20)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CONN_FLAG',32)
  Set_I_Svar('$EIP_SC['+Con_String+'].$MULT',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$TRIG',1)
  Set_I_Svar('$EIP_SC['+Con_String+'].$NETC_OT',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$NETC_TO',0)
  Set_B_Svar('$EIP_SC['+Con_String+'].$MULTICAST',FALSE)
  Set_B_Svar('$EIP_SC['+Con_String+'].$RECONNECT',FALSE)
  Set_I_Svar('$EIP_SC['+Con_String+'].$RECONNTIME',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_SIZE',9)

  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[1]',52)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[2]',4)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[3]',43)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[4]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[5]',43)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[6]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[7]',42)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[8]',80)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[9]',131)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[10]',4)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[11]',32)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[12]',4)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[13]',36)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[14]',102)-- Configuration instance
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[15]',44)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[16]',101)--assembly instance (output)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[17]',44)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[18]',100) --assembly instance (input)

-- NOt sure if below is required but too hard to get to work to not put in
-- No support form GM to assist in the setup.
  Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG_SZ',98)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG2_SZ',98)

   Set_I_Svar('$EIP_SC['+Con_String+'].$IDA_FORMAT',101)
   Set_I_Svar('$EIP_SC['+Con_String+'].$IDA_SIZE',10)

  -- Enable the connection
  Set_B_Svar('$EIP_CONN['+Con_String+'].$ENABLE',TRUE)
  -- Enable
  Set_I_Svar('$EIP_CONN['+Con_String+'].$STATE',2)

-- need all this to send configuration to block??? I dont know
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[1]',16)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[2]',16)

   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[99]',111)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[100]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[101]',114)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[102]',101)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[103]',115)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[104]',111)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[105]',117)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[106]',114)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[107]',99)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[108]',101)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[109]',115)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[110]',60)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[111]',47)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[112]',83)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[113]',72)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[114]',79)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[115]',87)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[116]',62)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[117]',10)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[118]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[119]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[120]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[121]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[122]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[123]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[124]',60)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[125]',47)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[126]',67)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[127]',65)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[128]',83)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[129]',69)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[130]',62)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[131]',10)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[132]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[133]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[134]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[135]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[136]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[137]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[138]',60)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[139]',67)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[140]',65)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[141]',83)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[142]',69)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[143]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[144]',110)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[145]',117)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[146]',109)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[147]',61)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[148]',34)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[149]',51)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[150]',34)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[151]',62)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[152]',10)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[153]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[154]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[155]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[156]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[157]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[158]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[159]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[160]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[161]',60)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[162]',83)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[163]',72)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[164]',79)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[165]',87)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[166]',62)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[167]',73)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[168]',110)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[169]',118)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[170]',97)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[171]',108)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[172]',105)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[173]',100)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[174]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[175]',110)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[176]',117)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[177]',109)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[178]',98)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[179]',101)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[180]',114)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[181]',60)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[182]',47)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[183]',83)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[184]',72)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[185]',79)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[186]',87)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[187]',62)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[188]',10)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[189]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[190]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[191]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[192]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[193]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[194]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[195]',60)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[196]',47)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[197]',67)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[198]',65)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[199]',83)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[200]',69)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[201]',62)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[202]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[203]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[204]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[205]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[206]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[207]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[208]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[209]',60)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[210]',67)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[211]',65)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[212]',83)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[213]',69)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[214]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[215]',110)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[216]',117)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[217]',109)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[218]',61)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[219]',34)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[220]',52)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[221]',34)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[222]',62)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[223]',10)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[224]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[225]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[226]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[227]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[228]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[229]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[230]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[231]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[232]',60)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[233]',83)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[234]',72)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[235]',79)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[236]',87)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[237]',62)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[238]',73)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[239]',110)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[240]',118)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[241]',97)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[242]',108)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[243]',118)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[244]',100)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[245]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[246]',115)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[247]',101)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[248]',103)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[249]',109)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[250]',101)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[251]',110)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[252]',116)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[253]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[254]',116)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[255]',121)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[256]',112)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[257]',101)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[258]',60)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[259]',47)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[260]',83)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[261]',72)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[262]',79)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[263]',87)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[264]',62)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[265]',10)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[266]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[267]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[268]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[269]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[270]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[271]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[272]',60)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[273]',47)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[274]',67)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[275]',65)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[276]',83)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[277]',69)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[278]',62)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[279]',10)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[280]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[281]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[282]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[283]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[284]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[285]',32)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[286]',60)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[287]',67)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[288]',65)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[289]',0)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[290]',115)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[291]',44)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[292]',92)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[293]',0)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[294]',0)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[295]',6)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[296]',208)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[297]',0)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[298]',0)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[299]',2)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[300]',160)

   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[398]',115)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[399]',44)
   Set_I_Svar('$EIP_SC['+Con_String+'].$CONFIG[400]',200)

END Balf_BLCEN
-----------------------------------------------------------------------------
ROUTINE SPINTOP(P_Con_Num:INTEGER;p_Con_Name:STRING)
-- PURPOSE:Setup the EIP connection for the Input Connection # passed
--
--
--
-- INPUT:   Connection Number to Setup
--          Some setting are assume and Hard coded based on the type Setup
--          Connection Name to comment the connection to
--          for instance the input block are assumed to be specific brands
--          - Spin-Top PC interface with robot.
--
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
VAR
  Con_String :STRING[3]
  Con_name : STRING[33]
  l_host_ip : STRING[33]
  l_entry :INTEGER

BEGIN
 -- Check the severity has been setup
    Ch_err_sv

     Current_Ver = Version

-- Convert the passed integer to string to add to the variable for setting.
  Con_String = int2str(P_Con_Num)

-- set the description comment set above
  Set_S_Svar('$EIP_CONN['+Con_String+'].$DESC',P_Con_Name)

-- Setup the host name for the device i.e. its IPConfig
  l_host_ip = '192.168.1.'+Con_String -- The host name is equal to base setup and Passed element
  Set_S_Svar('$EIP_CONN['+Con_String+'].$HOST',l_host_ip)

  -- Set Connection is Scanner
  set_B_sVar('$EIP_CONN['+Con_String+'].$IS_SC',TRUE)
  -- Set to Warning Error Serverity
  Set_I_Svar('$EIP_CONN['+Con_String+'].$ERR_SV',Tool_Err_Sv)--0= stop 1= warn,2=pause
  -- Set Connection State
  Set_I_Svar('$EIP_CONN['+Con_String+'].$STATE',2)
  --$DATATYPE = TRUE makes it 8 byte - when FALSE 16 bit
  Set_B_Svar('$EIP_SC['+Con_String+'].$DATATYPE',FALSE)
  -- Setup all EIP Scanner variables
  --Set the I/O Consume size
  Set_I_Svar('$EIP_CONN['+Con_String+'].$CS_SZ',16)--When Scanner=Input
  --Set the I/O Produce size for the Block in 16-Bit words
  Set_I_Svar('$EIP_CONN['+Con_String+'].$PR_SZ',16)--When Scanner=Output

  -- EtherNet IP target device vender ID variable for electronic keying Valid when Robot is Scanner
  Set_I_Svar('$EIP_SC['+Con_String+'].$VENDOR',283)
  Set_I_Svar('$EIP_SC['+Con_String+'].$DEVTYPE',12)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PRDCODE',257)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_VENDOR',283)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_DEVTYPE',12)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_PRDCODE',257)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_REV',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$TORPI',32)
  Set_I_Svar('$EIP_SC['+Con_String+'].$OTRPI',32)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CONN_FLAG',32)
  Set_I_Svar('$EIP_SC['+Con_String+'].$MULT',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$TRIG',1)
  Set_I_Svar('$EIP_SC['+Con_String+'].$NETC_OT',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$NETC_TO',0)
  Set_B_Svar('$EIP_SC['+Con_String+'].$MULTICAST',FALSE)
  Set_B_Svar('$EIP_SC['+Con_String+'].$RECONNECT',FALSE)
  Set_I_Svar('$EIP_SC['+Con_String+'].$RECONNTIME',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_SIZE',9)

  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[1]',52)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[2]',4)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[3]',27)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[4]',1)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[5]',12)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[6]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[7]',1)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[8]',1)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[9]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[10]',1)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[11]',32)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[12]',4)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[13]',36)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[14]',1)-- Configuration instance
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[15]',44)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[16]',101)--assembly instance (output)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[17]',44)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[18]',100) --assembly instance (input)

  -- Enable the connection
  Set_B_Svar('$EIP_CONN['+Con_String+'].$ENABLE',TRUE)
  -- Enable
  Set_I_Svar('$EIP_CONN['+Con_String+'].$STATE',2)

END SPINTOP
-----------------------------------------------------------------------------
ROUTINE LSRLINE_EIP(P_Con_Num:INTEGER;p_Con_Name:STRING;P_host_ip:STRING)
-- PURPOSE:Setup the EIP connection for the LaserLine Laser Generator
--
--
--
-- INPUT:   Connection Number to Setup
--          Connection Name to comment the connection to
--          Some setting are assume and Hard coded based on the type Setup
--          for instance the laser controller are assumed to be specific brands
--          
-- OUTPUT:
--
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
VAR
  Con_String :STRING[3]
  Con_name : STRING[33]
  l_host_ip : STRING[33]
  l_entry :INTEGER

BEGIN
   -- Check the severity has been setup
    Ch_err_sv

-- Convert the passed integer to string to add to the variable for setting.
  Con_String = int2str(P_Con_Num)

-- Set the Connection Name
-- set the description comment sent
  Set_S_Svar('$EIP_CONN['+Con_String+'].$DESC',p_Con_Name)

-- Setup the host name for the device i.e. its IPConfig
-- Need to change from wizard answer

IF UNINIT(P_host_ip) THEN
  P_host_ip = '0.0.0.0'
ENDIF
IF P_host_ip = '0.0.0.0' THEN
  POST_ERR(38000, 'EIP_CONN['+Con_String+'] IP Address IN CORRECT!!', 0, 0) --
ENDIF

-- Setup the host name for the device i.e. its IPConfig
  l_host_ip = '192.168.1.'+Con_String -- The host name is equal to base setup and Passed element
  Set_S_Svar('$EIP_CONN['+Con_String+'].$HOST',p_host_ip)

  -- Set Connection is Scanner
  Set_B_sVar('$EIP_CONN['+Con_String+'].$IS_SC',TRUE)
  -- Set to Warning Error Serverity
  Set_I_Svar('$EIP_CONN['+Con_String+'].$ERR_SV',LsrLn_Err_Sv)--0= stop 1= warn,2=pause

  -- Set Connection State
  Set_I_Svar('$EIP_CONN['+Con_String+'].$STATE',2)

  --Set the I/O Produce size for the Block in 8-Bit words
  Set_I_Svar('$EIP_CONN['+Con_String+'].$PR_SZ',10)--When Scanner=Output, Adaptor=Input
  --Set the I/O Consume size
  Set_I_Svar('$EIP_CONN['+Con_String+'].$CS_SZ',10)--When Scanner=Input, Adaptor=Output

 -- EtherNet IP target device vender ID variable for electronic keying Valid when Robot is Scanner
  Set_I_Svar('$EIP_SC['+Con_String+'].$VENDOR',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$DEVTYPE',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PRDCODE',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_VENDOR',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_DEVTYPE',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_PRDCODE',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_REV',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$TORPI',32)
  Set_I_Svar('$EIP_SC['+Con_String+'].$OTRPI',32)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CONN_FLAG',32)
  Set_I_Svar('$EIP_SC['+Con_String+'].$MULT',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$TRIG',1)
  Set_I_Svar('$EIP_SC['+Con_String+'].$NETC_OT',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$NETC_TO',0)
  Set_B_Svar('$EIP_SC['+Con_String+'].$MULTICAST',FALSE)
  --DATATYPE = TRUE makes it 8 byte - when FALSE 16 bit
  Set_B_Svar('$EIP_SC['+Con_String+'].$DATATYPE',FALSE)
  Set_B_Svar('$EIP_SC['+Con_String+'].$RECONNECT',FALSE)
  Set_I_Svar('$EIP_SC['+Con_String+'].$RECONNTIME',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_SIZE',9)

  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[1]',52)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[2]',4)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[3]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[4]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[5]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[6]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[7]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[8]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[9]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[10]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[11]',32)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[12]',4)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[13]',36)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[14]',0)-- Configuration instance
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[15]',44)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[16]',150)--assembly instance (output)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[17]',44)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[18]',100) --assembly instance (input)

  -- Enable the connection
  Set_B_Svar('$EIP_CONN['+Con_String+'].$ENABLE',TRUE)
  -- Enable
  Set_I_Svar('$EIP_CONN['+Con_String+'].$STATE',2)

END LSRLINE_EIP
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
ROUTINE TRUMPF_EIP(P_Con_Num:INTEGER;p_Con_Name:STRING;P_host_ip:STRING)
-- PURPOSE:Setup the EIP connection for the Trumpf Laser Generator
--
--
--
-- INPUT:   Connection Number to Setup
--          Connection Name to comment the connection to
--          Some setting are assume and Hard coded based on the type Setup
--          for instance the laser controller are assumed to be specific brands
--            
-- OUTPUT:
--
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
VAR
  Con_String :STRING[3]
  Con_name : STRING[33]
  l_host_ip : STRING[33]
  l_entry :INTEGER

BEGIN
   
  -- Check the severity has been setup
  Ch_err_sv

  -- Convert the passed integer to string to add to the variable for setting.
  Con_String = int2str(P_Con_Num)

  -- Set the Connection Name
  -- set the description comment sent
  Set_S_Svar('$EIP_CONN['+Con_String+'].$DESC',p_Con_Name)

  -- Setup the host name for the device i.e. its IPConfig
  -- Need to change from wizard answer

  IF UNINIT(P_host_ip) THEN
    P_host_ip = '0.0.0.0'
  ENDIF
  IF P_host_ip = '0.0.0.0' THEN
    POST_ERR(38000, 'EIP_CONN['+Con_String+'] IP Address IN CORRECT!!', 0, 0) --
  ENDIF

  -- Setup the host name for the device i.e. its IPConfig
  --l_host_ip = '192.168.1.'+Con_String -- The host name is equal to base setup and Passed element
  Set_S_Svar('$EIP_CONN['+Con_String+'].$HOST',p_host_ip)

  -- Set Connection is Scanner
  Set_B_sVar('$EIP_CONN['+Con_String+'].$IS_SC',TRUE)
  -- Set to Warning Error Serverity
  Set_I_Svar('$EIP_CONN['+Con_String+'].$ERR_SV',Trumf_Err_Sv)--0= stop 1= warn,2=pause

  -- Set Connection State
  Set_I_Svar('$EIP_CONN['+Con_String+'].$STATE',2)

  --Set the I/O Produce size for the Block in 8-Bit words
  Set_I_Svar('$EIP_CONN['+Con_String+'].$PR_SZ',10)--When Scanner=Output, Adaptor=Input
  --Set the I/O Consume size
  Set_I_Svar('$EIP_CONN['+Con_String+'].$CS_SZ',10)--When Scanner=Input, Adaptor=Output

  -- EtherNet IP target device vender ID variable for electronic keying Valid when Robot is Scanner
  Set_I_Svar('$EIP_SC['+Con_String+'].$VENDOR',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$DEVTYPE',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PRDCODE',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_VENDOR',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_DEVTYPE',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_PRDCODE',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_REV',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$TORPI',20)
  Set_I_Svar('$EIP_SC['+Con_String+'].$OTRPI',20)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CONN_FLAG',32)
  Set_I_Svar('$EIP_SC['+Con_String+'].$MULT',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$TRIG',1)
  Set_I_Svar('$EIP_SC['+Con_String+'].$NETC_OT',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$NETC_TO',0)
  Set_B_Svar('$EIP_SC['+Con_String+'].$MULTICAST',FALSE)
  --DATATYPE = TRUE makes it 8 byte - when FALSE 16 bit
  Set_B_Svar('$EIP_SC['+Con_String+'].$DATATYPE',FALSE)
  Set_B_Svar('$EIP_SC['+Con_String+'].$RECONNECT',FALSE)
  Set_I_Svar('$EIP_SC['+Con_String+'].$RECONNTIME',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_SIZE',9)

  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[1]',52)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[2]',4)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[3]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[4]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[5]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[6]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[7]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[8]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[9]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[10]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[11]',32)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[12]',4)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[13]',36)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[14]',128)-- Configuration instance
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[15]',44)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[16]',130)--assembly instance (output)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[17]',44)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[18]',129) --assembly instance (input)

  -- Enable the connection
  Set_B_Svar('$EIP_CONN['+Con_String+'].$ENABLE',TRUE)
  -- Enable
  Set_I_Svar('$EIP_CONN['+Con_String+'].$STATE',2)

END TRUMPF_EIP
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
ROUTINE scansonc_eip(P_Con_Num:INTEGER;p_Con_Name:STRING;P_host_ip:STRING)
-- PURPOSE:Setup the EIP connection for the Scan Sonic AL03 Laser Head
--
--
--
-- INPUT:   Connection Number to Setup
--          Connection Name to comment the connection to
--          Some setting are assume and Hard coded based on the type Setup
--          for instance the laser controller are assumed to be specific brands
--            -  
-- OUTPUT:
--
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
VAR
  Con_String :STRING[3]
  Con_name : STRING[33]
  l_host_ip : STRING[33]
  l_entry :INTEGER

BEGIN
  -- Check the severity has been setup
  Ch_err_sv

  -- Convert the passed integer to string to add to the variable for setting.
  Con_String = int2str(P_Con_Num)

  -- Set the Connection Name
  -- set the description comment sent
  Set_S_Svar('$EIP_CONN['+Con_String+'].$DESC',p_Con_Name)

  -- Setup the host name for the device i.e. its IPConfig
  -- Need to change from wizard answer

  IF UNINIT(P_host_ip) THEN
    P_host_ip = '0.0.0.0'
  ENDIF
  IF P_host_ip = '0.0.0.0' THEN
    POST_ERR(38000, 'EIP_CONN['+Con_String+'] IP Address IN CORRECT!!', 0, 0) --
  ENDIF

  -- Setup the host name for the device i.e. its IPConfig
  l_host_ip = '192.168.1.'+Con_String -- The host name is equal to base setup and Passed element
  Set_S_Svar('$EIP_CONN['+Con_String+'].$HOST',p_host_ip)

  -- Set Connection is Scanner
  Set_B_sVar('$EIP_CONN['+Con_String+'].$IS_SC',TRUE)
  -- Set to Warning Error Serverity
  Set_I_Svar('$EIP_CONN['+Con_String+'].$ERR_SV',ScSon_Err_Sv)--0= stop 1= warn,2=pause

  -- Set Connection State
  Set_I_Svar('$EIP_CONN['+Con_String+'].$STATE',2)

  --Set the I/O Produce size for the Block in 8-Bit words
  Set_I_Svar('$EIP_CONN['+Con_String+'].$PR_SZ',6)--When Scanner=Output, Adaptor=Input
  --Set the I/O Consume size
  Set_I_Svar('$EIP_CONN['+Con_String+'].$CS_SZ',6)--When Scanner=Input, Adaptor=Output

  -- EtherNet IP target device vender ID variable for electronic keying Valid when Robot is Scanner
  Set_I_Svar('$EIP_SC['+Con_String+'].$VENDOR',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$DEVTYPE',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PRDCODE',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_VENDOR',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_DEVTYPE',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_PRDCODE',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_REV',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$TORPI',32)
  Set_I_Svar('$EIP_SC['+Con_String+'].$OTRPI',32)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CONN_FLAG',32)
  Set_I_Svar('$EIP_SC['+Con_String+'].$MULT',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$TRIG',1)
  Set_I_Svar('$EIP_SC['+Con_String+'].$NETC_OT',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$NETC_TO',0)
  Set_B_Svar('$EIP_SC['+Con_String+'].$MULTICAST',FALSE)
  --DATATYPE = TRUE makes it 8 byte - when FALSE 16 bit
  Set_B_Svar('$EIP_SC['+Con_String+'].$DATATYPE',FALSE)
  Set_B_Svar('$EIP_SC['+Con_String+'].$RECONNECT',FALSE)
  Set_I_Svar('$EIP_SC['+Con_String+'].$RECONNTIME',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_SIZE',9)

  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[1]',52)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[2]',4)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[3]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[4]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[5]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[6]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[7]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[8]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[9]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[10]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[11]',32)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[12]',4)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[13]',36)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[14]',0)-- Configuration instance
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[15]',44)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[16]',150)--assembly instance (output)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[17]',44)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[18]',100) --assembly instance (input)

  -- Enable the connection
  Set_B_Svar('$EIP_CONN['+Con_String+'].$ENABLE',TRUE)
  -- Enable
  Set_I_Svar('$EIP_CONN['+Con_String+'].$STATE',2)

END scansonc_eip
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
ROUTINE ipfo_eip(P_Con_Num:INTEGER;p_Con_Name:STRING;P_host_ip:STRING)
-- PURPOSE:Setup the EIP connection for the IPFO Laser Head
--
--
--
-- INPUT:   Connection Number to Setup
--          Connection Name to comment the connection to
--          Some setting are assume and Hard coded based on the type Setup
--          for instance the laser controller are assumed to be specific brands
--            -  
-- OUTPUT:
--
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
VAR
  Con_String :STRING[3]
  Con_name : STRING[33]
  l_host_ip : STRING[33]
  l_entry :INTEGER

BEGIN
  -- Check the severity has been setup
  Ch_err_sv

  -- Convert the passed integer to string to add to the variable for setting.
  Con_String = int2str(P_Con_Num)

  -- Set the Connection Name
  -- set the description comment sent
  Set_S_Svar('$EIP_CONN['+Con_String+'].$DESC',p_Con_Name)


--DO NOT HAVE EIP SETTINGS, COMMENT OUT FOR NOW

  -- Setup the host name for the device i.e. its IPConfig
  -- Need to change from wizard answer

  IF UNINIT(P_host_ip) THEN
    P_host_ip = '0.0.0.0'
  ENDIF
  IF P_host_ip = '0.0.0.0' THEN
    POST_ERR(38000, 'EIP_CONN['+Con_String+'] IP Address IN CORRECT!!', 0, 0) --
  ENDIF

  -- Setup the host name for the device i.e. its IPConfig
  l_host_ip = '192.168.1.'+Con_String -- The host name is equal to base setup and Passed element
  Set_S_Svar('$EIP_CONN['+Con_String+'].$HOST',p_host_ip)

  -- Set Connection is Scanner
  --Set_B_sVar('$EIP_CONN['+Con_String+'].$IS_SC',TRUE)
  -- Set to Warning Error Serverity
  --Set_I_Svar('$EIP_CONN['+Con_String+'].$ERR_SV',Ipfo_Err_Sv)--0= stop 1= warn,2=pause

  -- Set Connection State
  --Set_I_Svar('$EIP_CONN['+Con_String+'].$STATE',2)

  --Set the I/O Produce size for the Block in 8-Bit words
  --Set_I_Svar('$EIP_CONN['+Con_String+'].$PR_SZ',10)--When Scanner=Output, Adaptor=Input
  --Set the I/O Consume size
  --Set_I_Svar('$EIP_CONN['+Con_String+'].$CS_SZ',10)--When Scanner=Input, Adaptor=Output

  -- EtherNet IP target device vender ID variable for electronic keying Valid when Robot is Scanner
  --Set_I_Svar('$EIP_SC['+Con_String+'].$VENDOR',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$DEVTYPE',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$PRDCODE',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$PX_VENDOR',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$PX_DEVTYPE',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$PX_PRDCODE',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$PX_REV',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$TORPI',32)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$OTRPI',32)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CONN_FLAG',32)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$MULT',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$TRIG',1)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$NETC_OT',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$NETC_TO',0)
  --Set_B_Svar('$EIP_SC['+Con_String+'].$MULTICAST',FALSE)
  --DATATYPE = TRUE makes it 8 byte - when FALSE 16 bit
  --Set_B_Svar('$EIP_SC['+Con_String+'].$DATATYPE',FALSE)
  --Set_B_Svar('$EIP_SC['+Con_String+'].$RECONNECT',FALSE)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$RECONNTIME',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_SIZE',9)

  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[1]',52)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[2]',4)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[3]',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[4]',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[5]',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[6]',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[7]',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[8]',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[9]',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[10]',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[11]',32)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[12]',4)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[13]',36)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[14]',0)-- Configuration instance
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[15]',44)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[16]',150)--assembly instance (output)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[17]',44)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[18]',100) --assembly instance (input)

  -- Enable the connection
  --Set_B_Svar('$EIP_CONN['+Con_String+'].$ENABLE',TRUE)
  -- Enable
  --Set_I_Svar('$EIP_CONN['+Con_String+'].$STATE',2)

END ipfo_eip
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
ROUTINE ipfo_rsi_eip(P_Con_Num:INTEGER;p_Con_Name:STRING;P_host_ip:STRING)
-- PURPOSE:Setup the EIP connection for the IPFO with RSI Interface software option
--        application
--
--
--
-- INPUT:   Connection Number to Setup
--          Connection Name to comment the connection to
--          Some setting are assume and Hard coded based on the type Setup
--          for instance the laser controller are assumed to be specific brands
--            
-- OUTPUT:
--
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
VAR
  Con_String :STRING[3]
  Con_name : STRING[33]
  l_host_ip : STRING[33]
  l_entry :INTEGER

BEGIN
   
  -- Check the severity has been setup
  Ch_err_sv

  -- Convert the passed integer to string to add to the variable for setting.
  Con_String = int2str(P_Con_Num)

  -- Set the Connection Name
  -- set the description comment sent
  Set_S_Svar('$EIP_CONN['+Con_String+'].$DESC',p_Con_Name)

  -- Setup the host name for the device i.e. its IPConfig
  -- Need to change from wizard answer

  IF UNINIT(P_host_ip) THEN
    P_host_ip = '0.0.0.0'
  ENDIF
  IF P_host_ip = '0.0.0.0' THEN
    POST_ERR(38000, 'EIP_CONN['+Con_String+'] IP Address IN CORRECT!!', 0, 0) --
  ENDIF

  -- Setup the host name for the device i.e. its IPConfig
  --l_host_ip = '192.168.1.'+Con_String -- The host name is equal to base setup and Passed element
  Set_S_Svar('$EIP_CONN['+Con_String+'].$HOST',p_host_ip)

  -- Set Connection is Scanner
  Set_B_sVar('$EIP_CONN['+Con_String+'].$IS_SC',TRUE)
  -- Set to Warning Error Serverity
  Set_I_Svar('$EIP_CONN['+Con_String+'].$ERR_SV',IpfoR_Err_Sv)--0= stop 1= warn,2=pause

  -- Set Connection State
  Set_I_Svar('$EIP_CONN['+Con_String+'].$STATE',2)

  --Set the I/O Produce size for the Block in 8-Bit words
  Set_I_Svar('$EIP_CONN['+Con_String+'].$PR_SZ',50)--When Scanner=Output, Adaptor=Input
  --Set the I/O Consume size
  Set_I_Svar('$EIP_CONN['+Con_String+'].$CS_SZ',50)--When Scanner=Input, Adaptor=Output

  -- EtherNet IP target device vender ID variable for electronic keying Valid when Robot is Scanner
  Set_I_Svar('$EIP_SC['+Con_String+'].$VENDOR',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$DEVTYPE',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PRDCODE',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_VENDOR',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_DEVTYPE',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_PRDCODE',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_REV',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$TORPI',20)
  Set_I_Svar('$EIP_SC['+Con_String+'].$OTRPI',20)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CONN_FLAG',32)
  Set_I_Svar('$EIP_SC['+Con_String+'].$MULT',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$TRIG',1)
  Set_I_Svar('$EIP_SC['+Con_String+'].$NETC_OT',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$NETC_TO',0)
  Set_B_Svar('$EIP_SC['+Con_String+'].$MULTICAST',FALSE)
  --DATATYPE = TRUE makes it 8 byte - when FALSE 16 bit
  Set_B_Svar('$EIP_SC['+Con_String+'].$DATATYPE',FALSE)
  Set_B_Svar('$EIP_SC['+Con_String+'].$RECONNECT',FALSE)
  Set_I_Svar('$EIP_SC['+Con_String+'].$RECONNTIME',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_SIZE',9)

  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[1]',52)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[2]',4)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[3]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[4]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[5]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[6]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[7]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[8]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[9]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[10]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[11]',32)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[12]',4)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[13]',36)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[14]',128)-- Configuration instance
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[15]',44)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[16]',130)--assembly instance (output)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[17]',44)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[18]',129) --assembly instance (input)

  -- Enable the connection
  Set_B_Svar('$EIP_CONN['+Con_String+'].$ENABLE',TRUE)
  -- Enable
  Set_I_Svar('$EIP_CONN['+Con_String+'].$STATE',2)

END ipfo_rsi_eip
-----------------------------------------------------------------------------
ROUTINE bwirfeed_eip(P_Con_Num:INTEGER;p_Con_Name:STRING;P_host_ip:STRING)
-- PURPOSE:Setup the EIP connection for the Binzel Wire Feeder
--
--
--
-- INPUT:   Connection Number to Setup
--          Connection Name to comment the connection to
--          Some setting are assume and Hard coded based on the type Setup
--          for instance the laser controller are assumed to be specific brands
--            
-- OUTPUT:
--
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
VAR
  Con_String :STRING[3]
  Con_name : STRING[33]
  l_host_ip : STRING[33]
  l_entry :INTEGER

BEGIN
  -- Check the severity has been setup
  Ch_err_sv

  -- Convert the passed integer to string to add to the variable for setting.
  Con_String = int2str(P_Con_Num)

  -- Set the Connection Name
  -- set the description comment sent
  Set_S_Svar('$EIP_CONN['+Con_String+'].$DESC',p_Con_Name)

  -- Setup the host name for the device i.e. its IPConfig
  -- Need to change from wizard answer

  IF UNINIT(P_host_ip) THEN
    P_host_ip = '0.0.0.0'
  ENDIF
  IF P_host_ip = '0.0.0.0' THEN
    POST_ERR(38000, 'EIP_CONN['+Con_String+'] IP Address IN CORRECT!!', 0, 0) --
  ENDIF

  -- Setup the host name for the device i.e. its IPConfig
  l_host_ip = '192.168.1.'+Con_String -- The host name is equal to base setup and Passed element
  Set_S_Svar('$EIP_CONN['+Con_String+'].$HOST',p_host_ip)

  -- Set Connection is Scanner
  Set_B_sVar('$EIP_CONN['+Con_String+'].$IS_SC',TRUE)
  -- Set to Warning Error Serverity
  Set_I_Svar('$EIP_CONN['+Con_String+'].$ERR_SV',BWirf_Err_Sv)--0= stop 1= warn,2=pause

  -- Set Connection State
  Set_I_Svar('$EIP_CONN['+Con_String+'].$STATE',2)

  --Set the I/O Produce size for the Block in 8-Bit words
  Set_I_Svar('$EIP_CONN['+Con_String+'].$PR_SZ',5)--When Scanner=Output, Adaptor=Input
  --Set the I/O Consume size
  Set_I_Svar('$EIP_CONN['+Con_String+'].$CS_SZ',6)--When Scanner=Input, Adaptor=Output

  -- EtherNet IP target device vender ID variable for electronic keying Valid when Robot is Scanner
  Set_I_Svar('$EIP_SC['+Con_String+'].$VENDOR',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$DEVTYPE',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PRDCODE',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_VENDOR',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_DEVTYPE',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_PRDCODE',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_REV',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$TORPI',100)
  Set_I_Svar('$EIP_SC['+Con_String+'].$OTRPI',100)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CONN_FLAG',32)
  Set_I_Svar('$EIP_SC['+Con_String+'].$MULT',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$TRIG',1)
  Set_I_Svar('$EIP_SC['+Con_String+'].$NETC_OT',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$NETC_TO',0)
  Set_B_Svar('$EIP_SC['+Con_String+'].$MULTICAST',FALSE)
  --DATATYPE = TRUE makes it 8 byte - when FALSE 16 bit
  Set_B_Svar('$EIP_SC['+Con_String+'].$DATATYPE',TRUE)
  Set_B_Svar('$EIP_SC['+Con_String+'].$RECONNECT',FALSE)
  Set_I_Svar('$EIP_SC['+Con_String+'].$RECONNTIME',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_SIZE',9)

  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[1]',52)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[2]',4)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[3]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[4]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[5]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[6]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[7]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[8]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[9]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[10]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[11]',32)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[12]',4)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[13]',36)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[14]',3)-- Configuration instance
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[15]',44)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[16]',150)--assembly instance (output)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[17]',44)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[18]',100) --assembly instance (input)

  -- Enable the connection
  Set_B_Svar('$EIP_CONN['+Con_String+'].$ENABLE',TRUE)
  -- Enable
  Set_I_Svar('$EIP_CONN['+Con_String+'].$STATE',2)

END bwirfeed_eip
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
ROUTINE lessproc_eip(P_Con_Num:INTEGER;p_Con_Name:STRING;P_host_ip:STRING)
-- PURPOSE:Setup the EIP connection for the Lessmuller Process Monitor
--
--
--
-- INPUT:   Connection Number to Setup
--          Connection Name to comment the connection to
--          Some setting are assume and Hard coded based on the type Setup
--          for instance the laser controller are assumed to be specific brands
--            
-- OUTPUT:
--
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
VAR
  Con_String :STRING[3]
  Con_name : STRING[33]
  l_host_ip : STRING[33]
  l_entry :INTEGER

BEGIN
  -- Check the severity has been setup
  Ch_err_sv

  -- Convert the passed integer to string to add to the variable for setting.
  Con_String = int2str(P_Con_Num)

  -- Set the Connection Name
  -- set the description comment sent
  Set_S_Svar('$EIP_CONN['+Con_String+'].$DESC',p_Con_Name)

  -- Setup the host name for the device i.e. its IPConfig
  -- Need to change from wizard answer

  IF UNINIT(P_host_ip) THEN
    P_host_ip = '0.0.0.0'
  ENDIF
  IF P_host_ip = '0.0.0.0' THEN
    POST_ERR(38000, 'EIP_CONN['+Con_String+'] IP Address IN CORRECT!!', 0, 0) --
  ENDIF

  -- Setup the host name for the device i.e. its IPConfig
  l_host_ip = '192.168.1.'+Con_String -- The host name is equal to base setup and Passed element
  Set_S_Svar('$EIP_CONN['+Con_String+'].$HOST',p_host_ip)

  -- Set Connection is Scanner
  Set_B_sVar('$EIP_CONN['+Con_String+'].$IS_SC',TRUE)
  -- Set to Warning Error Serverity
  Set_I_Svar('$EIP_CONN['+Con_String+'].$ERR_SV',Lproc_Err_Sv)--0= stop 1= warn,2=pause

  -- Set Connection State
  Set_I_Svar('$EIP_CONN['+Con_String+'].$STATE',2)

  --Set the I/O Produce size for the Block in 8-Bit words
  Set_I_Svar('$EIP_CONN['+Con_String+'].$PR_SZ',34)--When Scanner=Output, Adaptor=Input
  --Set the I/O Consume size
  Set_I_Svar('$EIP_CONN['+Con_String+'].$CS_SZ',32)--When Scanner=Input, Adaptor=Output

  -- EtherNet IP target device vender ID variable for electronic keying Valid when Robot is Scanner
  Set_I_Svar('$EIP_SC['+Con_String+'].$VENDOR',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$DEVTYPE',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PRDCODE',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_VENDOR',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_DEVTYPE',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_PRDCODE',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$PX_REV',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$TORPI',32)
  Set_I_Svar('$EIP_SC['+Con_String+'].$OTRPI',32)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CONN_FLAG',32)
  Set_I_Svar('$EIP_SC['+Con_String+'].$MULT',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$TRIG',1)
  Set_I_Svar('$EIP_SC['+Con_String+'].$NETC_OT',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$NETC_TO',0)
  Set_B_Svar('$EIP_SC['+Con_String+'].$MULTICAST',FALSE)
  --DATATYPE = TRUE makes it 8 byte - when FALSE 16 bit
  Set_B_Svar('$EIP_SC['+Con_String+'].$DATATYPE',TRUE)
  Set_B_Svar('$EIP_SC['+Con_String+'].$RECONNECT',FALSE)
  Set_I_Svar('$EIP_SC['+Con_String+'].$RECONNTIME',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_SIZE',9)

  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[1]',52)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[2]',4)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[3]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[4]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[5]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[6]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[7]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[8]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[9]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[10]',0)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[11]',32)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[12]',4)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[13]',36)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[14]',0)-- Configuration instance
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[15]',44)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[16]',100)--assembly instance (output)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[17]',44)
  Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[18]',101) --assembly instance (input)

  -- Enable the connection
  Set_B_Svar('$EIP_CONN['+Con_String+'].$ENABLE',TRUE)
  -- Enable
  Set_I_Svar('$EIP_CONN['+Con_String+'].$STATE',2)

END lessproc_eip
-----------------------------------------------------------------------------
ROUTINE plwmproc_eip(P_Con_Num:INTEGER;p_Con_Name:STRING;P_host_ip:STRING)
-- PURPOSE:Setup the EIP connection for the Precitec PLWMProcess Monitor
--
--
--
-- INPUT:   Connection Number to Setup
--          Connection Name to comment the connection to
--          Some setting are assume and Hard coded based on the type Setup
--          for instance the laser controller are assumed to be specific brands
--            -  
-- OUTPUT:
--
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
VAR
  Con_String :STRING[3]
  Con_name : STRING[33]
  l_host_ip : STRING[33]
  l_entry :INTEGER

BEGIN
  -- Check the severity has been setup
  Ch_err_sv

  -- Convert the passed integer to string to add to the variable for setting.
  Con_String = int2str(P_Con_Num)

  -- Set the Connection Name
  -- set the description comment sent
  Set_S_Svar('$EIP_CONN['+Con_String+'].$DESC',p_Con_Name)


--DO NOT HAVE EIP SETTINGS, COMMENT OUT FOR NOW

  -- Setup the host name for the device i.e. its IPConfig
  -- Need to change from wizard answer

  IF UNINIT(P_host_ip) THEN
    P_host_ip = '0.0.0.0'
  ENDIF
  IF P_host_ip = '0.0.0.0' THEN
    POST_ERR(38000, 'EIP_CONN['+Con_String+'] IP Address IN CORRECT!!', 0, 0) --
  ENDIF

  -- Setup the host name for the device i.e. its IPConfig
  l_host_ip = '192.168.1.'+Con_String -- The host name is equal to base setup and Passed element
  Set_S_Svar('$EIP_CONN['+Con_String+'].$HOST',p_host_ip)

  -- Set Connection is Scanner
  --Set_B_sVar('$EIP_CONN['+Con_String+'].$IS_SC',TRUE)
  -- Set to Warning Error Serverity
  --Set_I_Svar('$EIP_CONN['+Con_String+'].$ERR_SV',Plwm_Err_Sv)--0= stop 1= warn,2=pause

  -- Set Connection State
  --Set_I_Svar('$EIP_CONN['+Con_String+'].$STATE',2)

  --Set the I/O Produce size for the Block in 8-Bit words
  --Set_I_Svar('$EIP_CONN['+Con_String+'].$PR_SZ',10)--When Scanner=Output, Adaptor=Input
  --Set the I/O Consume size
  --Set_I_Svar('$EIP_CONN['+Con_String+'].$CS_SZ',10)--When Scanner=Input, Adaptor=Output

  -- EtherNet IP target device vender ID variable for electronic keying Valid when Robot is Scanner
  --Set_I_Svar('$EIP_SC['+Con_String+'].$VENDOR',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$DEVTYPE',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$PRDCODE',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$PX_VENDOR',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$PX_DEVTYPE',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$PX_PRDCODE',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$PX_REV',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$TORPI',32)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$OTRPI',32)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CONN_FLAG',32)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$MULT',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$TRIG',1)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$NETC_OT',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$NETC_TO',0)
  --Set_B_Svar('$EIP_SC['+Con_String+'].$MULTICAST',FALSE)
  --DATATYPE = TRUE makes it 8 byte - when FALSE 16 bit
  --Set_B_Svar('$EIP_SC['+Con_String+'].$DATATYPE',FALSE)
  --Set_B_Svar('$EIP_SC['+Con_String+'].$RECONNECT',FALSE)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$RECONNTIME',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_SIZE',9)

  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[1]',52)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[2]',4)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[3]',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[4]',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[5]',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[6]',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[7]',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[8]',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[9]',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[10]',0)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[11]',32)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[12]',4)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[13]',36)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[14]',0)-- Configuration instance
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[15]',44)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[16]',150)--assembly instance (output)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[17]',44)
  --Set_I_Svar('$EIP_SC['+Con_String+'].$CN_PATH[18]',100) --assembly instance (input)

  -- Enable the connection
  --Set_B_Svar('$EIP_CONN['+Con_String+'].$ENABLE',TRUE)
  -- Enable
  --Set_I_Svar('$EIP_CONN['+Con_String+'].$STATE',2)

END plwmproc_eip
-----------------------------------------------------------------------------
--************************************************************************
--                 Main Body of Program
--************************************************************************
 BEGIN


END GMENETS2
