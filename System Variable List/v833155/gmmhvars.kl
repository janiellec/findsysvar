-- -----------------------------------------------------------------------
--
--   MODULE:         GMMHVARS.KL
--   TITLE:          GMMHVARS PROGRAM
--
--
--   WRITTEN BY:     RANDY KOSASKI
--   REVISION DATE:  1/23/16
--
--   LANGUAGE:       KAREL 8.33 R30iB
--   CONTROL GROUP:  BODY SHOP EXECUTION GROUP
--   STATUS:
--
--
--   ORDER NUMBER:   GMGBL4
--   PROJECT NAME:   GM Global Center
--
--
--         FANUC Robotics retains rights in any and all Software
--         contained in the material attached hereto and said
--         Software may not be copied or reproduced without the
--         written permission of FANUC Robotics.
--
--         All Software, (C) Copyright FANUC Robotics Corporation, 2016
--         DESCRIPTION: Material Handling variable setup files. These routines will be
--                      called from the main wizard, no prompts are in the Variable file
--                      only the setttings GMWIZMH,GMWIZVIS are the questions
--
--         HISTORY OF CHANGES:
--
--         REVISION   DATE       BY               COMMENTS
--         --------   ---------  ---------------  --------------------
--
--
--
--
--------------------------------------------------------------------------
PROGRAM GMMHVARS

%COMMENT = 'MH Vars V4.0'

%NOLOCKGROUP
%INVISIBLE
%RWACCESS
%NOPAUSE = ERROR + COMMAND + TPENABLE

%ENVIRONMENT IOSETUP -- Required for the I/O Builtin support
%ENVIRONMENT SYSDEF  -- required for the $group[1]. variable

%INCLUDE kliotyps  -- Required for the base I/O types i.e. IO_DIN etc.
%INCLUDE gmevrlng  -- Required for the "swlang1" routine and its variables
%INCLUDE KLEVCCDF  -- Required for the TPERROR write command for the contants

CONST

Version = '2016-04-27'

%INCLUDE gmcnstnt -- all gm constants for wizard

VAR

  Current_Ver  IN SHADOW :STRING[32] -- Set equal to Version constant in initialization routine
  StrtinErs,   -- How many errors I/O error counter had when the program started

  l_i,i,        -- Used in FOR looping
  gm_status    : INTEGER

  Var_MH_Setup IN SHADOW  : BOOLEAN -- Used for if the variables have been setup previously

-- variables declared for All shops
%INCLUDE gmcfgcel  -- GM wizard variables for workcell variables that are common across all shops
%INCLUDE gmcfgerr  -- Required for the configuration for GM Error counting and logging

-- Variables declared for Applications
%INCLUDE gmcfgmh   -- GM wizard variables for MH Applications
%INCLUDE gmcfgtlc   -- GM wizard variables for tool changer Applications

ROUTINE writeLog(p_message: STRING; isError: BOOLEAN) FROM GMWIZLOG
%INCLUDE gmrdutil -- has all GM common wizard routine in it

-----------------------------------------------------------------------------
ROUTINE init_Vars
-- PURPOSE: to initialize variables associated with Material Handling setup
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

Current_Ver = Version -- Set the version for reference

IF UNINIT(wiz_lang) THEN
  wiz_lang = 1
ENDIF

 IF UNINIT(Use_MH_Tool) THEN -- When True using the MHGRIP routines
   Use_MH_Tool = FALSE
 ENDIF
 IF UNINIT(Updt_MH_Arry) THEN -- When True MHGRIP Array Sizes need to be done update was g_cfg_mh
   Updt_MH_Arry = TRUE
 ENDIF
 IF UNINIT(EOATCommType) THEN -- Tool Communication types 1=devicenet,2=Ethernet,3=RI/RO
   EOATCommType = 89
 ENDIF
 IF UNINIT(NumEOATInBlk) THEN -- Number of input blocks
   NumEOATInBlk = 0
 ENDIF
 IF UNINIT(EOATUseAnlog) THEN -- Use analog Input for gripper sensor
   EOATUseAnlog = FALSE
 ENDIF
  IF UNINIT(NumAnlogInpt) THEN -- If Analog for Powertrain
   NumAnlogInpt = 0
 ENDIF
 IF UNINIT(NumAnlogOtpt) THEN -- for future development
   NumAnlogOtpt = 0
 ENDIF
IF UNINIT(NumEOATOtMan) THEN -- Number of Output Manifolds
   NumEOATOtMan = 0
 ENDIF
 IF UNINIT(UseToolChngr) THEN -- If Tool Changer on Tool
   UseToolChngr = FALSE
 ENDIF
 IF UNINIT(TC_Comm_Type) THEN -- Communication  Type Device Ethernet 89, DeviceNet 82
   TC_Comm_Type = Ethernet
 ENDIF
 IF UNINIT(Num_ToolStnd) THEN -- Number of tool Stands 4 max
   Num_ToolStnd = 0
 ENDIF

FOR i = 1 TO ARRAY_LEN(ToolStndType) DO
  IF UNINIT(ToolStndType[i]) THEN  --Used for the tool stand(s) type 1 is single, 2 double
    ToolStndType[i] = 1
  ENDIF
ENDFOR --

 IF UNINIT(Use_Vacuum) THEN -- When True using the Vacuum is used
   Use_Vacuum = FALSE
 ENDIF
 IF UNINIT(NumVacPumps) THEN -- Number of Vacuum Pumps
   NumVacPumps = 0
 ENDIF
 IF UNINIT(VacPumpType) THEN -- Type of Vacuum Pumps
   VacPumpType = 1
 ENDIF

  RETURN

END init_Vars
-----------------------------------------------------------------------------
ROUTINE init_BS_MHV
-- PURPOSE: Load MH Variables that are unique to Body Shop Applications
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
-----------------------------------------------------------------------------
BEGIN

  writeLog('Loading MH Registers for Body Shop', FALSE)

  writeLog('Body Shop MH Registers loaded', FALSE)

END init_BS_MHV
-----------------------------------------------------------------------------
ROUTINE init_Prs_MHV
-- PURPOSE: Load vision Variables that are unique to Press Shop Applications
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
-----------------------------------------------------------------------------
BEGIN

writeLog('Loading Vision Registers for Press Shop', FALSE)

writeLog('Press Shop Vision Registers loaded', FALSE)

END init_Prs_MHV
-----------------------------------------------------------------------------
ROUTINE init_Pwr_MHV
-- PURPOSE: Load vision Variables that are unique to Powertrain Applications
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
-----------------------------------------------------------------------------
BEGIN
  writeLog('Loading Vision Registers for Powertrain', FALSE)

  writeLog('Powertrain Vision Registers loaded', FALSE)

END init_Pwr_MHV
-----------------------------------------------------------------------------
ROUTINE init_Pnt_MHV
-- PURPOSE: Load vision Variables that are unique to Paint Applications
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
-----------------------------------------------------------------------------
BEGIN

  writeLog('Loading Vision Registers for Paint Shop', FALSE)

  writeLog('Paint Shop Vision Registers loaded', FALSE)

END init_Pnt_MHV

-----------------------------------------------------------------------------
ROUTINE init_MH_VARS
-- PURPOSE: to initialize Material Handling Variables associated with MH setup
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

Current_Ver = Version -- Set the version for reference

 IF UNINIT(Var_MH_Setup) THEN
   Var_MH_Setup = FALSE
 ENDIF

IF Var_MH_Setup THEN
  IF NOT ExecSetupAgn('MH Variables') THEN -- ask user if they want to setup again
    RETURN
  ELSE
    Var_MH_Setup = FALSE
  ENDIF
ENDIF

sw_tglenbl = TRUE  --V833P06 update for all MH applications

writeLog('Loading MH Variables ALL Shops', FALSE)

Set_B_sVar('$ap_selap[4]',TRUE)  --MH

writeLog('ALL Shops MH Variables Loaded', FALSE)

SELECT mfg_area OF -- launch the Display Setup set by wizard or load feature
    CASE(mfg_area_bs):  --Body Shop
        init_BS_MHV
    CASE(mfg_area_ps):  --Press Shop
        init_Prs_MHV
    CASE(mfg_area_pt):  --Powertrain
        init_Pwr_MHV
    CASE(mfg_area_pn):  --Paint Shop
        init_Pnt_MHV
  ELSE:
    POST_ERR(38000, 'MFG_AREA '+int2str(mfg_area)+' INVALID in init_MH_VARS routine in GMMHVARS', 0, 0) --
    shop_str = 'Unknown'
ENDSELECT

  Var_MH_Setup =TRUE

END init_MH_VARS
-----------------------------------------------------------------------------
ROUTINE mh_webscrn
-- PURPOSE: sets up MH application web screen settings
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  Current_Ver = Version -- Set the version for reference

  writeLog('Loading MH Web Screen Settings', FALSE)

  Set_S_sVar('$UI_TOPMENU[5].$TEXT[8]', 'MH VALVE SETUP')
  Set_S_sVar('$UI_TOPMENU[5].$ICON[8]', '/FR/MHSETUP.JPG')
  Set_S_sVar('$UI_TOPMENU[5].$URL[8]', 'config=SINGLE&prim=menupage,938,129')

  writeLog('All MH Web Screens Settings Configured', FALSE)

END mh_webscrn
--************************************************************************
--
--                 Main Body of Program
--
--************************************************************************
BEGIN

init_Vars

Current_Ver = Version -- Set the version for reference
-- Check these here instead of a routine so can return to calling routine
IF UNINIT(mfg_area) THEN
  POST_ERR(38000, 'MFG_AREA not setup in GMMHVARS program', 0, 0) --
  RETURN
ENDIF
IF UNINIT(Use_MH_Tool) THEN
  POST_ERR(38000, 'Use_MH_Tool not setup in GMMHVARS program', 0, 0) --
  RETURN
ENDIF
IF UNINIT(ErrsInShop.ErrorsVarbls) THEN
  ErrsInShop.ErrorsVarbls = 0
ENDIF
IF UNINIT(Var_MH_Setup) THEN
  Var_MH_Setup = FALSE
ENDIF

 WriteLog('Starting Material Handling Vars setup Program', FALSE)

  IF (Var_MH_Setup = TRUE) THEN -- setup has already been setup
      WriteLog('MH Variables Already Setup', FALSE)
    IF ExecSetupAgn('MH Variables') THEN -- ask user if they want to setup again
      Var_MH_Setup = FALSE
    ELSE
      WriteLog('MH Variables already Complete', FALSE)
      WriteLog('GMMHVARS Setup NOT executing again', FALSE)
      RETURN
    ENDIF
  ENDIF

 StrtinErs = ErrsInShop.ErrorsVarbls -- grab curent eror count
 ClrUtltyErrs -- Clear all error in utility program to be used when done

 StrtinErs = ErrsInShop.ErrorsVarbls -- grab curent error count

 ClrUtltyErrs -- Clear all error in utility program to be used when done

  init_MH_VARS
  mh_webscrn

  ErrsInShop.ErrorsVarbls =  ErrsInShop.ErrorsVarbls + (AddUtltyErrs) -- Get all errors in utility program to be added to any program errors
 IF (ErrsInShop.ErrorsVarbls - StrtinErs) > 0 THEN -- check for I/O setup errors
   POST_ERR(38000, 'GMMHVARS had '+int2str((ErrsInShop.ErrorsVarbls - StrtinErs))+' while executing',0, 0) --
   WriteLog('MH Variable Program GMMHVARS had ' + int2str((ErrsInShop.ErrorsVarbls -StrtinErs))+' Errors', TRUE)
 ELSE
   WriteLog('Material Handling Variable setup Program completed', FALSE)
   Var_MH_Setup = TRUE
 ENDIF

  WriteLog('',FALSE)

END GMMHVARS
