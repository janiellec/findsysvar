-- -----------------------------------------------------------------------
--
--   MODULE:         GMSPOTIO.KL
--   TITLE:          GMSPOTIO PROGRAM
--
--
--   WRITTEN BY:     RANDY KOSASKI
--   REVISION DATE:  1/23/16
--
--   LANGUAGE:       KAREL 8.33 R30iB
--   CONTROL GROUP:  BODY SHOP EXECUTION GROUP
--   STATUS:
--
--
--   ORDER NUMBER:   GMGBL4
--   PROJECT NAME:   GM Global Center
--
--
--         FANUC Robotics retains rights in any and all Software
--         contained in the material attached hereto and said
--         Software may not be copied or reproduced without the
--         written permission of FANUC Robotics.
--
--         All Software, (C) Copyright FANUC Robotics Corporation, 2016
--         DESCRIPTION: Spot Program  program files. These routines will be
--                      called from the main wizard, no prompts are in the Variable file
--                      only the setttings GMWIZARD are the questions
--
--         HISTORY OF CHANGES:
--
--         REVISION   DATE       BY               COMMENTS
--         --------   ---------  ---------------  --------------------
--         V4.1       2017/01/10 marchaka 	  Added DI 82,83,106,107,146,147,170 and 171.  Fixed input number 
--                                                for process 2 digital inputs (148-157).  Added DO 106,107,170 
--                                                and 171.  Updated DO 104.
--         V4.1       2017/02/05 marchaka         Modify prompts for wizard rerun
--         V4.1       2017/03/15 marchaka         Add gun open on fault I/O system variable settings
--         V4.2       2017/05/04 marchaka         Add number of guns for equipment 2 functinality to FOR loop for 
--                                                gun open on fault settings
--         V4.3       2018/04/04 schoensm					V8.33P05 update
--         V4.4       2020/11/09 marchaka         Add servo gun thickness out of tolerance output
--
--
--
--------------------------------------------------------------------------
PROGRAM GMSPOTIO

%COMMENT = 'GM SPOT I/O V4.4'

%NOLOCKGROUP
%INVISIBLE
%RWACCESS
%NOPAUSE = ERROR + COMMAND + TPENABLE

%INCLUDE KLEVCCDF  -- Required for the TPERROR write command for the contants
%INCLUDE kliotyps  -- Required for the base I/O types i.e. IO_DIN etc.

-- variables declared for All shops
%INCLUDE gmcfgcel  -- GM wizard variables for workcell variables that are common across all shops
%INCLUDE gmcfgerr  -- Required for the configuration for GM Error counting and logging
%INCLUDE gmcfgbdy  -- body shop variables
%INCLUDE gmcfgspt  -- spot application variables
%INCLUDE gm_var    -- GM variables
%INCLUDE gmevrs4io -- GM variables

CONST

Version = '2020-11-09'
%INCLUDE gmcnstnt -- all GM constants for the wizard

VAR

  Current_Ver  IN SHADOW :STRING[32] -- Set equal to Version constant in initialization routine
  StrtinErs   : INTEGER   -- How many errors I/O error counter had when the program started
  SpotIO_Setup  IN SHADOW : BOOLEAN  -- Keeps track if routine setup Mh I/O at least first time

  Num, i,gm_status  :INTEGER -- Used for Temp vars

  SpotSetup IN SHADOW : ARRAY[max_spot_eq] OF BOOLEAN -- indicates if the Spot has been setup before

  spot_1_slot,
  spot_2_slot    IN CMOS: INTEGER -- used for which Node or Slot the Equiptment will use Def.=Ethernet

  wtr_1_slot,
  wtr_2_slot    IN CMOS: INTEGER -- used for which Node or Slot the Equiptment will use Def.=Ethernet

  td_slot,
  pg1_slot,
  pg2_slot,
  cgi_slot,
  cgpgi_slot,
  cg_slot,
  td2_slot,
  cg2_slot,
  cgi2_slot,
  pgi2_slot      IN CMOS: INTEGER --used for ENET slot


ROUTINE writeLog(p_message: STRING; isError: BOOLEAN) FROM GMWIZLOG

%INCLUDE klrdutil
%INCLUDE GMRDUTIL -- Utility Routine for Setting Variables

ROUTINE srvo_optn FROM gmwizspt --check if servo gun option loaded
ROUTINE WTC_EIP(P_Con_Num:INTEGER;p_Con_Name:STRING;P_host_ip:STRING) FROM gmenetsu
ROUTINE PROWTRSV_EIP(P_Con_Num:INTEGER;p_Con_Name:STRING) FROM gmenetsu
-----------------------------------------------------------------------------
ROUTINE initSpot_IO
-- PURPOSE: to initialize Programs associated with I/O setup
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

-- Check Common spot variables used in the program to be setup
IF UNINIT(spotcommtype) THEN --set hook for multiple communications
  spotcommtype = Ethernet -- set it to 89
ENDIF
IF UNINIT(numwldctrl) THEN
  numwldctrl = 0
ENDIF
IF UNINIT(Reset_Cell) THEN
  Reset_Cell = FALSE
ENDIF

-- Check variable associated with weld controller #1
IF UNINIT(SpotSetup[1]) THEN
  SpotSetup[1] = FALSE
ENDIF
IF UNINIT(bshop_proc1) THEN
  bshop_proc1 = 0
ENDIF
IF UNINIT(spot_1_slot) THEN
  spot_1_slot = 2
ENDIF

-- Check variable associated with weld controller #1
IF UNINIT(SpotSetup[2]) THEN
  SpotSetup[2] = FALSE
ENDIF
IF UNINIT(bshop_proc2) THEN
  bshop_proc2 = 0
ENDIF
IF UNINIT(spot_2_slot) THEN
  spot_2_slot = 3
ENDIF

IF UNINIT(wtr_1_slot) THEN
  wtr_1_slot = 48
ENDIF
IF UNINIT(wtr_2_slot) THEN
  wtr_2_slot = 50
ENDIF

IF UNINIT(td_slot) THEN
  td_slot = 20
ENDIF
IF UNINIT(pg1_slot) THEN
  pg1_slot = 21
ENDIF
IF UNINIT(pg2_slot) THEN
  pg2_slot = 22
ENDIF
IF UNINIT(cgi_slot) THEN
  cgi_slot = 45
ENDIF
IF UNINIT(cgpgi_slot) THEN
  cgpgi_slot = 46
ENDIF
IF UNINIT(cg_slot) THEN
  cg_slot = 47
ENDIF
IF UNINIT(td2_slot) THEN
  td2_slot = 38
ENDIF
IF UNINIT(cg2_slot) THEN
  cg2_slot = 49
ENDIF
IF UNINIT(cgi2_slot) THEN
  cgi2_slot = 51
ENDIF
IF UNINIT(pgi2_slot) THEN
  pgi2_slot = 52
ENDIF

IF UNINIT(g_servog_opt) THEN
    srvo_optn
ENDIF

IF UNINIT(do_comp_io) THEN
  do_comp_io = FALSE
ENDIF

END initSpot_IO
-----------------------------------------------------------------------------
ROUTINE spotprc1_io
-- PURPOSE: set spot process 1 i/o
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  initSpot_IO

  IF (numwldctrl <> 0) THEN --setup process 1 spot I/O

    --IF SpotSetup[1] = TRUE THEN -- Spot I/O has already been setup
      --WRITE TPERROR(CHR(cc_clear_win),'Spot #1 Already Setup')
      --IF NOT ExecSetupAgn('Spot#1') THEN -- ask user if they want to setup again
        --RETURN
      --ENDIF
    --ENDIF

     -- Controller#1 INPUTS set the rack lenght so TP display is all inclusive of the 64 bits
    SET_PORT_ASG(io_din,1025,spotcommtype, spot_1_slot,io_din,1,  -64, gm_status)
      IF (gm_status<>0) AND (gm_Status <> 13149) THEN --PRIO-149 Invalid Assignment Recorded
        POST_ERR(38000, 'Rack '+int2Str(spotcommtype)+' Slot ' +Int2str(spot_1_slot)+' Setup FAILED', gm_status, 0) --
        RETURN  -- Return, cant set this  leave so user will know not correct, probably wont work anyway
      ENDIF
    -- Controller#1 OUTPUTS set the rack lenght so TP display is all inclusive of the 64 bits
    SET_PORT_ASG(io_dout,1025,spotcommtype, spot_1_slot,io_dout,1,  -64, gm_status)
      IF (gm_status<>0) AND (gm_Status <> 13149) THEN --PRIO-149 Invalid Assignment Recorded
        POST_ERR(38000, 'Rack '+int2Str(spotcommtype)+' Slot ' +Int2str(spot_1_slot)+' Setup FAILED', gm_status, 0) --
        RETURN  -- Return, cant set this  leave so user will know not correct, probably wont work anyway
    ENDIF

    SET_PORT_ASG(io_din,2041,34,1,io_din,59, -1, gm_status) --DI[2041] mapped to flag 59, controlled in TP logic
    SET_PORT_ASG(io_dout,2041,34,1,io_dout,60, -1, gm_status) --DO[2041] mapped to flag 60, controlled in PMC

    --Inputs
    --Process Equipment #1 Cell Inputs
    SET_PORT_CMT(IO_DIN,81, 'CC Bypassed', gm_status) -- 3-26-18 sms V833P05
    SET_PORT_CMT(IO_DIN,82, 'diP1SkipTD', gm_status)
    SET_PORT_CMT(IO_DIN,83, 'diP1SkipDVG',  gm_status)
    SET_PORT_CMT(IO_DIN,84, 'di_TCCapsCC_Mode', gm_status) 
    SET_PORT_CMT(IO_DIN,85, 'diP1TipChgReqG1',  gm_status)
    SET_PORT_CMT(IO_DIN,86, 'diP1TipChgReqG2',  gm_status)
    SET_PORT_CMT(IO_DIN,87, 'diP1TipChgReqG3',  gm_status)
    SET_PORT_CMT(IO_DIN,88, 'diP1TipChgReqG4',  gm_status)
    SET_PORT_CMT(IO_DIN,89, 'diP1TipMantReqG1', gm_status)
    SET_PORT_CMT(IO_DIN,90, 'diP1TipMantReqG2', gm_status)
    SET_PORT_CMT(IO_DIN,91, 'diP1TipMantReqG3', gm_status)
    SET_PORT_CMT(IO_DIN,92, 'diP1TipMantReqG4', gm_status)
    SET_PORT_CMT(IO_DIN,93, 'diP1AdptRerunPt', gm_status)
    SET_PORT_CMT(IO_DIN,106, 'diP1CloseGunReq', gm_status)
    SET_PORT_CMT(IO_DIN,107, 'diP1OpenGunReq', gm_status)

    --Process Equipment #1 Inputs
    SET_PORT_CMT(IO_DIN,1025,'diSW1NoAlert',   gm_status)    -- No Alert (Minor Alarm to FRNA)
    SET_PORT_CMT(IO_DIN,1026,'diSW1NoFault',   gm_status)    -- No Alarm (Major Fault to FRNA)
    SET_PORT_CMT(IO_DIN,1027,'diSW1WeldModeOn',  gm_status)  -- Weld enabled/disabled
    SET_PORT_CMT(IO_DIN,1028,'diSW1ProcCmplt', gm_status)    -- Process Complete (Weld Complete to FRNA)
    SET_PORT_CMT(IO_DIN,1029,'diSW1InProgrss', gm_status)    -- In Progress
    SET_PORT_CMT(IO_DIN,1030,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1031,'diSW1ContctrOpn',gm_status)    -- Contactor Open
    SET_PORT_CMT(IO_DIN,1032,'diSW1NoCtrlStop',gm_status)    -- Ctrl Stop NO
    SET_PORT_CMT(IO_DIN,1033,'diSW1ApprCpChgG1',gm_status)   -- Approaching Cap Change
    SET_PORT_CMT(IO_DIN,1034,'diSW1ApprCpChgG2',gm_status)   -- Approaching Cap Change
    SET_PORT_CMT(IO_DIN,1035,'diSW1ApprCpChgG3',gm_status)   -- Approaching Cap Change
    SET_PORT_CMT(IO_DIN,1036,'diSW1ApprCpChgG4',gm_status)   -- Approaching Cap Change
    SET_PORT_CMT(IO_DIN,1037,'(Reserved)',gm_status)   
    SET_PORT_CMT(IO_DIN,1038,'(Reserved)',gm_status)   
    SET_PORT_CMT(IO_DIN,1039,'diSW1StepResetG1', gm_status)  -- All Steppers Reset
    SET_PORT_CMT(IO_DIN,1040,'diSW1StepResetG2', gm_status)  -- All Steppers Reset    
    SET_PORT_CMT(IO_DIN,1041,'diSW1StepResetG3', gm_status)  -- All Steppers Reset
    SET_PORT_CMT(IO_DIN,1042,'diSW1StepResetG4', gm_status)  -- All Steppers Reset
    SET_PORT_CMT(IO_DIN,1043,'(Reserved)',gm_status)   
    SET_PORT_CMT(IO_DIN,1044,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1045,'diSW1TDRequestG1',gm_status)   -- Tip dress request
    SET_PORT_CMT(IO_DIN,1046,'diSW1TDRequestG2',gm_status)   -- Tip dress request
    SET_PORT_CMT(IO_DIN,1047,'diSW1TDRequestG3',gm_status)   -- Tip dress request
    SET_PORT_CMT(IO_DIN,1048,'diSW1TDRequestG4',gm_status)   -- Tip dress request
    SET_PORT_CMT(IO_DIN,1049,'(Reserved)',gm_status)   
    SET_PORT_CMT(IO_DIN,1050,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1051,'(Reserved)',gm_status)   
    SET_PORT_CMT(IO_DIN,1052,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1053,'(Reserved)',gm_status)   
    SET_PORT_CMT(IO_DIN,1054,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1055,'(Reserved)',gm_status)   
    SET_PORT_CMT(IO_DIN,1056,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1057,'diSW1CChngeReqG1',gm_status)   -- Cap Change Request
    SET_PORT_CMT(IO_DIN,1058,'diSW1CChngeReqG2',gm_status)   -- Cap Change Request
    SET_PORT_CMT(IO_DIN,1059,'diSW1CChngeReqG3',gm_status)   -- Cap Change Request
    SET_PORT_CMT(IO_DIN,1060,'diSW1CChngeReqG4',gm_status)   -- Cap Change Request
    SET_PORT_CMT(IO_DIN,1061,'(Reserved)',gm_status)   
    SET_PORT_CMT(IO_DIN,1062,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1063,'diSW1Pressure1', gm_status)    -- Pressure Bit 1
    SET_PORT_CMT(IO_DIN,1064,'diSW1Pressure2', gm_status)    -- Pressure Bit 2
    SET_PORT_CMT(IO_DIN,1065,'diSW1Pressure4', gm_status)    -- Pressure Bit 4
    SET_PORT_CMT(IO_DIN,1066,'diSW1Pressure8', gm_status)    -- Pressure Bit 8
    SET_PORT_CMT(IO_DIN,1067,'diSW1ReadPrssre',gm_status)    -- Read Pressure
    SET_PORT_CMT(IO_DIN,1068,'(Reserved)',gm_status)   
    SET_PORT_CMT(IO_DIN,1069,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1070,'(Reserved)',gm_status)   
    SET_PORT_CMT(IO_DIN,1071,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1072,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1073,'diSW1ProcessStop',gm_status)
    SET_PORT_CMT(IO_DIN,1074,'diSW1AdaptRegOff',gm_status)
    SET_PORT_CMT(IO_DIN,1075,'diSW1AdaptMtrOff',gm_status)
    SET_PORT_CMT(IO_DIN,1076,'diSW1EndPrtReply',gm_status)
    SET_PORT_CMT(IO_DIN,1077,'diSW1AdaptiveCap',gm_status)
    SET_PORT_CMT(IO_DIN,1078,'(Reserved)',gm_status)   
    SET_PORT_CMT(IO_DIN,1079,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1080,'(Reserved)',gm_status)   
    SET_PORT_CMT(IO_DIN,1081,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1082,'(Reserved)',gm_status)   
    SET_PORT_CMT(IO_DIN,1083,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1084,'(Reserved)',gm_status)   
    SET_PORT_CMT(IO_DIN,1085,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1086,'(Reserved)',gm_status)   
    SET_PORT_CMT(IO_DIN,1087,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1088,'(Reserved)',gm_status)

    --Robot Internal Bit
    SET_PORT_CMT(IO_DIN,2041,'DressVerify',gm_status)

    --Thickness Check
    IF (g_servog_opt = TRUE) AND ((wld1_app = wld1app_cg) OR (wld1_app = wld1app_cgmh))  THEN --app has a single carried servo gun 
      SET_PORT_CMT(IO_DIN,425,'diThkChkSkip',gm_status)
    ENDIF

    --Group Inputs
    --Process Equipment#1
    SET_PORT_ASG(IO_GPIN,12,spotcommtype,spot_1_slot,IO_DIN,39,-4,gm_status)
    SET_PORT_CMT(IO_GPIN,12,'SW1Pressure',gm_status)

    --Outputs
    --Process Equipment #1 Cell outputs  
    SET_PORT_CMT(IO_DOUT,73,'doP1CntNoFlt',   gm_status)
    SET_PORT_CMT(IO_DOUT,74,'doP1TDFlt',   gm_status)
    SET_PORT_CMT(IO_DOUT,75,'doP1WsFlowOk',   gm_status)
    SET_PORT_CMT(IO_DOUT,76,'doP1TDCurFlt',   gm_status)
    SET_PORT_CMT(IO_DOUT,77,'doP1Step1Rst',   gm_status)
    SET_PORT_CMT(IO_DOUT,78,'doP1Step2Rst',   gm_status)
    SET_PORT_CMT(IO_DOUT,79,'doP1Step3Rst',   gm_status)
    SET_PORT_CMT(IO_DOUT,80,'doP1Step4Rst',   gm_status)
    SET_PORT_CMT(IO_DOUT,81,'doP1ApprTipChgG1',   gm_status)
    SET_PORT_CMT(IO_DOUT,82,'doP1ApprTipChgG2',   gm_status)
    SET_PORT_CMT(IO_DOUT,83,'doP1ApprTipChgG3',   gm_status)
    SET_PORT_CMT(IO_DOUT,84,'doP1ApprTipChgG4',   gm_status)
    SET_PORT_CMT(IO_DOUT,85,'doP1TipChgReqG1',   gm_status)
    SET_PORT_CMT(IO_DOUT,86,'doP1TipChgReqG2',   gm_status)
    SET_PORT_CMT(IO_DOUT,87,'doP1TipChgReqG3',   gm_status)
    SET_PORT_CMT(IO_DOUT,88,'doP1TipChgReqG4',   gm_status)
    SET_PORT_CMT(IO_DOUT,89,'doP1TipMantReqG1',   gm_status)
    SET_PORT_CMT(IO_DOUT,90,'doP1TipMantReqG2',   gm_status)
    SET_PORT_CMT(IO_DOUT,91,'doP1TipMantReqG3',   gm_status)
    SET_PORT_CMT(IO_DOUT,92,'doP1TipMantReqG4',   gm_status)
    SET_PORT_CMT(IO_DOUT,93,'doP1CutterLimit',   gm_status)
    SET_PORT_CMT(IO_DOUT,94,'doP1AdaptCapable',   gm_status)
    SET_PORT_CMT(IO_DOUT,95,'doP1AdaptSchAlrt',   gm_status)
    SET_PORT_CMT(IO_DOUT,96,'doP1SG1TipChgReq',   gm_status)
    SET_PORT_CMT(IO_DOUT,97,'doP1SG2TipChgReq',   gm_status)
    SET_PORT_CMT(IO_DOUT,98,'doP1SG3TipChgReq',   gm_status)
    SET_PORT_CMT(IO_DOUT,99,'doP1SG4TipChgReq',   gm_status)
    SET_PORT_CMT(IO_DOUT,100,'doP1SGApprTipReplace',   gm_status)
    SET_PORT_CMT(IO_DOUT,101,'doP1SGTorqueAlert',   gm_status)
    SET_PORT_CMT(IO_DOUT,102,'doP1TopCapCartridg',   gm_status)
    SET_PORT_CMT(IO_DOUT,103,'doP1BtmCapCartridg',   gm_status)
    SET_PORT_CMT(IO_DOUT,104,'doP1CartClampClsd',   gm_status)
    SET_PORT_CMT(IO_DOUT,105,'doP1EqNotCtrlStopped',   gm_status)
    SET_PORT_CMT(IO_DOUT,106,'doP1GunClosed',   gm_status)
    SET_PORT_CMT(IO_DOUT,107,'doP1GunOpenAck',   gm_status)

    --Process Equipment #2 Outputs
    SET_PORT_CMT(IO_DOUT,1025,'doSW1WeldMode', gm_status)   -- Weld Mode
    SET_PORT_CMT(IO_DOUT,1026,'doSW1FaultReset', gm_status) -- Fault Reset
    SET_PORT_CMT(IO_DOUT,1027,'doSW1EnContact',  gm_status) -- Enable contactor saver
    SET_PORT_CMT(IO_DOUT,1028,'(Reserved)', gm_status) 
    SET_PORT_CMT(IO_DOUT,1029,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1030,'doSW1ReqPrssre',  gm_status) -- Request Pressure
    SET_PORT_CMT(IO_DOUT,1031,'doSW1InitWeld',   gm_status) -- Initiate Weld (Read Schedule to FRNA)
    SET_PORT_CMT(IO_DOUT,1032,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1033,'goSW1BinS      1', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1034,'goSW1BinS      2', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1035,'goSW1BinS      4', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1036,'goSW1BinS      8', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1037,'goSW1BinS     16', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1038,'goSW1BinS     32', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1039,'goSW1BinS     64', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1040,'goSW1BinS    128', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1041,'goSW1BinS    256', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1042,'goSW1BinS    512', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1043,'goSW1BinS   1024', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1044,'goSW1BinS   2048', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1045,'goSW1BinS   4096', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1046,'goSW1BinS   8192', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1047,'goSW1BinS  16384', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1048,'goSW1BinS  32768', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1049,'goSW1BinS  65536', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1050,'goSW1BinS 131072', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1051,'goSW1BinS 262144', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1052,'goSW1BinS 524288', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1053,'doSW1WldBdyID1',   gm_status)  -- Data 1 (Weld Body ID)
    SET_PORT_CMT(IO_DOUT,1054,'doSW1WldBdyID2',   gm_status)  -- Data 1 (Weld Body ID)
    SET_PORT_CMT(IO_DOUT,1055,'doSW1WldBdyID4',   gm_status)  -- Data 1 (Weld Body ID)
    SET_PORT_CMT(IO_DOUT,1056,'doSW1WldBdyID8',   gm_status)  -- Data 1 (Weld Body ID)
    SET_PORT_CMT(IO_DOUT,1057,'doSW1WldBdyID16',  gm_status)  -- Data 1 (Weld Body ID)
    SET_PORT_CMT(IO_DOUT,1058,'doSW1WldBdyID32',  gm_status)  -- Data 1 (Weld Body ID)
    SET_PORT_CMT(IO_DOUT,1059,'doSW1WldBdyID64',  gm_status)  -- Data 1 (Weld Body ID)
    SET_PORT_CMT(IO_DOUT,1060,'doSW1WldBdyID128', gm_status)  -- Data 1 (Weld Body ID)
    SET_PORT_CMT(IO_DOUT,1061,'doSW1StprRstGn1', gm_status)   -- Data 1 (Stepper Reset)
    SET_PORT_CMT(IO_DOUT,1062,'doSW1StprRstGn2', gm_status)   -- Data 1 (Stepper Reset)
    SET_PORT_CMT(IO_DOUT,1063,'doSW1StprRstGn3', gm_status)   -- Data 1 (Stepper Reset)
    SET_PORT_CMT(IO_DOUT,1064,'doSW1StprRstGn4', gm_status)   -- Data 1 (Stepper Reset)
    SET_PORT_CMT(IO_DOUT,1065,'(Reserved)', gm_status) 
    SET_PORT_CMT(IO_DOUT,1066,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1067,'(Reserved)', gm_status) 
    SET_PORT_CMT(IO_DOUT,1068,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1069,'(Reserved)', gm_status) 
    SET_PORT_CMT(IO_DOUT,1070,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1071,'(Reserved)', gm_status) 
    SET_PORT_CMT(IO_DOUT,1072,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1073,'doSW1PrtFinished', gm_status)  -- Data 1 (Adaptive Welding)
    SET_PORT_CMT(IO_DOUT,1074,'doSW1GnResistChk', gm_status)  -- Data 1 (Adaptive Welding)
    SET_PORT_CMT(IO_DOUT,1075,'doSW1Reweld', gm_status)       -- Data 1 (Adaptive Welding)
    SET_PORT_CMT(IO_DOUT,1076,'(Reserved)', gm_status) 
    SET_PORT_CMT(IO_DOUT,1077,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1078,'(Reserved)', gm_status) 
    SET_PORT_CMT(IO_DOUT,1079,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1080,'(Reserved)', gm_status) 
    SET_PORT_CMT(IO_DOUT,1081,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1082,'(Reserved)', gm_status) 
    SET_PORT_CMT(IO_DOUT,1083,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1084,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1085,'(Reserved)', gm_status) 
    SET_PORT_CMT(IO_DOUT,1086,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1087,'(Reserved)', gm_status) 
    SET_PORT_CMT(IO_DOUT,1088,'(Reserved)', gm_status)

    --Robot Internal Output
    SET_PORT_CMT(IO_DOUT,2041,'TdDrsVerCmp', gm_status)

    --Thickness Check
    IF (g_servog_opt = TRUE) AND ((wld1_app = wld1app_cg) OR (wld1_app = wld1app_cgmh)) THEN --app has a single carried servo gun
      SET_PORT_CMT(IO_DOUT,425,'doThicknessCHK', gm_status)
    ENDIF       

    --Process Equipment #2 Group Outputs
    SET_PORT_ASG(IO_GPOUT,41,spotcommtype,spot_1_slot,IO_DOUT,9,-16,gm_status)   -- Weld Schedule
    SET_PORT_CMT(IO_GPOUT,41,'WldSchCnt1',gm_status)
    SET_PORT_ASG(IO_GPOUT,42,spotcommtype,spot_1_slot,IO_DOUT,25,-4,gm_status)   -- Weld Schedule
    SET_PORT_CMT(IO_GPOUT,42,'WldSchCnt1Cont',gm_status)        
    SET_PORT_ASG(IO_GPOUT,43,spotcommtype,spot_1_slot,IO_DOUT,29,-8,gm_status)   
    SET_PORT_CMT(IO_GPOUT,43,'Weld BodyID Cnt1',gm_status)

    --EIP question removed, GM may want to add this back (v833p02, sept 2016)
    --IF ((spotcommtype = Ethernet) AND (wldapp[1].wld_eip = wizans_yes)) THEN
      WTC_EIP(spot_1_slot,'SPOT1','')
    --ENDIF

  ENDIF --process 1 spot I/O

END spotprc1_io
-----------------------------------------------------------------------------
ROUTINE spotprc2_io
-- PURPOSE: set spot I/O variables
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  initSpot_IO

  IF (numwldctrl = 2) THEN --setup process 2 spot I/O

    --IF SpotSetup[2] = TRUE THEN -- Spot I/O has already been setup
      --WRITE TPERROR(CHR(cc_clear_win),'Spot #2 Already Setup')
      --IF NOT ExecSetupAgn('Spot#2') THEN -- ask user if they want to setup again
        --RETURN
      --ENDIF
    --ENDIF

     -- Controller#2 INPUTS set the rack lenght so TP display is all inclusive of the 64 bits
    SET_PORT_ASG(io_din,1153,spotcommtype, spot_2_slot,io_din,1,  -64, gm_status)
      IF (gm_status<>0) AND (gm_Status <> 13149) THEN --PRIO-149 Invalid Assignment Recorded
        POST_ERR(38000, 'Rack '+int2Str(spotcommtype)+' Slot ' +Int2str(spot_2_slot)+' Setup FAILED', gm_status, 0) --
        RETURN  -- Return, cant set this  leave so user will know not correct, probably wont work anyway
      ENDIF
    -- Controller#2 OUTPUTS set the rack lenght so TP display is all inclusive of the 64 bits
    SET_PORT_ASG(io_dout,1153,spotcommtype, spot_2_slot,io_dout,1,  -64, gm_status)
      IF (gm_status<>0) AND (gm_Status <> 13149) THEN --PRIO-149 Invalid Assignment Recorded
        POST_ERR(38000, 'Rack '+int2Str(spotcommtype)+' Slot ' +Int2str(spot_2_slot)+' Setup FAILED', gm_status, 0) --
        RETURN  -- Return, cant set this  leave so user will know not correct, probably wont work anyway
    ENDIF

    --Process 2 Cell Inputs
    SET_PORT_CMT(IO_DIN,146, 'diP2SkipTD',  gm_status)
    SET_PORT_CMT(IO_DIN,147, 'diP2SkipDVG',  gm_status)
    SET_PORT_CMT(IO_DIN,148, 'di_TCCapsCC_Mode',  gm_status)
    SET_PORT_CMT(IO_DIN,149, 'diP2TipChgReqG1',  gm_status)
    SET_PORT_CMT(IO_DIN,150, 'diP2TipChgReqG2',  gm_status)
    SET_PORT_CMT(IO_DIN,153, 'diP2TipMantReqG1',  gm_status)
    SET_PORT_CMT(IO_DIN,154, 'diP2TipMantReqG2',  gm_status)
    SET_PORT_CMT(IO_DIN,157, 'diP2AdaptRerunPt',  gm_status)
    SET_PORT_CMT(IO_DIN,170, 'diP2CloseGunReq', gm_status)
    SET_PORT_CMT(IO_DIN,171, 'diP2OpenGunReq', gm_status)

    --Process 2 Inputs
    SET_PORT_CMT(IO_DIN,1153,'diSW2NoAlert',   gm_status)     -- No Alert (Minor Alarm to FRNA)
    SET_PORT_CMT(IO_DIN,1154,'diSW2NoFault',   gm_status)     -- No Alarm (Major Fault to FRNA)
    SET_PORT_CMT(IO_DIN,1155,'diSW2WeldModeOn',  gm_status)    -- Weld enabled/disabled
    SET_PORT_CMT(IO_DIN,1156,'diSW2ProcCmplt', gm_status)     -- Process Complete (Weld Complete to FRNA)
    SET_PORT_CMT(IO_DIN,1157,'diSW2InProgrss', gm_status)     -- In Progress
    SET_PORT_CMT(IO_DIN,1158,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1159,'diSW2ContctrOpn',gm_status)     -- Contactor Open
    SET_PORT_CMT(IO_DIN,1160,'diSW2NoCtrlStop',gm_status)     -- Ctrl Stop NO
    SET_PORT_CMT(IO_DIN,1161,'diSW2ApprCpChgG1',gm_status)    -- Approaching Cap Change
    SET_PORT_CMT(IO_DIN,1162,'diSW2ApprCpChgG2',gm_status)    -- Approaching Cap Change
    SET_PORT_CMT(IO_DIN,1163,'diSW2ApprCpChgG3',gm_status)    -- Approaching Cap Change
    SET_PORT_CMT(IO_DIN,1164,'diSW2ApprCpChgG4',gm_status)    -- Approaching Cap Change
    SET_PORT_CMT(IO_DIN,1165,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1166,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1167,'diSW2StepResetG1', gm_status)    -- All Steppers Reset    
    SET_PORT_CMT(IO_DIN,1168,'diSW2StepResetG2', gm_status)    -- All Steppers Reset
    SET_PORT_CMT(IO_DIN,1169,'diSW2StepResetG3', gm_status)    -- All Steppers Reset
    SET_PORT_CMT(IO_DIN,1170,'diSW2StepResetG4', gm_status)    -- All Steppers Reset
    SET_PORT_CMT(IO_DIN,1171,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1172,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1173,'diSW2TDRequestG1',gm_status)     -- Tip dress request
    SET_PORT_CMT(IO_DIN,1174,'diSW2TDRequestG2',gm_status)     -- Tip dress request
    SET_PORT_CMT(IO_DIN,1175,'diSW2TDRequestG3',gm_status)     -- Tip dress request
    SET_PORT_CMT(IO_DIN,1176,'diSW2TDRequestG4',gm_status)     -- Tip dress request
    SET_PORT_CMT(IO_DIN,1177,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1178,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1179,'diSW2TDResetG1',gm_status)      
    SET_PORT_CMT(IO_DIN,1180,'diSW2TDResetG2',gm_status)       
    SET_PORT_CMT(IO_DIN,1181,'diSW2TDResetG3',gm_status)        
    SET_PORT_CMT(IO_DIN,1182,'diSW2TDResetG4',gm_status)      
    SET_PORT_CMT(IO_DIN,1183,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1184,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1185,'diSW2CChngeReqG1',gm_status)     -- Cap Change Request
    SET_PORT_CMT(IO_DIN,1186,'diSW2CChngeReqG2',gm_status)     -- Cap Change Request
    SET_PORT_CMT(IO_DIN,1187,'diSW2CChngeReqG3',gm_status)     -- Cap Change Request
    SET_PORT_CMT(IO_DIN,1188,'diSW2CChngeReqG4',gm_status)     -- Cap Change Request 
    SET_PORT_CMT(IO_DIN,1189,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1190,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1191,'diSW2Pressure1', gm_status)      -- Pressure Bit 1
    SET_PORT_CMT(IO_DIN,1192,'diSW2Pressure2', gm_status)      -- Pressure Bit 2
    SET_PORT_CMT(IO_DIN,1193,'diSW2Pressure4', gm_status)      -- Pressure Bit 4
    SET_PORT_CMT(IO_DIN,1194,'diSW2Pressure8', gm_status)      -- Pressure Bit 8
    SET_PORT_CMT(IO_DIN,1195,'diSW2ReadPrssre',gm_status)      -- Read Pressure
    SET_PORT_CMT(IO_DIN,1196,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1197,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1198,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1199,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1200,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1201,'diSW2ProcessStop',gm_status)
    SET_PORT_CMT(IO_DIN,1202,'diSW2AdaptRegOff',gm_status)
    SET_PORT_CMT(IO_DIN,1203,'diSW2AdaptMtrOff',gm_status)
    SET_PORT_CMT(IO_DIN,1204,'diSW2EndPrtReply',gm_status)
    SET_PORT_CMT(IO_DIN,1205,'diSW2AdaptiveCap',gm_status)
    SET_PORT_CMT(IO_DIN,1206,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1207,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1208,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1209,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1210,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1211,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1212,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1213,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1214,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1215,'(Reserved)',gm_status)
    SET_PORT_CMT(IO_DIN,1216,'(Reserved)',gm_status)

    --Process 2 Group Inputs
    SET_PORT_ASG(IO_GPIN,13, spotcommtype,spot_2_slot,IO_DIN,39,-4,gm_status)  -- Weld Pressure
    SET_PORT_CMT(IO_GPIN,13,'SW2Pressure',gm_status)

    --Process 2 Cell Outputs
    SET_PORT_CMT(IO_DOUT,137,'doP2CntNoFlt',   gm_status)
    SET_PORT_CMT(IO_DOUT,138,'doP2TDFlt',   gm_status)
    SET_PORT_CMT(IO_DOUT,139,'doP2WsFlowOk',   gm_status)
    SET_PORT_CMT(IO_DOUT,140,'doP2TDCurFlt',   gm_status)
    SET_PORT_CMT(IO_DOUT,141,'doP2Step1Rst',   gm_status)
    SET_PORT_CMT(IO_DOUT,142,'doP2Step2Rst',   gm_status)
    SET_PORT_CMT(IO_DOUT,143,'doP2Step3Rst',   gm_status)
    SET_PORT_CMT(IO_DOUT,144,'doP2Step4Rst',   gm_status)
    SET_PORT_CMT(IO_DOUT,145,'doP2ApprTipChgG1',   gm_status)
    SET_PORT_CMT(IO_DOUT,146,'doP2ApprTipChgG2',   gm_status)
    SET_PORT_CMT(IO_DOUT,147,'doP2ApprTipChgG3',   gm_status)
    SET_PORT_CMT(IO_DOUT,148,'doP2ApprTipChgG4',   gm_status)
    SET_PORT_CMT(IO_DOUT,149,'doP2TipChgReqG1',   gm_status)
    SET_PORT_CMT(IO_DOUT,150,'doP2TipChgReqG2',   gm_status)
    SET_PORT_CMT(IO_DOUT,151,'doP2TipChgReqG3',   gm_status)
    SET_PORT_CMT(IO_DOUT,152,'doP2TipChgReqG4',   gm_status)
    SET_PORT_CMT(IO_DOUT,153,'doP2TipMantReqG1',   gm_status)
    SET_PORT_CMT(IO_DOUT,154,'doP2TipMantReqG2',   gm_status)
    SET_PORT_CMT(IO_DOUT,155,'doP2TipMantReqG3',   gm_status)
    SET_PORT_CMT(IO_DOUT,156,'doP2TipMantReqG4',   gm_status)
    SET_PORT_CMT(IO_DOUT,157,'doP2CutterLimit',   gm_status)
    SET_PORT_CMT(IO_DOUT,158,'doP2AdaptCapable',   gm_status)
    SET_PORT_CMT(IO_DOUT,159,'doP2AdaptSchAlrt',   gm_status)
    SET_PORT_CMT(IO_DOUT,160,'doP2SG1TipChgReq',   gm_status)
    SET_PORT_CMT(IO_DOUT,161,'doP2SG2TipChgReq',   gm_status)
    SET_PORT_CMT(IO_DOUT,162,'doP2SG3TipChgReq',   gm_status)
    SET_PORT_CMT(IO_DOUT,163,'doP2SG4TipChgReq',   gm_status)
    SET_PORT_CMT(IO_DOUT,164,'doP2SGApprTipReplace',   gm_status)
    SET_PORT_CMT(IO_DOUT,165,'doP2SGTorqueAlert',   gm_status)
    SET_PORT_CMT(IO_DOUT,166,'doP2TopCapCartridg',   gm_status)
    SET_PORT_CMT(IO_DOUT,167,'doP2BtmCapCartridg',   gm_status)
    SET_PORT_CMT(IO_DOUT,168,'doP2CapPresentChk',   gm_status)
    SET_PORT_CMT(IO_DOUT,169,'doP2EqNotCtrlStopped',   gm_status)
    SET_PORT_CMT(IO_DOUT,170,'doP2GunClosed',   gm_status)
    SET_PORT_CMT(IO_DOUT,171,'doP2GunOpenAck',   gm_status)

    --Process 2 Outputs
    SET_PORT_CMT(IO_DOUT,1153,'doSW2WeldMode',   gm_status)   -- Weld Mode
    SET_PORT_CMT(IO_DOUT,1154,'doSW2FaultReset', gm_status)   -- Fault Reset
    SET_PORT_CMT(IO_DOUT,1155,'doSW2EnContact',  gm_status)   -- Enable Contactor Saver
    SET_PORT_CMT(IO_DOUT,1156,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1157,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1158,'doSW2ReqPrssre',  gm_status)   -- Request Pressure
    SET_PORT_CMT(IO_DOUT,1159,'doSW2InitWeld',   gm_status)   -- Initiate Weld (Read Schedule to FRNA)
    SET_PORT_CMT(IO_DOUT,1160,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1161,'goSW2BinS      1', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1162,'goSW2BinS      2', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1163,'goSW2BinS      4', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1164,'goSW2BinS      8', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1165,'goSW2BinS     16', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1166,'goSW2BinS     32', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1167,'goSW2BinS     64', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1168,'goSW2BinS    128', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1169,'goSW2BinS    256', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1170,'goSW2BinS    512', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1171,'goSW2BinS   1024', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1172,'goSW2BinS   2048', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1173,'goSW2BinS   4096', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1174,'goSW2BinS   8192', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1175,'goSW2BinS  16384', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1176,'goSW2BinS  32768', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1177,'goSW2BinS  65536', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1178,'goSW2BinS 131072', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1179,'goSW2BinS 262144', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1180,'goSW2BinS 524288', gm_status)  -- Data 1 (Weld Schedule)
    SET_PORT_CMT(IO_DOUT,1181,'goSW2WldBdyID1',   gm_status)  -- Data 1 (Weld Body ID)
    SET_PORT_CMT(IO_DOUT,1182,'goSW2WldBdyID2',   gm_status)  -- Data 1 (Weld Body ID)
    SET_PORT_CMT(IO_DOUT,1183,'goSW2WldBdyID4',   gm_status)  -- Data 1 (Weld Body ID)
    SET_PORT_CMT(IO_DOUT,1184,'goSW2WldBdyID8',   gm_status)  -- Data 1 (Weld Body ID)
    SET_PORT_CMT(IO_DOUT,1185,'goSW2WldBdyID16',  gm_status)  -- Data 1 (Weld Body ID)
    SET_PORT_CMT(IO_DOUT,1186,'goSW2WldBdyID32',  gm_status)  -- Data 1 (Weld Body ID)
    SET_PORT_CMT(IO_DOUT,1187,'goSW2WldBdyID64',  gm_status)  -- Data 1 (Weld Body ID)
    SET_PORT_CMT(IO_DOUT,1188,'goSW2WldBdyID128', gm_status)  -- Data 1 (Weld Body ID)
    SET_PORT_CMT(IO_DOUT,1189,'goSW2StprRstGn1', gm_status)   -- Data 1 (Stepper Reset)
    SET_PORT_CMT(IO_DOUT,1190,'goSW2StprRstGn2', gm_status)   -- Data 1 (Stepper Reset)
    SET_PORT_CMT(IO_DOUT,1191,'goSW2StprRstGn3', gm_status)   -- Data 1 (Stepper Reset)
    SET_PORT_CMT(IO_DOUT,1192,'goSW2StprRstGn4', gm_status)   -- Data 1 (Stepper Reset)
    SET_PORT_CMT(IO_DOUT,1193,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1194,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1195,'goSW2TipDrsdGn1', gm_status)   -- Data 1 (Stepper Reset)
    SET_PORT_CMT(IO_DOUT,1196,'goSW2TipDrsdGn2', gm_status)   -- Data 1 (Stepper Reset)
    SET_PORT_CMT(IO_DOUT,1197,'goSW2TipDrsdGn3', gm_status)   -- Data 1 (Stepper Reset
    SET_PORT_CMT(IO_DOUT,1198,'goSW2TipDrsdGn4', gm_status)   -- Data 1 (Stepper Reset)        
    SET_PORT_CMT(IO_DOUT,1199,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1200,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1201,'doSW2PrtFinished', gm_status)  -- Data 1 (Adaptive Welding)
    SET_PORT_CMT(IO_DOUT,1202,'doSW2GnResistChk', gm_status)  -- Data 1 (Adaptive Welding)
    SET_PORT_CMT(IO_DOUT,1203,'doSW2Reweld', gm_status)       -- Data 1 (Adaptive Welding)
    SET_PORT_CMT(IO_DOUT,1204,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1205,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1206,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1207,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1208,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1209,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1210,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1211,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1212,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1213,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1214,'(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT,1215,'(Reserved)', gm_status)   
    SET_PORT_CMT(IO_DOUT,1216,'(Reserved)', gm_status)

    --Process 2 Group Outputs
    SET_PORT_ASG(IO_GPOUT,44, spotcommtype,spot_2_slot,IO_DOUT,9,-16,gm_status)   -- Weld Schedule
    SET_PORT_CMT(IO_GPOUT,44,'Weld Sched Cnt2',gm_status)
    SET_PORT_ASG(IO_GPOUT,45, spotcommtype,spot_2_slot,IO_DOUT,25,-4,gm_status)   -- Weld Schedule
    SET_PORT_CMT(IO_GPOUT,45,'WldSchCnt2Cont',gm_status)
    SET_PORT_ASG(IO_GPOUT,46, spotcommtype,spot_2_slot,IO_DOUT,29,-8,gm_status)   
    SET_PORT_CMT(IO_GPOUT,46,'Weld BodyID Cnt2',gm_status)

    --EIP question removed, GM may want to add this back in (v833p02, sept 2016)
    --IF ((spotcommtype = Ethernet) AND (wldapp[2].wld_eip = wizans_yes)) THEN
      WTC_EIP(spot_2_slot,'SPOT2','')
    --ENDIF
    
  ENDIF --process 2 spot I/O

END spotprc2_io
-----------------------------------------------------------------------------
ROUTINE setspotiovr
-- PURPOSE: set spot I/O variables
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
VAR
gun_num: STRING[2]
eq_num: STRING[2]

BEGIN

  IF (numwldctrl <> 0) THEN --setup process 1
    
    --weld I/O menu variables
    spotctrl[1].spot_gun[1].di_minalm = 1025  -- No Alert (Minor Alarm to FRNA)
    spotctrl[1].spot_gun[1].di_majalm = 1026  -- No Alarm (Major Fault to FRNA)
    spotctrl[1].spot_gun[1].di_wdenbl = 1027  -- Weld enabled/disabled
    spotctrl[1].spot_gun[1].di_wdcomp = 1028  -- Process Complete (Weld Complete to FRNA)
    spotctrl[1].spot_gun[1].di_wdinpr = 1029  -- In Progress
    spotctrl[1].spot_gun[1].di_rdpres = 1067  -- Read Pressure
    spotctrl[1].spot_gun[1].gi_wldprs = 12    -- Pressure

    spotctrl[1].spot_gun[1].do_wdenbl = 1025  -- Weld Mode
    spotctrl[1].spot_gun[1].do_rstwc  = 1026  -- Fault Reset
    spotctrl[1].spot_gun[1].do_encnts = 1027  -- Enable contactor saver
    spotctrl[1].spot_gun[1].do_wdinit = 1031  -- Initiate Weld (Read Schedule to FRNA)   
    spotctrl[1].spot_gun[1].go_sched  = 41    -- Weld Schedule

    IF (g_servog_opt = TRUE) THEN --servo gun option loaded
      spotctrl[1].spot_gun[1].do_rqpres = 0     -- Request Pressure  
      spotctrl[1].spot_gun[1].alm_do_no = 101   -- Torque Alarm
      spotctrl[1].spot_gun[1].ispot16   = 425   -- Servo Gun Thickness Out of Tolerance
    ELSE
      spotctrl[1].spot_gun[1].do_rqpres = 1030  -- Request Pressure
    ENDIF

    --Process #1 equipment system variable I/O settings  
    Set_I_sVar('$spotweldio[1].$di_minalm_i',spotctrl[1].spot_gun[1].di_minalm)  -- No Alert (Minor Alarm to FRNA) 
    Set_I_sVar('$spotweldio[1].$di_majalm_i',spotctrl[1].spot_gun[1].di_majalm)  -- No Alarm (Major Fault to FRNA) 
    Set_I_sVar('$spotweldio[1].$di_wdenbl_i',spotctrl[1].spot_gun[1].di_wdenbl)  -- Weld enabled/disabled
    Set_I_sVar('$spotweldio[1].$di_wdcomp_i',spotctrl[1].spot_gun[1].di_wdcomp)  -- Process Complete (Weld Complete to FRNA)
    Set_I_sVar('$spotweldio[1].$di_wdinpr_i',spotctrl[1].spot_gun[1].di_wdinpr)  -- In Progress
    Set_I_sVar('$spotweldio[1].$di_rdpres_i',spotctrl[1].spot_gun[1].di_rdpres)  -- Read Pressure 
    Set_I_sVar('$spotweldio[1].$gi_wldprs_i',spotctrl[1].spot_gun[1].gi_wldprs)  -- Pressure 

    Set_I_sVar('$spotweldio[1].$do_wdenbl_i',spotctrl[1].spot_gun[1].do_wdenbl)  -- Weld Mode
    Set_I_sVar('$spotweldio[1].$do_rstwc_i', spotctrl[1].spot_gun[1].do_rstwc)   -- Fault Reset 
    Set_I_sVar('$spotweldio[1].$do_encnts_i',spotctrl[1].spot_gun[1].do_encnts)  -- Enable contactor saver  
    Set_I_sVar('$spotweldio[1].$do_rqpres_i',spotctrl[1].spot_gun[1].do_rqpres)  -- Request Pressure
    Set_I_sVar('$spotweldio[1].$do_wdinit_i',spotctrl[1].spot_gun[1].do_wdinit)  -- Initiate Weld (Read Schedule to FRNA)
    Set_I_sVar('$spotweldio[1].$do_capchg_i',0)                                  -- Cap Change Complete
    Set_I_sVar('$spotweldio[1].$go_sched_i',spotctrl[1].spot_gun[1].go_sched)    -- Weld Schedule 
    Set_I_sVar('$spotweldio[1].$go_weldid_i',0)
    Set_I_sVar('$spotweldio[1].$di_tipreq_i',0)
    IF (g_servog_opt = TRUE) THEN --servo gun option loaded
      Set_I_sVar('$sgdiag1.$setup.$alm_do_no',spotctrl[1].spot_gun[1].alm_do_no) -- Torque Alarm
 
      IF (wld1_app = wld1app_cg) OR (wld1_app = wld1app_cgmh) THEN --carried single servo gun app
        Set_I_sVar('$sggun1.$setup.$tc_almiotyp', 2) --thickness check output type DO --default
        Set_I_sVar('$sggun1.$setup.$tc_almioidx',spotctrl[1].spot_gun[1].ispot16) --Thickness Out of Tolerance DO
      ENDIF --carried single servo gun only 
    ENDIF

    di_cntropn_t[1] = 1
    di_cntropn_i[1] = 1031  -- Contactor Open
    di_ctrlstp_t[1] = 1 
    di_ctrlstp_i[1] = 1032  -- Ctrl Stop NO
    di_apcpch1_t[1] = 1
    di_apcpch1_i[1] = 1033  -- Approaching Cap Change
    di_apcpch2_t[1] = 1 
    di_apcpch2_i[1] = 1034  -- Approaching Cap Change
    di_apcpch3_t[1] = 1
    di_apcpch3_i[1] = 1035  -- Approaching Cap Change
    di_apcpch4_t[1] = 1
    di_apcpch4_i[1] = 1036  -- Approaching Cap Change
    di_steprst_t[1] = 1
    di_steprst_i[1] = 1039  -- All Steppers Reset
    di_steprs2_t[1] = 1
    di_steprs2_i[1] = 1040  -- All Steppers Reset
    di_steprs3_t[1] = 1
    di_steprs3_i[1] = 1041  -- All Steppers Reset
    di_steprs4_t[1] = 1  
    di_steprs4_i[1] = 1042  -- All Steppers Reset
    di_tdreq1_t[1]  = 1
    di_tdreq1_i[1] = 1045   -- Tip dress request
    di_tdreq2_t[1] = 1
    di_tdreq2_i[1] = 1046   -- Tip dress request
    di_tdreq3_t[1] = 1
    di_tdreq3_i[1] = 1047   -- Tip dress request
    di_tdreq4_t[1] = 1
    di_tdreq4_i[1] = 1048   -- Tip dress request
    di_tdrest1_t[1] = 1
    di_tdrest1_i[1] = 0
    di_tdrest2_t[1] = 1
    di_tdrest2_i[1] = 0
    di_tdrest3_t[1] = 1
    di_tdrest3_i[1] = 0
    di_tdrest4_t[1] = 1
    di_tdrest4_i[1] = 0
    di_cchgrq1_t[1] = 1
    di_cchgrq1_i[1] = 1057  -- Cap Change Request
    di_cchgrq2_t[1] = 1
    di_cchgrq2_i[1] = 1058  -- Cap Change Request
    di_cchgrq3_t[1] = 1
    di_cchgrq3_i[1] = 1059  -- Cap Change Request
    di_cchgrq4_t[1] = 1
    di_cchgrq4_i[1] = 1060  -- Cap Change Request
    diQualStp_t[1]  = 1
    diQualStp_i[1]  = 1073
    diAdptRgOn_t[1] = 1
    diAdptRgOn_i[1] = 1074 
    diAdptMtOn_t[1] = 1
    diAdptMtOn_i[1] = 1075
    diEndPrtRp_t[1] = 1
    diEndPrtRp_i[1] = 1076
    diAdaptCap_t[1] = 1
    diAdaptCap_i[1] = 1077

    do_cchgrq1_t[1] = 2
    do_cchgrq1_i[1] = 85  
    do_cchgrq2_t[1] = 2    
    do_cchgrq2_i[1] = 86  
    do_cchgrq3_t[1] = 2    
    do_cchgrq3_i[1] = 87  
    do_cchgrq4_t[1] = 2    
    do_cchgrq4_i[1] = 88     
    doTipDrsG1_t[1] = 2    
    doTipDrsG1_i[1] = 89    -- Tip Dress
    doTipDrsG2_t[1] = 2
    doTipDrsG2_i[1] = 90    -- Tip Dress
    doTipDrsG3_t[1] = 2
    doTipDrsG3_i[1] = 91    -- Tip Dress
    doTipDrsG4_t[1] = 2
    doTipDrsG4_i[1] = 92    -- Tip Dress
    do_tpmanq1_t[1] = 2
    do_tpmanq1_i[1] = 89  
    do_tpmanq2_t[1] = 2   
    do_tpmanq2_i[1] = 90  
    do_tpmanq3_t[1] = 2    
    do_tpmanq3_i[1] = 91  
    do_tpmanq4_t[1] = 2   
    do_tpmanq4_i[1] = 92      
    doReqstPrs_t[1] = 2
    doReqstPrs_i[1] = 1030  -- Request Pressure
    doStpRstG1_t[1] = 2
    doStpRstG1_i[1] = 1061  -- Data 1 (Stepper Reset)
    doStpRstG2_t[1] = 2
    doStpRstG2_i[1] = 1062  -- Data 1 (Stepper Reset)
    doStpRstG3_t[1] = 2
    doStpRstG3_i[1] = 1063  -- Data 1 (Stepper Reset)
    doStpRstG4_t[1] = 2
    doStpRstG4_i[1] = 1064  -- Data 1 (Stepper Reset)   
    doPrtFinsh_t[1] = 2
    doPrtFinsh_i[1] = 1073  -- Data 1 (Adaptive Welding) 
    doGunRstCk_t[1] = 2
    doGunRstCk_i[1] = 1074  -- Data 1 (Adaptive Welding)
    doAdptOff_t[1]  = 2
    doAdptOff_i[1]  = 1075  -- Data 1 (Adaptive Welding) 

    goWldBdyID_t[1] = 19    -- WeldBody ID
    goWldBdyID_i[1] = 43    -- WeldBody ID

  ENDIF --setup process 1

  IF (numwldctrl = 2) THEN --setup process 2
    
    --weld I/O menu variables
    spotctrl[2].spot_gun[1].di_minalm = 1153  -- No Alert (Minor Alarm to FRNA)
    spotctrl[2].spot_gun[1].di_majalm = 1154  -- No Alarm (Major Fault to FRNA)
    spotctrl[2].spot_gun[1].di_wdenbl = 1155  -- Weld enabled/disabled
    spotctrl[2].spot_gun[1].di_wdcomp = 1156  -- Process Complete (Weld Complete to FRNA)
    spotctrl[2].spot_gun[1].di_wdinpr = 1157  -- In Progress
    spotctrl[2].spot_gun[1].di_rdpres = 1195  -- Read Pressure
    spotctrl[2].spot_gun[1].gi_wldprs = 13    -- Pressure

    spotctrl[2].spot_gun[1].do_wdenbl = 1153  -- Weld Mode
    spotctrl[2].spot_gun[1].do_rstwc  = 1154  -- Fault Reset
    spotctrl[2].spot_gun[1].do_encnts = 1155  -- Enable contactor saver
    spotctrl[2].spot_gun[1].do_wdinit = 1159  -- Initiate Weld (Read Schedule to FRNA)
    spotctrl[2].spot_gun[1].go_sched  = 44    -- Weld Schedule

    IF (g_servog_opt = TRUE) THEN --servo gun option loaded
      spotctrl[2].spot_gun[1].do_rqpres = 0     -- Request Pressure 
      spotctrl[2].spot_gun[1].alm_do_no = 165   -- Torque Alarm 
    ELSE
      spotctrl[2].spot_gun[1].do_rqpres = 1158  -- Request Pressure
    ENDIF

    --Process #1 equipment system variable I/O settings  
    Set_I_sVar('$spotweldio[2].$di_minalm_i',spotctrl[2].spot_gun[1].di_minalm)  -- No Alert (Minor Alarm to FRNA) 
    Set_I_sVar('$spotweldio[2].$di_majalm_i',spotctrl[2].spot_gun[1].di_majalm)  -- No Alarm (Major Fault to FRNA) 
    Set_I_sVar('$spotweldio[2].$di_wdenbl_i',spotctrl[2].spot_gun[1].di_wdenbl)  -- Weld enabled/disabled
    Set_I_sVar('$spotweldio[2].$di_wdcomp_i',spotctrl[2].spot_gun[1].di_wdcomp)  -- Process Complete (Weld Complete to FRNA)
    Set_I_sVar('$spotweldio[2].$di_wdinpr_i',spotctrl[2].spot_gun[1].di_wdinpr)  -- In Progress
    Set_I_sVar('$spotweldio[2].$di_rdpres_i',spotctrl[2].spot_gun[1].di_rdpres)  -- Read Pressure 
    Set_I_sVar('$spotweldio[2].$gi_wldprs_i',spotctrl[2].spot_gun[1].gi_wldprs)  -- Pressure 

    Set_I_sVar('$spotweldio[2].$do_wdenbl_i',spotctrl[2].spot_gun[1].do_wdenbl)  -- Weld Mode
    Set_I_sVar('$spotweldio[2].$do_rstwc_i', spotctrl[2].spot_gun[1].do_rstwc)   -- Fault Reset 
    Set_I_sVar('$spotweldio[2].$do_encnts_i',spotctrl[2].spot_gun[1].do_encnts)  -- Enable contactor saver  
    Set_I_sVar('$spotweldio[2].$do_rqpres_i',spotctrl[2].spot_gun[1].do_rqpres)  -- Request Pressure
    Set_I_sVar('$spotweldio[2].$do_wdinit_i',spotctrl[2].spot_gun[1].do_wdinit)  -- Initiate Weld (Read Schedule to FRNA)
    Set_I_sVar('$spotweldio[2].$do_capchg_i',0)                                  -- Cap Change Complete
    Set_I_sVar('$spotweldio[2].$go_sched_i',spotctrl[2].spot_gun[1].go_sched)    -- Weld Schedule 
    Set_I_sVar('$spotweldio[2].$go_weldid_i',0)
    Set_I_sVar('$spotweldio[2].$di_tipreq_i',0)
    IF (g_servog_opt = TRUE) THEN --servo gun option is loaded
      Set_I_sVar('$sgdiag2.$setup.$alm_do_no',spotctrl[2].spot_gun[1].alm_do_no)   -- Torque alarm
    ENDIF

    di_cntropn_t[2] = 1
    di_cntropn_i[2] = 1159  -- Contactor Open
    di_ctrlstp_t[2] = 1 
    di_ctrlstp_i[2] = 1160  -- Ctrl Stop NO
    di_apcpch1_t[2] = 1
    di_apcpch1_i[2] = 1161  -- Approaching Cap Change
    di_apcpch2_t[2] = 1 
    di_apcpch2_i[2] = 1162  -- Approaching Cap Change
    di_apcpch3_t[2] = 1
    di_apcpch3_i[2] = 1163  -- Approaching Cap Change
    di_apcpch4_t[2] = 1
    di_apcpch4_i[2] = 1164  -- Approaching Cap Change
    di_steprst_t[2] = 1
    di_steprst_i[2] = 1167  -- All Steppers Reset
    di_steprs2_t[2] = 1
    di_steprs2_i[2] = 1168  -- All Steppers Reset
    di_steprs3_t[2] = 1
    di_steprs3_i[2] = 1169  -- All Steppers Reset
    di_steprs4_t[2] = 1  
    di_steprs4_i[2] = 1170  -- All Steppers Reset
    di_tdreq1_t[2]  = 1
    di_tdreq1_i[2] = 1173   -- Tip dress request
    di_tdreq2_t[2] = 1
    di_tdreq2_i[2] = 1174   -- Tip dress request
    di_tdreq3_t[2] = 1
    di_tdreq3_i[2] = 1175   -- Tip dress request
    di_tdreq4_t[2] = 1
    di_tdreq4_i[2] = 1176   -- Tip dress request
    di_tdrest1_t[2] = 1
    di_tdrest1_i[2] = 0
    di_tdrest2_t[2] = 1
    di_tdrest2_i[2] = 0
    di_tdrest3_t[2] = 1
    di_tdrest3_i[2] = 0
    di_tdrest4_t[2] = 1
    di_tdrest4_i[2] = 0
    di_cchgrq1_t[2] = 1
    di_cchgrq1_i[2] = 1185  -- Cap Change Request
    di_cchgrq2_t[2] = 1
    di_cchgrq2_i[2] = 1186  -- Cap Change Request
    di_cchgrq3_t[2] = 1
    di_cchgrq3_i[2] = 1187  -- Cap Change Request
    di_cchgrq4_t[2] = 1
    di_cchgrq4_i[2] = 1188  -- Cap Change Request
    diQualStp_t[2]  = 1
    diQualStp_i[2]  = 1201
    diAdptRgOn_t[2] = 1
    diAdptRgOn_i[2] = 1202 
    diAdptMtOn_t[2] = 1
    diAdptMtOn_i[2] = 1203
    diEndPrtRp_t[2] = 1
    diEndPrtRp_i[2] = 1204
    diAdaptCap_t[2] = 1
    diAdaptCap_i[2] = 1205

    do_cchgrq1_t[2] = 2
    do_cchgrq1_i[2] = 149  
    do_cchgrq2_t[2] = 2    
    do_cchgrq2_i[2] = 150  
    do_cchgrq3_t[2] = 2    
    do_cchgrq3_i[2] = 151  
    do_cchgrq4_t[2] = 2    
    do_cchgrq4_i[2] = 152     
    doTipDrsG1_t[2] = 2    
    doTipDrsG1_i[2] = 153    -- Tip Dress
    doTipDrsG2_t[2] = 2
    doTipDrsG2_i[2] = 154    -- Tip Dress
    doTipDrsG3_t[2] = 2
    doTipDrsG3_i[2] = 155    -- Tip Dress
    doTipDrsG4_t[2] = 2
    doTipDrsG4_i[2] = 156    -- Tip Dress
    do_tpmanq1_t[2] = 2
    do_tpmanq1_i[2] = 153  
    do_tpmanq2_t[2] = 2   
    do_tpmanq2_i[2] = 154  
    do_tpmanq3_t[2] = 2    
    do_tpmanq3_i[2] = 155  
    do_tpmanq4_t[2] = 2   
    do_tpmanq4_i[2] = 156      
    doReqstPrs_t[2] = 2
    doReqstPrs_i[2] = 1158  -- Request Pressure
    doStpRstG1_t[2] = 2
    doStpRstG1_i[2] = 1189  -- Data 1 (Stepper Reset)
    doStpRstG2_t[2] = 2
    doStpRstG2_i[2] = 1190  -- Data 1 (Stepper Reset)
    doStpRstG3_t[2] = 2
    doStpRstG3_i[2] = 1191  -- Data 1 (Stepper Reset)
    doStpRstG4_t[2] = 2
    doStpRstG4_i[2] = 1192  -- Data 1 (Stepper Reset)   
    doPrtFinsh_t[2] = 2
    doPrtFinsh_i[2] = 1201  -- Data 1 (Adaptive Welding) 
    doGunRstCk_t[2] = 2
    doGunRstCk_i[2] = 1202  -- Data 1 (Adaptive Welding)
    doAdptOff_t[2]  = 2
    doAdptOff_i[2]  = 1203  -- Data 1 (Adaptive Welding) 

    goWldBdyID_t[2] = 19    -- WeldBody ID
    goWldBdyID_i[2] = 46    -- WeldBody ID

  ENDIF --process 2
    
  IF (g_servog_opt = TRUE) THEN --servo gun option loaded

    di_gunopnflt = -33  --Gun Open on Fault
    do_gunopnflt = 33   --Gun Open on Fault

    sp_eqnum = 1       --initialize equipment setup for wizard to equipment 1
    sp_gnnum = 1       --initialize gun setup for wizard questions to gun 1	
    sp_eqgn_num = spttl_eq1gn  --initialize guns per equipment tracker

    FOR sp_eqnum = 1 TO sp_ttl_eq DO
      FOR sp_gnnum = 1 TO sp_eqgn_num DO
        eq_num = int_to_strg(sp_eqnum)
        gun_num = int_to_strg(sp_gnnum)

        Set_I_sVar('$spoteqio[' + eq_num + '].$di_pen_t', 1)
        Set_I_sVar('$spoteqio[' + eq_num + '].$di_pen_i', di_gunopnflt)
        Set_I_sVar('$spoteqio[' + eq_num + '].$di_nse_t', 1)
        Set_I_sVar('$spoteqio[' + eq_num + '].$di_nse_i', di_gunopnflt)
        Set_I_sVar('$spoteqio[' + eq_num + '].$do_penwt_t', 2)
        Set_I_sVar('$spoteqio[' + eq_num + '].$do_penwt_i', do_gunopnflt)
        Set_I_sVar('$spoteqio[' + eq_num + '].$do_nse_t', 2)
        Set_I_sVar('$spoteqio[' + eq_num + '].$do_nse_i', do_gunopnflt)

      ENDFOR

      IF (spttl_eq2gn = 2) THEN --reinitialize variables for equipment 2 gun setup
        sp_eqgn_num = sp_ttl_gn
      ENDIF
    ENDFOR

    SELECT numwldctrl OF
      CASE(1):
        spotctrl[1].spot_gun[1].do_tipchgreq = 96 -- Process 1 Servo Gun 1 Tip Change Request
        spotctrl[1].spot_gun[2].do_tipchgreq = 97 -- Process 1 Servo Gun 2 Tip Change Request
        spotctrl[1].spot_gun[3].do_tipchgreq = 98 -- Process 1 Servo Gun 3 Tip Change Request
        spotctrl[1].spot_gun[4].do_tipchgreq = 99 -- Process 1 Servo Gun 4 Tip Change Request

        Set_I_sVar('$SGGUN1.$SETUP.$TIPINFIOIDX', spotctrl[1].spot_gun[1].do_tipchgreq) --Servo Gun 1 Tip Change Request 
        Set_I_sVar('$SGGUN1.$SETUP.$RBTINFIOIDX', spotctrl[1].spot_gun[1].do_tipchgreq) --Servo Gun 1 Tip Change Request 
        IF (sp_ttl_gn = 2) THEN --two guns on process 1
          Set_I_sVar('$SGGUN2.$SETUP.$TIPINFIOIDX', spotctrl[1].spot_gun[2].do_tipchgreq) --Servo Gun 2 Tip Change Request 
          Set_I_sVar('$SGGUN2.$SETUP.$RBTINFIOIDX', spotctrl[1].spot_gun[2].do_tipchgreq) --Servo Gun 2 Tip Change Request 
        ENDIF --two guns on process 1  
      CASE(2):
        spotctrl[1].spot_gun[1].do_tipchgreq = 96 -- Process 1 Servo Gun 1 Tip Change Request
        spotctrl[1].spot_gun[2].do_tipchgreq = 97 -- Process 1 Servo Gun 2 Tip Change Request
        spotctrl[1].spot_gun[3].do_tipchgreq = 98 -- Process 1 Servo Gun 3 Tip Change Request
        spotctrl[1].spot_gun[4].do_tipchgreq = 99 -- Process 1 Servo Gun 4 Tip Change Request
        spotctrl[2].spot_gun[1].do_tipchgreq = 160 -- Process 2 Servo Gun 1 Tip Change Request
        spotctrl[2].spot_gun[2].do_tipchgreq = 161 -- Process 2 Servo Gun 2 Tip Change Request

        Set_I_sVar('$SGGUN1.$SETUP.$TIPINFIOIDX', spotctrl[1].spot_gun[1].do_tipchgreq) --Servo Gun 1 Tip Change Request 
        Set_I_sVar('$SGGUN1.$SETUP.$RBTINFIOIDX', spotctrl[1].spot_gun[1].do_tipchgreq) --Servo Gun 1 Tip Change Request  
        Set_I_sVar('$SGGUN2.$SETUP.$TIPINFIOIDX', spotctrl[2].spot_gun[1].do_tipchgreq) --Servo Gun 2 Tip Change Request 
        Set_I_sVar('$SGGUN2.$SETUP.$RBTINFIOIDX', spotctrl[2].spot_gun[1].do_tipchgreq) --Servo Gun 2 Tip Change Request 
      ELSE:
    ENDSELECT --number of weld controlers   
  ENDIF --servo gun option loaded

END setspotiovr

-----------------------------------------------------------------------------
ROUTINE wtrprc1_io
-- PURPOSE: set process 1 water saver IO
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  initSpot_IO

  IF (numwldctrl <> 0) THEN --process 1 is a spot welder

    IF (wldapp[1].wld_wtreip = wizans_yes) THEN --setup water saver
     
      --Add in the future
      --IF SpotSetup[1] = TRUE THEN -- Spot I/O has already been setup
        --WRITE TPERROR(CHR(cc_clear_win),'Spot #1 Already Setup')
        --IF NOT ExecSetupAgn('Spot#1') THEN -- ask user if they want to setup again
        --RETURN
        --ENDIF
      --ENDIF

      -- Controller#1 INPUTS set the rack lenght so TP display is all inclusive of the 64 bits
      SET_PORT_ASG(io_din,1441,spotcommtype, wtr_1_slot,io_din,1,  -8, gm_status)
        IF (gm_status<>0) AND (gm_Status <> 13149) THEN --PRIO-149 Invalid Assignment Recorded
          POST_ERR(38000, 'Rack '+int2Str(spotcommtype)+' Slot ' +Int2str(wtr_1_slot)+' Setup FAILED', gm_status, 0) --
          RETURN  -- Return, cant set this  leave so user will know not correct, probably wont work anyway
        ENDIF
      -- Controller#1 OUTPUTS set the rack lenght so TP display is all inclusive of the 64 bits
      SET_PORT_ASG(io_dout,1441,spotcommtype, wtr_1_slot,io_dout,1,  -8, gm_status)
      IF (gm_status<>0) AND (gm_Status <> 13149) THEN --PRIO-149 Invalid Assignment Recorded
        POST_ERR(38000, 'Rack '+int2Str(spotcommtype)+' Slot ' +Int2str(wtr_1_slot)+' Setup FAILED', gm_status, 0) --
        RETURN  -- Return, cant set this  leave so user will know not correct, probably wont work anyway
      ENDIF

      --water saver process 1 inputs
      SET_PORT_CMT(IO_DIN,1441,'diG1WS_OktoWeld',gm_status)
      SET_PORT_CMT(IO_DIN,1442,'diG1WS_ValveClsd',gm_status)
      SET_PORT_CMT(IO_DIN,1443,'diG1WS_Bypassed',gm_status)
      SET_PORT_CMT(IO_DIN,1444,'diG1WS_MinFlow',gm_status)
      SET_PORT_CMT(IO_DIN,1445,'diG1WS_CapLoss',gm_status)
      SET_PORT_CMT(IO_DIN,1446,'(Reserved)',gm_status)
      SET_PORT_CMT(IO_DIN,1447,'(Reserved)',gm_status)
      SET_PORT_CMT(IO_DIN,1448,'diG1WS_PowerOk',gm_status)

      --water saver process 1 outputs
      SET_PORT_CMT(IO_DOUT,1441,'doRstG1WaterSvr', gm_status)
      SET_PORT_CMT(IO_DOUT,1442,'doG1Wateroff', gm_status)
      SET_PORT_CMT(IO_DOUT,1443,'doG1WSBypass', gm_status)
      SET_PORT_CMT(IO_DOUT,1444,'(Reserved)', gm_status)
      SET_PORT_CMT(IO_DOUT,1445,'(Reserved)', gm_status)
      SET_PORT_CMT(IO_DOUT,1446,'(Reserved)', gm_status)   
      SET_PORT_CMT(IO_DOUT,1447,'(Reserved)', gm_status)
      SET_PORT_CMT(IO_DOUT,1448,'(Reserved)', gm_status)

      IF (spotcommtype = Ethernet) THEN
        PROWTRSV_EIP(wtr_1_slot,'WTR1')
      ENDIF

      di_wfok1 = 1441  -- Water saver Valve Closed
      do_wsr1 = 1441   -- Reset Water Saver

      di_valvec_i[1,1]  = 1442 -- Water saver Valve Closed
      di_bypass_i[1,1]  = 1443 -- Water Saver Bypassed
      di_minfl_i[1,1]   = 1444 -- Minimal Flow OK 
      di_capls_i[1,1]   = 1445 -- Cap Loss Detection
      di_wspwr_i[1,1]   = 1448 
      Set_I_sVar('$spoteqio[1].$di_wfok_i[1]', di_wfok1)  -- Water saver Valve Closed
      do_watero_i[1,1]   = 1442
      do_bypass_i[1,1]   = 1443
      Set_I_sVar('$spoteqio[1].$do_wsr_i[1]',do_wsr1) -- Reset Water SAver

      IF (numwldctrl = 1) THEN --only one process

        SELECT wld1_app OF 

          CASE (wld1app_spdg):          
            di_valvec_i[1,2]  = 1442 -- Water saver Valve Closed
            di_bypass_i[1,2]  = 1443 -- Water Saver Bypassed
            di_minfl_i[1,2]   = 1444 -- Minimal Flow OK 
            di_capls_i[1,2]   = 1445 -- Cap Loss Detection
            di_wspwr_i[1,2]   = 1448 
            Set_I_sVar('$spoteqio[1].$di_wfok_i[2]', di_wfok1)  -- Water saver Valve Closed
            do_watero_i[1,2]   = 1442
            do_bypass_i[1,2]   = 1443
            Set_I_sVar('$spoteqio[1].$do_wsr_i[2]',do_wsr1) -- Reset Water SAver

          CASE(wld1app_dpsg):
            di_valvec_i[2,1]  = 1442 -- Water saver Valve Closed
            di_bypass_i[2,1]  = 1443 -- Water Saver Bypassed
            di_minfl_i[2,1]   = 1444 -- Minimal Flow OK 
            di_capls_i[2,1]   = 1445 -- Cap Loss Detection
            di_wspwr_i[2,1]   = 1448 
            Set_I_sVar('$spoteqio[2].$di_wfok_i[1]', di_wfok1)  -- Water saver Valve Closed
            do_watero_i[2,1]   = 1442
            do_bypass_i[2,1]   = 1443
            Set_I_sVar('$spoteqio[2].$do_wsr_i[1]',do_wsr1) -- Reset Water SAver

          ELSE:
        ENDSELECT
      ENDIF --only one process
 
    ENDIF --setup water saver

  ENDIF --process 1 is a spot welder

END wtrprc1_io
-----------------------------------------------------------------------------
ROUTINE wtrprc2_io
-- PURPOSE: set process 2 water saver IO
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  initSpot_IO

  IF (numwldctrl = 2) THEN --two water savers

    IF (wldapp[2].wld_wtreip = wizans_yes) THEN --setup water saver

      --Add in the future
      --IF SpotSetup[1] = TRUE THEN -- Spot I/O has already been setup
        --WRITE TPERROR(CHR(cc_clear_win),'Spot #1 Already Setup')
        --IF NOT ExecSetupAgn('Spot#1') THEN -- ask user if they want to setup again
        --RETURN
        --ENDIF
      --ENDIF

      -- Controller#1 INPUTS set the rack lenght so TP display is all inclusive of the 64 bits
      SET_PORT_ASG(io_din,1449,spotcommtype, wtr_2_slot,io_din,1,  -8, gm_status)
        IF (gm_status<>0) AND (gm_Status <> 13149) THEN --PRIO-149 Invalid Assignment Recorded
          POST_ERR(38000, 'Rack '+int2Str(spotcommtype)+' Slot ' +Int2str(wtr_2_slot)+' Setup FAILED', gm_status, 0) --
          RETURN  -- Return, cant set this  leave so user will know not correct, probably wont work anyway
        ENDIF
      -- Controller#1 OUTPUTS set the rack lenght so TP display is all inclusive of the 64 bits
      SET_PORT_ASG(io_dout,1449,spotcommtype, wtr_2_slot,io_dout,1,  -8, gm_status)
      IF (gm_status<>0) AND (gm_Status <> 13149) THEN --PRIO-149 Invalid Assignment Recorded
        POST_ERR(38000, 'Rack '+int2Str(spotcommtype)+' Slot ' +Int2str(wtr_2_slot)+' Setup FAILED', gm_status, 0) --
        RETURN  -- Return, cant set this  leave so user will know not correct, probably wont work anyway
      ENDIF

      --water saver process 1 inputs
      SET_PORT_CMT(IO_DIN,1449,'diG2WS_OktoWeld',gm_status)
      SET_PORT_CMT(IO_DIN,1450,'diG2WS_ValveClsd',gm_status)
      SET_PORT_CMT(IO_DIN,1451,'diG2WS_Bypassed',gm_status)
      SET_PORT_CMT(IO_DIN,1452,'diG2WS_MinFlow',gm_status)
      SET_PORT_CMT(IO_DIN,1453,'diG2WS_CapLoss',gm_status)
      SET_PORT_CMT(IO_DIN,1454,'(Reserved)',gm_status)
      SET_PORT_CMT(IO_DIN,1455,'(Reserved)',gm_status)
      SET_PORT_CMT(IO_DIN,1456,'diG2WS_PowerOk',gm_status)

      --water saver process 1 outputs
      SET_PORT_CMT(IO_DOUT,1449,'doRstG2WaterSvr', gm_status)
      SET_PORT_CMT(IO_DOUT,1450,'doG2Wateroff', gm_status)
      SET_PORT_CMT(IO_DOUT,1451,'doG2WSBypass', gm_status)
      SET_PORT_CMT(IO_DOUT,1452,'(Reserved)', gm_status)
      SET_PORT_CMT(IO_DOUT,1453,'(Reserved)', gm_status)
      SET_PORT_CMT(IO_DOUT,1454,'(Reserved)', gm_status)   
      SET_PORT_CMT(IO_DOUT,1455,'(Reserved)', gm_status)
      SET_PORT_CMT(IO_DOUT,1456,'(Reserved)', gm_status)

      IF (spotcommtype = Ethernet) THEN
        PROWTRSV_EIP(wtr_2_slot,'WTR2')
      ENDIF

      di_wfok2 = 1449  -- Water saver Valve Closed
      do_wsr2 = 1449   -- Reset Water Saver

      SELECT wld2_app OF

        CASE(wld2app_spdg):
          di_valvec_i[1,2]  = 1450 -- Water saver Valve Closed
          di_bypass_i[1,2]  = 1451 -- Water Saver Bypassed
          di_minfl_i[1,2]   = 1452 -- Minimal Flow OK 
          di_capls_i[1,2]   = 1453 -- Cap Loss Detection
          di_wspwr_i[1,2]   = 1456
          Set_I_sVar('$spoteqio[1].$di_wfok_i[2]', di_wfok2)  -- Water saver Valve Closed
          do_watero_i[1,2]   = 1450
          do_bypass_i[1,2]   = 1451
          Set_I_sVar('$spoteqio[1].$do_wsr_i[2]',do_wsr2) -- Reset Water SAver

       CASE(wld2app_dpsg, wld2app_cgpg): 
         di_valvec_i[2,1]  = 1450 -- Water saver Valve Closed
         di_bypass_i[2,1]  = 1451 -- Water Saver Bypassed
         di_minfl_i[2,1]   = 1452 -- Minimal Flow OK 
         di_capls_i[2,1]   = 1453 -- Cap Loss Detection
         di_wspwr_i[2,1]   = 1456
         Set_I_sVar('$spoteqio[2].$di_wfok_i[1]', di_wfok2)  -- Water saver Valve Closed
         do_watero_i[2,1]   = 1450
         do_bypass_i[2,1]   = 1451
         Set_I_sVar('$spoteqio[2].$do_wsr_i[1]',do_wsr2) -- Reset Water SAver 

       ELSE:
     ENDSELECT

    ENDIF --setup water saver

  ENDIF --two water savers

END wtrprc2_io

-----------------------------------------------------------------------------
ROUTINE set_spot_io
-- PURPOSE: set spot I/O
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------

BEGIN

IF (numwldctrl <> 0) THEN --application has spot
 
  Current_Ver = Version -- Set the version for reference

  IF UNINIT(ErrsInShop.ErrorsIOCom) THEN
    ErrsInShop.ErrorsIOCom = 0
  ENDIF
  IF UNINIT(SpotIO_Setup) OR (Reset_Cell) THEN
    SpotIO_Setup = FALSE
  ENDIF

  StrtinErs = ErrsInShop.ErrorsIOCom -- grab current error count
  ClrUtltyErrs -- Clear all error in utility program to be used when done

  WriteLog('  Starting the Spot I/O Program GMSPOTIO', FALSE)

  IF (SpotIO_Setup = TRUE) THEN -- setup has already been setup
    WriteLog('  Spot I/O Already Setup', FALSE)
    IF ExecSetupAgn('Spot I/O') THEN -- ask user if they want to setup again
      SpotIO_Setup = FALSE
    ELSE
      WriteLog('  Spot I/O already Complete', FALSE)
      WriteLog('  GMSPOTIO Setup NOT executing again', FALSE)
      RETURN
    ENDIF
  ENDIF

  --setup routines 
  initSpot_IO
  spotprc1_io
  spotprc2_io
  setspotiovr
  wtrprc1_io
  wtrprc2_io


  ErrsInShop.ErrorsIOCom =  ErrsInShop.ErrorsIOCom + (AddUtltyErrs) -- Get all errors in utility program to be added to any program errors
  IF (ErrsInShop.ErrorsIOCom -StrtinErs) > 0 THEN -- check for I/O setup errors
    WriteLog('  Spot I/O setup Program GMSPOTIO had ' + int2str((ErrsInShop.ErrorsIOCom- StrtinErs))+' while executing', TRUE)
  ELSE
    WriteLog('  Spot I/O setup Program completed', FALSE)
    SpotIO_Setup = TRUE
  ENDIF

  WriteLog('', FALSE)

ENDIF --numwldctrl

END set_spot_io
-----------------------------------------------------------------------------
BEGIN

END gmspotio
