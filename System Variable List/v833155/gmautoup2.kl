-- -----------------------------------------------------------------------
--
--   MODULE:         GMAUTOUP2.KL
--   TITLE:          GMAUTOUP2 PROGRAM
--
--
--   WRITTEN BY:     FANUC
--   REVISION DATE:  2019/08/24
--
--   LANGUAGE:       KAREL 8.33 R30iB
--   CONTROL GROUP:  BODY SHOP EXECUTION GROUP
--   STATUS:
--
--
--   ORDER NUMBER:   GMGBL4
--   PROJECT NAME:   GM Global Center
--
--
--         FANUC Robotics retains rights in any and all Software
--         contained in the material attached hereto and said
--         Software may not be copied or reproduced without the
--         written permission of FANUC Robotics.
--
--         All Software, (C) Copyright FANUC Robotics Corporation, 2016

--         DESCRIPTION: Autoupdate Karel file to hanlde all updates.  This program
--                      will execute during controlled start after the backup
--                      restore.  This program is a supplement to gmautoup.kl. It executes 
--                      routines called from that program.
--
--         HISTORY OF CHANGES:
--
--         REVISION   DATE       BY               COMMENTS
--         --------   ---------  ---------------  --------------------
--              V4.0  2019/08/24 marchaka         Initial release
--              V4.1  2020/02/20 schoensm         moved upd_reg here to make size for other changes.
--              V4.2  2020/05/13 schoensm         moved R[444] comment from gmautocd
--              V4.3  2020/10/12 schoensm         moved brk_updt, ftp_updt, and comm_var from GMAUTOUP due to size.
--						  Changed servo off time to 60 seconds. Added brake check option check to load brakechk.tp.
--------------------------------------------------------------------------
PROGRAM GMAUTOUP2

%COMMENT = 'GM AutoUpdt2 V4.3'

%NOLOCKGROUP
%INVISIBLE
%RWACCESS
%NOPAUSE = ERROR + COMMAND + TPENABLE

CONST

Version = '2020-10-12'
%INCLUDE gmcnstnt -- all GM constants for the wizard

VAR

gm_status,
l_stat,   
i, l_psve  	: INTEGER
a		: STRING[4]
int_val	        : INTEGER 	   --integer value return for get_attr
str_val	        : STRING[12] 	   --string value return for get_attr
Prog_nam        : STRING[16]
pwr_area  FROM GMAUTOUP : BOOLEAN  --powertrain shop
body_area FROM GMAUTOUP : BOOLEAN  --bodyshop

%INCLUDE klrdutil
%INCLUDE GMRDUTIL -- Utility Routine for Setting Variables

-----------------------------------------------------------------------------
ROUTINE colbrbt_updt
-- PURPOSE: Update collaborative robot settings
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  Set_B_sVar('$SCR_GRP[1].$M_POS_ENB', TRUE)
  Set_B_sVar('$SCR_GRP[1].$M_DST_ENB', TRUE)

  --Joint 1 Position
  Set_S_sVar('$DMONITEM[1].$PRG_NAME', '*SYSTEM*')
  Set_S_sVar('$DMONITEM[1].$VAR_NAME', '$SCR_GRP[1].$MCH_ANG[1]')
  Set_S_sVar('$DMONITEM[1].$DESC', 'J1 Position')
  Set_S_sVar('$DMONITEM[1].$UNITS', 'deg')
  Set_I_sVar('$DMONITEM[1].$TYPE', 17)

  --Machine Position X
  Set_S_sVar('$DMONITEM[2].$PRG_NAME', '*SYSTEM*')
  Set_S_sVar('$DMONITEM[2].$VAR_NAME', '$SCR_GRP[1].$MCH_POS_X')
  Set_S_sVar('$DMONITEM[2].$DESC', 'Mch_Pos_X')
  Set_S_sVar('$DMONITEM[2].$UNITS', 'mm')
  Set_I_sVar('$DMONITEM[2].$TYPE', 17)

  --Machine Position Y
  Set_S_sVar('$DMONITEM[3].$PRG_NAME', '*SYSTEM*')
  Set_S_sVar('$DMONITEM[3].$VAR_NAME', '$SCR_GRP[1].$MCH_POS_Y')
  Set_S_sVar('$DMONITEM[3].$DESC', 'Mch_Pos_Y')
  Set_S_sVar('$DMONITEM[3].$UNITS', 'mm')
  Set_I_sVar('$DMONITEM[3].$TYPE', 17)

  --Machine Position Z
  Set_S_sVar('$DMONITEM[4].$PRG_NAME', '*SYSTEM*')
  Set_S_sVar('$DMONITEM[4].$VAR_NAME', '$SCR_GRP[1].$MCH_POS_Z')
  Set_S_sVar('$DMONITEM[4].$DESC', 'Mch_Pos_Z')
  Set_S_sVar('$DMONITEM[4].$UNITS', 'mm')
  Set_I_sVar('$DMONITEM[4].$TYPE', 17)

  --External Force Monitor: Resultant (%)
  Set_S_sVar('$DMONITEM[5].$PRG_NAME', '*SYSTEM*')
  Set_S_sVar('$DMONITEM[5].$VAR_NAME', '$CR_VAR[1].$FS_MON[4]')
  Set_S_sVar('$DMONITEM[5].$DESC', 'Ext_Force_R')
  Set_S_sVar('$DMONITEM[5].$UNITS', '%')
  Set_I_sVar('$DMONITEM[5].$TYPE', 16)

  --External Force Monitor: X-axis (%)
  Set_S_sVar('$DMONITEM[6].$PRG_NAME', '*SYSTEM*')
  Set_S_sVar('$DMONITEM[6].$VAR_NAME', '$CR_VAR[1].$FS_MON[1]')
  Set_S_sVar('$DMONITEM[6].$DESC', 'Ext_Force_X')
  Set_S_sVar('$DMONITEM[6].$UNITS', '%')
  Set_I_sVar('$DMONITEM[6].$TYPE', 16)

  --External Force Monitor: Y-axis (%)
  Set_S_sVar('$DMONITEM[7].$PRG_NAME', '*SYSTEM*')
  Set_S_sVar('$DMONITEM[7].$VAR_NAME', '$CR_VAR[1].$FS_MON[2]')
  Set_S_sVar('$DMONITEM[7].$DESC', 'Ext_Force_Y')
  Set_S_sVar('$DMONITEM[7].$UNITS', '%')
  Set_I_sVar('$DMONITEM[7].$TYPE', 16)

  --External Force Monitor: Z-axis (%)
  Set_S_sVar('$DMONITEM[8].$PRG_NAME', '*SYSTEM*')
  Set_S_sVar('$DMONITEM[8].$VAR_NAME', '$CR_VAR[1].$FS_MON[3]')
  Set_S_sVar('$DMONITEM[8].$DESC', 'Ext_Force_Z')
  Set_S_sVar('$DMONITEM[8].$UNITS', '%')
  Set_I_sVar('$DMONITEM[8].$TYPE', 16)

  --Payload (Force) Monitor: Resultant (%)
  Set_S_sVar('$DMONITEM[9].$PRG_NAME', '*SYSTEM*')
  Set_S_sVar('$DMONITEM[9].$VAR_NAME', '$CR_VAR[1].$PLF_MON[4]')
  Set_S_sVar('$DMONITEM[9].$DESC', 'PLD_Force_R')
  Set_S_sVar('$DMONITEM[9].$UNITS', '%')
  Set_I_sVar('$DMONITEM[9].$TYPE', 16)

  --Payload (Force) Monitor: X-axis (%)')
  Set_S_sVar('$DMONITEM[10].$PRG_NAME', '*SYSTEM*')
  Set_S_sVar('$DMONITEM[10].$VAR_NAME', '$CR_VAR[1].$PLF_MON[1]')
  Set_S_sVar('$DMONITEM[10].$DESC', 'PLD_Force_X')
  Set_S_sVar('$DMONITEM[10].$UNITS', '%')
  Set_I_sVar('$DMONITEM[10].$TYPE', 16)

  --Payload (Force) Monitor: Y-axis (%)
  Set_S_sVar('$DMONITEM[11].$PRG_NAME', '*SYSTEM*')
  Set_S_sVar('$DMONITEM[11].$VAR_NAME', '$CR_VAR[1].$PLF_MON[2]')
  Set_S_sVar('$DMONITEM[11].$DESC', 'PLD_Force_Y')
  Set_S_sVar('$DMONITEM[11].$UNITS', '%')
  Set_I_sVar('$DMONITEM[11].$TYPE', 16)

  --Payload (Force) Monitor: Z-axis (%)
  Set_S_sVar('$DMONITEM[12].$PRG_NAME', '*SYSTEM*')
  Set_S_sVar('$DMONITEM[12].$VAR_NAME', '$CR_VAR[1].$PLF_MON[3]')
  Set_S_sVar('$DMONITEM[12].$DESC', 'PLD_Force_Z')
  Set_S_sVar('$DMONITEM[12].$UNITS', '%')
  Set_I_sVar('$DMONITEM[12].$TYPE', 16)

  --Payload (Moment) Monitor: Resultant (%)
  Set_S_sVar('$DMONITEM[13].$PRG_NAME', '*SYSTEM*')
  Set_S_sVar('$DMONITEM[13].$VAR_NAME', '$CR_VAR[1].$PLM_MON[4]')
  Set_S_sVar('$DMONITEM[13].$DESC', 'PLD_Moment_R')
  Set_S_sVar('$DMONITEM[13].$UNITS', '%')
  Set_I_sVar('$DMONITEM[13].$TYPE', 16)

  --Payload (Moment) Monitor: X-axis (%)
  Set_S_sVar('$DMONITEM[14].$PRG_NAME', '*SYSTEM*')
  Set_S_sVar('$DMONITEM[14].$VAR_NAME', '$CR_VAR[1].$PLM_MON[1]')
  Set_S_sVar('$DMONITEM[14].$DESC', 'PLD_Moment_X')
  Set_S_sVar('$DMONITEM[14].$UNITS', '%')
  Set_I_sVar('$DMONITEM[14].$TYPE', 16)

  --Payload (Moment) Monitor: Y-axis (%)
  Set_S_sVar('$DMONITEM[15].$PRG_NAME', '*SYSTEM*')
  Set_S_sVar('$DMONITEM[15].$VAR_NAME', '$CR_VAR[1].$PLM_MON[2]')
  Set_S_sVar('$DMONITEM[15].$DESC', 'PLD_Moment_Y')
  Set_S_sVar('$DMONITEM[15].$UNITS', '%')
  Set_I_sVar('$DMONITEM[15].$TYPE', 16)

  --Payload (Moment) Monitor: Z-axis (%)
  Set_S_sVar('$DMONITEM[16].$PRG_NAME', '*SYSTEM*')
  Set_S_sVar('$DMONITEM[16].$VAR_NAME', '$CR_VAR[1].$PLM_MON[3]')
  Set_S_sVar('$DMONITEM[16].$DESC', 'PLD_Moment_Z')
  Set_S_sVar('$DMONITEM[16].$UNITS', '%')
  Set_I_sVar('$DMONITEM[16].$TYPE', 16)

  --Contact Stop State
  Set_S_sVar('$DMONITEM[17].$PRG_NAME', '*SYSTEM*')
  Set_S_sVar('$DMONITEM[17].$VAR_NAME', '$CR_VAR[1].$STATE')
  Set_S_sVar('$DMONITEM[17].$DESC', 'Contact Stop State')
  Set_S_sVar('$DMONITEM[17].$UNITS', '')
  Set_I_sVar('$DMONITEM[17].$TYPE', 16)

  --Auto Status Check - Time Reset (sec)
  Set_S_sVar('$DMONITEM[18].$PRG_NAME', '*SYSTEM*')
  Set_S_sVar('$DMONITEM[18].$VAR_NAME', '$CR_VAR[1].$TIME_CHK')
  Set_S_sVar('$DMONITEM[18].$DESC', 'ASC Time Check')
  Set_S_sVar('$DMONITEM[18].$UNITS', 's')
  Set_I_sVar('$DMONITEM[18].$TYPE', 16)

  --Auto Status Check - Flex Time Reset Limit (sec)
  Set_S_sVar('$DMONITEM[19].$PRG_NAME', '*SYSTEM*')
  Set_S_sVar('$DMONITEM[19].$VAR_NAME', '$CR_VAR[1].$TIM_LIM')
  Set_S_sVar('$DMONITEM[19].$DESC', 'ASC Time Limit')
  Set_S_sVar('$DMONITEM[19].$UNITS', 's')
  Set_I_sVar('$DMONITEM[19].$TYPE', 16)

  --TCP Speed (mm/sec)
  Set_S_sVar('$DMONITEM[20].$PRG_NAME', '*SYSTEM*')
  Set_S_sVar('$DMONITEM[20].$VAR_NAME', '$SCR_GRP[1].$MCH_SPD')
  Set_S_sVar('$DMONITEM[20].$DESC', 'TCP_Speed_RAW')
  Set_S_sVar('$DMONITEM[20].$UNITS', 'mm/sec')
  Set_I_sVar('$DMONITEM[20].$TYPE', 17)

  --TCP Speed (%)
  Set_S_sVar('$DMONITEM[21].$PRG_NAME', '*SYSTEM*')
  Set_S_sVar('$DMONITEM[21].$VAR_NAME', '$CR_VAR[1].$TCP_SPD')
  Set_S_sVar('$DMONITEM[21].$DESC', 'TCP_Speed_PCNT')
  Set_S_sVar('$DMONITEM[21].$UNITS', '%')
  Set_I_sVar('$DMONITEM[21].$TYPE', 16)

  --Speed Override (%)
  Set_S_sVar('$DMONITEM[22].$PRG_NAME', '*SYSTEM*')
  Set_S_sVar('$DMONITEM[22].$VAR_NAME', '$MOR.$OVERRIDE')
  Set_S_sVar('$DMONITEM[22].$DESC', 'Speed Override')
  Set_S_sVar('$DMONITEM[22].$UNITS', '%')
  Set_I_sVar('$DMONITEM[22].$TYPE', 16)

  --Elbow Speed (%)
  Set_S_sVar('$DMONITEM[23].$PRG_NAME', '*SYSTEM*')
  Set_S_sVar('$DMONITEM[23].$VAR_NAME', '$CR_VAR[1].$ELB_SPD')
  Set_S_sVar('$DMONITEM[23].$DESC', 'Elbow Speed')
  Set_S_sVar('$DMONITEM[23].$UNITS', '%')
  Set_I_sVar('$DMONITEM[23].$TYPE', 16)

  --Conveyor Speed (mm/sec)
  Set_S_sVar('$DMONITEM[24].$PRG_NAME', '*SYSTEM*')
  Set_S_sVar('$DMONITEM[24].$VAR_NAME', '$LNSCHCNVSPD[1]')
  Set_S_sVar('$DMONITEM[24].$DESC', 'Conveyor Speed')
  Set_S_sVar('$DMONITEM[24].$UNITS', 'mm/sec')
  Set_I_sVar('$DMONITEM[24].$TYPE', 17)

END colbrbt_updt
-----------------------------------------------------------------------------
ROUTINE upd_reg
-- PURPOSE: Update registers, not executed for press shop
--          press shop does not do common register setup
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
----------------------------------------------------------------------------
BEGIN

  Comment_Reg(1, 146, 'AREASTRT Wait1')
  Comment_Reg(1, 147,  'AREASTRT Wait2')
  --V8.33P09 SMS 2-14-2020
  Comment_Reg(1,399,'Brake Jx Fail')
  SET_INT_REG(399,0,gm_status)
  Comment_Reg(1,460,  'CAPSEAT RTRY CNT')
  Comment_Reg(1,461,  'CAPPULL RTRY CNT')
  --String Register comments for $FSAC
  FOR l_stat = 50 to 54 DO
    Comment_Reg(3,l_stat,'RSVD-HMI IPs')-- (String Register for $FSAC)
  ENDFOR

  IF (pwr_area = FALSE) THEN --bodyshop, paint and arc
    Comment_Reg(1,294, 'Cap DCD2 Code')
    Comment_Reg(1,295, 'Cap DCD3 Code')
  ENDIF

  IF (body_area = TRUE) THEN --bodyshop only
    --data registers
    Comment_Reg(1,44, 'Cap Changer Type')
    Comment_Reg(1,103, 'Rack1 Retrys') 
    Comment_Reg(1,104, 'Rack2 Retrys') 
    Comment_Reg(1,105,'BOLTPR')
    Comment_Reg(1,106,'SlowZ')
    Comment_Reg(1,107,'AtlsCpcTime')
    Comment_Reg(1,108,'Z_Offset')
    Comment_Reg(1,163, 'Image Found') 
    Comment_Reg(1,164, 'Tolerance Type') 
    Comment_Reg(1,387,'Alarm Word 3')
    SET_INT_REG(387,0,gm_status)
    Comment_Reg(1,388,'Alarm Word 4')
    SET_INT_REG(388,0,gm_status)
    Comment_Reg(1,389,'Alarm Word 5')
    SET_INT_REG(389,0,gm_status)
    Comment_Reg(1,390,'Alarm Word 6')
    SET_INT_REG(390,0,gm_status)
    Comment_Reg(1,391,'Alarm Word 7')
    SET_INT_REG(391,0,gm_status)
    Comment_Reg(1,392,'Alarm Word 8')
    SET_INT_REG(392,0,gm_status)
    Comment_Reg(1,393,'External Frame')
    SET_INT_REG(393,0,gm_status)
    Comment_Reg(1,394,'TrackerCalMode')
    SET_INT_REG(394,0,gm_status)
    Comment_Reg(1,395,'Shim Direction')
    SET_INT_REG(395,0,gm_status)
    Comment_Reg(1,444,  'SPRFaultActive  ') 
    Comment_Reg(1,448,   'SPR Process 1/2')  --V833P06
    Comment_Reg(1,496,'PHD Rcvr Seg')
    Comment_Reg(1,497,'PHD PPX Di')
    Comment_Reg(1,498,'PHD PPX')
    Comment_Reg(1,499,'PHD Bypass Di')

    --Position registers
    Comment_Reg(2,30, 'TD/DVG Ready Gn1')
    Comment_Reg(2,31, 'TD AimOffset Gn1')
    Comment_Reg(2,32, 'TD Fire Pt. Gn1')
    Comment_Reg(2,33, 'DVG Fire Pt. Gn1')
    Comment_Reg(2,34, 'TD Pounce Gn1')
    Comment_Reg(2,35, 'CC Pounce Gn1')
    Comment_Reg(2,36, 'CC PosRbt Gn1')
    Comment_Reg(2,37, 'CCPosZrotateG1')
    Comment_Reg(2,38, 'CCPosZoffsetG1')
    Comment_Reg(2,39, 'CC PosGun1')
    Comment_Reg(2,40, 'TD/DVG Ready Gn2')
    Comment_Reg(2,41, 'TD AimOffset Gn2')
    Comment_Reg(2,42, 'TD Fire Pt. Gn2')
    Comment_Reg(2,43, 'DVG Fire Pt. Gn2')
    Comment_Reg(2,44, 'TD Pounce Gn2')
    Comment_Reg(2,45, 'CC Pounce Gn2')
    Comment_Reg(2,46, 'CC PosRbt Gn2')
    Comment_Reg(2,47, 'CCPosZrotateG2')
    Comment_Reg(2,48, 'CCPosZoffsetG2')
    Comment_Reg(2,49, 'CC PosGun2')
    Comment_Reg(2,50, 'TD/DVG Ready Gn3')
    Comment_Reg(2,51, 'TD AimOffset Gn3')
    Comment_Reg(2,52, 'TD Fire Pt. Gn3')
    Comment_Reg(2,53, 'DVG Fire Pt. Gn3')
    Comment_Reg(2,54, 'TD Pounce Gn3')
    Comment_Reg(2,55, 'CC Pounce Gn3')
    Comment_Reg(2,56, 'CC PosRbt Gn3')
    Comment_Reg(2,57, 'CCPosZrotateG3')
    Comment_Reg(2,58, 'CCPosZoffsetG3')
    Comment_Reg(2,59, 'CC PosGun3')
    Comment_Reg(2,60, 'TD/DVG Ready Gn4')
    Comment_Reg(2,61, 'TD AimOffset Gn4')
    Comment_Reg(2,62, 'TD Fire Pt. Gn4')
    Comment_Reg(2,63, 'DVG Fire Pt. Gn4')
    Comment_Reg(2,64, 'TD Pounce Gn4')
    Comment_Reg(2,65, 'CC Pounce Gn4')
    Comment_Reg(2,66, 'CC PosRbt Gn4')
    Comment_Reg(2,67, 'CCPosZrotateG4')
    Comment_Reg(2,68, 'CCPosZoffsetG4')
    Comment_Reg(2,69, 'CC PosGun4')
  ENDIF  --bodyshop

END upd_reg
-----------------------------------------------------------------------------
ROUTINE brk_updt
-- PURPOSE: Update Break Check Settings
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  --V8.33P08 schoensm 9-19-19
  --This is used to execute a CM file.
  SPRUNCMD('@FRS:\brk_chk.cm', gm_status)  --this should execute the CM file.
  IF (gm_status <> 0) THEN
    POST_ERR(38000, 'Failed to Initate brk_chk.cm settings', 0,0)
  ENDIF

END brk_updt
-----------------------------------------------------------------------------
ROUTINE ftp_updt
-- PURPOSE: Update FTP Settings
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

--schoensm 11-1-2019 FTP connection change
  Set_S_sVar('$HOSTS_CFG[2].$COMMENT','') 
  Set_S_sVar('$HOSTS_CFG[2].$PROTOCOL','') 
  Set_I_sVar('$HOSTS_CFG[2].$OPER',0)
  Set_I_sVar('$HOSTS_CFG[2].$STATE',1)
  Set_I_sVar('$HOSTS_CFG[2].$TIMEOUT',4)

  Set_S_sVar('$HOSTS_CFG[3].$COMMENT','') 
  Set_S_sVar('$HOSTS_CFG[3].$PROTOCOL','') 
  Set_I_sVar('$HOSTS_CFG[3].$OPER',0)
  Set_I_sVar('$HOSTS_CFG[3].$STATE',1)
  Set_I_sVar('$HOSTS_CFG[3].$TIMEOUT',4)
  
  Set_S_sVar('$HOSTS_CFG[4].$COMMENT','') 
  Set_S_sVar('$HOSTS_CFG[4].$PROTOCOL','') 
  Set_I_sVar('$HOSTS_CFG[4].$OPER',0)
  Set_I_sVar('$HOSTS_CFG[4].$STATE',1)
  Set_I_sVar('$HOSTS_CFG[4].$TIMEOUT',4)

END ftp_updt
-----------------------------------------------------------------------------
ROUTINE comm_var
-- PURPOSE: Update Common Variables
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  --V8.33P10 Servo Off Time to 60sec, 10-02-2020 schoensm	
  GET_VAR(l_psve, '*system*', '$SCR_GRP[1].$NUM_AXES', int_val, gm_status)  
  FOR i = 1 TO int_val DO
    a = int_to_strg(i)
    Set_I_sVar('$PARAM_GROUP[1].$SV_OFF_TIME[' + a + ']',60000)
    Set_B_sVar('$PARAM_GROUP[1].$SV_OFF_ENB[' + a + ']', TRUE)
  ENDFOR

  --V8.33P10 Set Stack Size to 600, 9-21-2020 schoensm
  Set_I_sVar('$extstksiz', 600)  	

END comm_var
-----------------------------------------------------------------------------
BEGIN

END gmautoup2