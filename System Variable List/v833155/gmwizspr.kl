--
--    This material is the joint property of GMFanuc Robotics Corporation  and
--    FANUC  LTD  Japan,  and  must  be  returned  to  either GMFanuc Robotics
--    Corporation or FANUC LTD Japan immediately upon request.  This  material
--    and   the  information  illustrated  or  contained  herein  may  not  be
--    reproduced, copied, used, or transmitted in whole or in part in any  way
--    without the prior written consent of both GMFanuc Robotics and FANUC.
--
--             All Rights Reserved
--             Copyright (C)   1992
--             GMFanuc Robotics Corporation
--             FANUC LTD Japan
--
--             Karel is a registered trademark of
--             GMFanuc Robotics Corporation
--    +
--    Program: gmwizspr.kl
--
--    Description:
--
--    gmwizdp contains questions for configuring GM G4 application applications
--    
-------------------------------------------------------------------------------------------------------------
--    SETUP ROUTINES INCLUDED
-------------------------------------------------------------------------------------------------------------
--
--    Language: KAREL
--

--    Source File: 
--
--    Author:
--            Fanuc Robotics North America
--            3900 West Hamlin Road
--            Rochester Hills, Michigan    48309-3253
--
--    Modification history:
--           2016/03/23   marchaka Program created
--           2016/10/26   marchaka Logic added for combinations
-------------------------------------------------------------------------------------------------------------
PROGRAM gmwizspr
-------------------------------------------------------------------------------------------------------------
%ALPHABETIZE
%NOLOCKGROUP
%INVISIBLE
%RWACCESS
%NOPAUSE = ERROR + COMMAND + TPENABLE

%COMMENT='GM SPRWizG4.0'

%INCLUDE gmevrlng -- Required for the language constants  
%INCLUDE gm_var    --GM variables
%INCLUDE gmcfgspr  -- GM wizard variables for SPR Applications
%INCLUDE gmcfgbdy  -- GM wizard variables for body shop applications

CONST
%INCLUDE gmcnstnt  -- Constant file for GM

Version = '2016-10-26'

VAR
  ans          : INTEGER
  gm_status    : INTEGER
  psve         : INTEGER
  l_response   : INTEGER



%INCLUDE klrdutil -- Required for the CLR_STND_SCR routine for Pendant screen
%INCLUDE gmrdutil

ROUTINE set_english FROM GMlang1 -- setup variable for the user prompts


ROUTINE USERPAGE FROM USERPAGE  -- forces user screen to pendant

-------------------------------------------------------------------
ROUTINE initsprwizvr
--intialize variables in case SPR wizard is run not from wizard
-------------------------------------------------------------------
VAR
w:  INTEGER

BEGIN
  --Initialize variables

  IF UNINIT(bshop_proc1) THEN
    bshop_proc1 = 0
  ENDIF

  IF UNINIT(bshop_proc2) THEN
    bshop_proc2 = 0
  ENDIF

  IF UNINIT(numsprctrl) THEN
    numsprctrl = 0
  ENDIF

  IF UNINIT(spr1_app) THEN
    spr1_app = 0
  ENDIF
  IF UNINIT(spr2_app) THEN
    spr2_app = 0
  ENDIF
  
END initsprwizvr
-------------------------------------------------------------------
ROUTINE spr_app_wiz


BEGIN


  --Set number of SPR controllers
  IF ((bshop_proc1 = sprappl) OR (bshop_proc2 = sprappl)) THEN  
    numsprctrl = 1
  ENDIF

  IF ((bshop_proc1 = sprappl) AND (bshop_proc2 = sprappl)) THEN
    numsprctrl = 2
  ENDIF

  IF ((bshop_proc1 <> sprappl) AND (bshop_proc2 <> sprappl)) THEN
    numsprctrl = 0
  ENDIF  
  			 

  SELECT numsprctrl OF

    CASE(1):  --one spr controller ALWAYS but trick the system by adding 2,3,4 equipments  

      IF (spr1_app = 0) THEN --skip if combo, spr1_app was set in gmwizbsh

        REPEAT
          --WRITE(1 SPR Controller)
          --WRITE(1. Robot Held Gun)
          --WRITE(2. Pedestal Held Gun)

          CLR_STND_SCR(gm_status)
          WRITE(CR,'1 ',sprctr_data,cr,cr)
          WRITE('1.', rhg_gmdata ,cr)
          WRITE('2.', pd_gmdata ,cr)
          WRITE(gdata_ans,'(1-2):')  
          READ(ans)
        UNTIL (Verify_Answr(ans,1,2))	
        spr1_app = ans	
     
      ENDIF --skip if combo

    CASE(2):   
	
        REPEAT
          --WRITE(2 SPR Controllers)
          --WRITE(1. 2 Pedestal Guns)

          CLR_STND_SCR(gm_status)
          WRITE(CR,sprctr2_data,cr,cr)
          WRITE('1.', pd2_gmdata ,cr)
          WRITE(gdata_ans,'(1):')  
          READ(ans)
        UNTIL (Verify_Answr(ans,1,1))	
        spr2_app = ans
    ELSE:
  ENDSELECT --application select

END spr_app_wiz
-------------------------------------------------------------------
BEGIN

set_english
initsprwizvr
spr_app_wiz

END gmwizspr






