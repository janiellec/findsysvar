-- -----------------------------------------------------------------------
--
--   MODULE:         GMSPOTRG2.KL
--   TITLE:          GMSPOTRG2 PROGRAM
--
--
--   WRITTEN BY:     RANDY KOSASKI
--   REVISION DATE:  1/23/16
--
--   LANGUAGE:       KAREL 8.33 R30iB
--   CONTROL GROUP:  BODY SHOP EXECUTION GROUP
--   STATUS:
--
--
--   ORDER NUMBER:   GMGBL4
--   PROJECT NAME:   GM Global Center
--
--
--         FANUC Robotics retains rights in any and all Software
--         contained in the material attached hereto and said
--         Software may not be copied or reproduced without the
--         written permission of FANUC Robotics.
--
--         All Software, (C) Copyright FANUC Robotics Corporation, 2016
--         DESCRIPTION: Spot Program  program files. These routines will be
--                      called from the main wizard, no prompts are in the Variable file
--                      only the setttings GMWIZARD are the questions
--
--         HISTORY OF CHANGES:
--
--         REVISION   DATE       BY               COMMENTS
--         --------   ---------  ---------------  --------------------
--             V4.1   2017/02/05 marchaka         Modify prompt logic for wizard rerun
--
--
--
--
--------------------------------------------------------------------------
PROGRAM GMSPOTRG2

%COMMENT = 'GM Spot V4.1'

%NOLOCKGROUP
%INVISIBLE
%RWACCESS
%NOPAUSE = ERROR + COMMAND + TPENABLE

%INCLUDE KLEVCCDF  -- Required for the TPERROR write command for the contants

CONST

Version = '2017-02-05'
%INCLUDE gmcnstnt -- all GM constants for the wizard

VAR

  Current_Ver  IN SHADOW :STRING[32] -- Set equal to Version constant in initialization routine
  StrtinErs   : INTEGER   -- How many errors I/O error counter had when the program started
  SpotRG2Setup  IN SHADOW : BOOLEAN  -- Keeps track if routine setup Mh I/O at least first time

-- variables declared for All shops
%INCLUDE gmcfgcel  -- GM wizard variables for workcell variables that are common across all shops
%INCLUDE gmcfgerr  -- Required for the configuration for GM Error counting and logging
%INCLUDE gmcfgspt  -- spot application wizard variables

ROUTINE writeLog(p_message: STRING; isError: BOOLEAN) FROM GMWIZLOG

%INCLUDE GMRDUTIL -- Utility Routine for Setting Variables
-----------------------------------------------------------------------------
ROUTINE initSPOT2REG
-- PURPOSE: to initialize Registers associated with Material Handling setup
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN
WriteLog('  Routine initSpot2reg starting in GMSPOTRG2',FALSE)

WriteLog('  Routine initSpot2reg in GMSPOTRG2 Completed',FALSE)

END initSPOT2REG
-----------------------------------------------------------------------------
ROUTINE set_spotreg2
-- PURPOSE: setup registers for spot applications
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

IF (numwldctrl <> 0) THEN

  Current_Ver = Version -- Set the version for reference

  IF UNINIT(ErrsInShop.ErrorsRgstrs) THEN
    ErrsInShop.ErrorsRgstrs = 0
  ENDIF
  IF UNINIT(SpotRG2Setup) OR (Reset_Cell) THEN
    SpotRG2Setup = FALSE
  ENDIF

  StrtinErs = ErrsInShop.ErrorsRgstrs -- grab current error count
  ClrUtltyErrs -- Clear all error in utility program to be used when done

  WriteLog('  Starting the Spot Program GMSPOTRG2', FALSE)

  IF (SpotRG2Setup = TRUE) THEN -- setup has already been setup
    WriteLog('  Spot Registers 2 Already Setup', FALSE)
    IF ExecSetupAgn('Spot REGS') THEN -- ask user if they want to setup again
      SpotRG2Setup = FALSE
    ELSE
      WriteLog('  Spot Registers 2 already Complete', FALSE)
      WriteLog('  GMSPOTRG2 Setup NOT executing again', FALSE)
      RETURN
    ENDIF
  ENDIF

  --setup routines
  initSpot2reg

  ErrsInShop.ErrorsRgstrs =  ErrsInShop.ErrorsRgstrs + (AddUtltyErrs) -- Get all errors in utility program to be added to any program errors
  IF (ErrsInShop.ErrorsRgstrs -StrtinErs) > 0 THEN -- check for I/O setup errors
    WriteLog('  Spot Program Setup GMSPOTRG2 had ' + int2str((ErrsInShop.ErrorsRgstrs- StrtinErs))+' while executing', TRUE)
  ELSE
    WriteLog('  Spot Register 2 Setup completed', FALSE)
    SpotRG2Setup = TRUE
  ENDIF

  WriteLog('', FALSE)

ENDIF --numwldctrl

END set_spotreg2
-----------------------------------------------------------------------------
BEGIN

END GMSPOTRG2
