-- -----------------------------------------------------------------------
--
--   MODULE:         GMPROJPG.KL
--   TITLE:          GMPROJPG PROGRAM
--
--
--   WRITTEN BY:     RANDY KOSASKI
--   REVISION DATE:  1/23/16
--
--   LANGUAGE:       KAREL 8.33 R30iB
--   CONTROL GROUP:  BODY SHOP EXECUTION GROUP
--   STATUS:
--
--
--   ORDER NUMBER:   GMGBL4
--   PROJECT NAME:   GM Global Center
--
--
--         FANUC Robotics retains rights in any and all Software
--         contained in the material attached hereto and said
--         Software may not be copied or reproduced without the
--         written permission of FANUC Robotics.
--
--         All Software, (C) Copyright FANUC Robotics Corporation, 201
--         DESCRIPTION: Project Weld Program  program files. These routines will be
--                      called from the main wizard, no prompts are in the Variable file
--                      only the setttings GMWIZARD are the questions
--
--         HISTORY OF CHANGES:
--
--         REVISION   DATE       BY               COMMENTS
--         --------   ---------  ---------------  --------------------
--              4.1   2017/02/05 marchaka         Modify prompt logic for wizard rerun
--
--
--
--------------------------------------------------------------------------
PROGRAM GMPROJPG

%COMMENT = 'GM PROJ V4.1'

%NOLOCKGROUP
%INVISIBLE
%RWACCESS
%NOPAUSE = ERROR + COMMAND + TPENABLE

%INCLUDE KLEVCCDF  -- Required for the TPERROR write command for the contants

%INCLUDE gmcfgcel  -- GM wizard variables for workcell variables that are common across all shops
%INCLUDE gmcfgerr  -- Required for the configuration for GM Error counting and logging
%INCLUDE gmcfgbdy  -- body shop variables
%INCLUDE gmcfgspt  -- spot application variables
%INCLUDE gmcfgpjw  -- projection weld variables

CONST

Version = '2017-02-05'
%INCLUDE gmcnstnt -- all GM constants for the wizard

VAR

  Current_Ver  IN SHADOW :STRING[32] -- Set equal to Version constant in initialization routine
  StrtinErs   : INTEGER   -- How many errors I/O error counter had when the program started
  ProjPG_Setup  IN SHADOW : BOOLEAN  -- Keeps track if routine setup Mh I/O at least first time

  prog_nam     : STRING[12]
  gm_status: INTEGER

ROUTINE writeLog(p_message: STRING; isError: BOOLEAN) FROM GMWIZLOG

%INCLUDE GMRDUTIL -- Utility Routine for Setting Variables
-----------------------------------------------------------------------------
ROUTINE initPROJprgs
-- PURPOSE: to initialize Vision Programs associated with Material Handling setup
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  IF UNINIT(ProjPG_Setup) THEN
    ProjPG_Setup = FALSE
  ENDIF

  IF UNINIT(bshop_proc1) THEN
    bshop_proc1 = 0
  ENDIF
  IF UNINIT(bshop_proc2) THEN
    bshop_proc2 = 0
  ENDIF

  IF UNINIT(numprojctrl) THEN
    numprojctrl = 0
  ENDIF

  Set_S_sVar('$TP_DEFPROG', 'PROMPTYN')
  Set_S_sVar('$SHELL_WRK.$ROUT_NAME', '')

END initPROJprgs
-----------------------------------------------------------------------------
ROUTINE load_projpg
-- PURPOSE: load projection welder programs
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  IF (numprojctrl <> 0) THEN --application has a projection welder

    Load_File('FRS:','SWPWCPCG.TP',1)
    Load_File('FRS:','SWPWCPSL.TP',1)
    Load_File('FRS:','SWPWMVRP.TP',1)
    Load_File('FRS:','SWPWPRPR.TP',1)
    Load_File('FRS:','SWPWPRRP.TP',1)
    Load_File('FRS:','SWPWST26.TP',1)
    Load_File('FRS:','SWPWST29.TP',1)
    Load_File('FRS:','TCDROPH2.TP',1)
    Load_File('FRS:','TCPICKH2.TP',1)
    Load_File('FRS:','SWPWTPRS.TP',1)
    Load_File('FRS:','TMPLSWPW.TP',1)
    Load_File('FRS:','TMPPWPRC.TP',1)

    Load_File('FRS:','TMPLACPW.TP',1)
    Load_File('FRS:','TMPDSWPW.TP',1)
    Load_File('FRS:','NUM_GUNS.TP',1)
    Load_File('FRS:','FFRSWPW2.TP',1)
    Load_File('FRS:','FFRSWPW1.TP',1)

    Load_File('FRS:','RST_STP.TP',0)
    
    IF (bshop_proc1 = projappl) THEN -- process 1 is a projection welder
      prog_nam = 'tmsproc1'
      set_attr_prg ( prog_nam , AT_DEF_GROUP , 1 , prog_nam, gm_status)
      Load_File('FRS:','tmsproc1.tp',1)  
      set_attr_prg ( prog_nam , AT_DEF_GROUP , 1 , prog_nam, gm_status)
    ENDIF --process 1 is a projection welder

    IF ((bshop_proc1 = spotappl) AND (bshop_proc2 = projappl)) THEN -- combination of a spot + projection weld application
                                                                    -- only time projection welder is process 2  
      prog_nam = 'tmsproc2'
      set_attr_prg ( prog_nam , AT_DEF_GROUP , 1 , prog_nam, gm_status)
      Load_File('FRS:','tmsproc2.tp',1)
      set_attr_prg ( prog_nam , AT_DEF_GROUP , 1 , prog_nam, gm_status)
    ENDIF --combo spot + proj weld

  ENDIF

END load_projpg
-----------------------------------------------------------------------------
ROUTINE proj_stytb
-- PURPOSE: setup projection weld style table
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN   
   
  Set_S_sVar('$style_name[27]', 'SWPWCPCG')
  Set_B_sVar('$style_enab[27]', TRUE)
  Set_S_sVar('$style_comnt[27]', 'SWPW Cap Change')
    
  Set_S_sVar('$style_name[31]', 'SWPWMVRP')
  Set_B_sVar('$style_enab[31]', TRUE)
  Set_S_sVar('$style_comnt[31]', 'SWPW Repair')
 
END proj_stytb
-----------------------------------------------------------------------------
ROUTINE proj_macro
-- PURPOSE: setup projection weld macros
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  prog_nam = 'cap_chng'
  SET_ATTR_PRG(prog_nam, AT_PROTECT, 1, prog_nam, gm_status)
  Load_File('FRS:','CAP_CHNG.TP',1)
  Setup_Macro(12, 'CAP CHANGE', 'CAP_CHNG',1,0, FALSE)    

END proj_macro
-----------------------------------------------------------------------------
ROUTINE set_proj_pg
-- PURPOSE: setup projection welder programs
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

IF (numprojctrl <> 0) THEN --application has projection weld application

  Current_Ver = Version -- Set the version for reference

  IF UNINIT(ErrsInShop.ErrorsPrgrms) THEN
    ErrsInShop.ErrorsPrgrms = 0
  ENDIF
  IF UNINIT(ProjPG_Setup) OR (Reset_Cell) THEN
    ProjPG_Setup = FALSE
  ENDIF

  StrtinErs = ErrsInShop.ErrorsPrgrms -- grab current error count
  ClrUtltyErrs -- Clear all error in utility program to be used when done

  WriteLog('  Starting the Projection Program GMPROJPG', FALSE)

  IF (ProjPG_Setup = TRUE) THEN -- setup has already been setup
    WriteLog('  Projection Programs Already Setup', FALSE)
    IF ExecSetupAgn('Projection Progs') THEN -- ask user if they want to setup again
      ProjPG_Setup = FALSE
    ELSE
      WriteLog('  Projection Programs already Complete', FALSE)
      WriteLog('  GMPROJPG Setup NOT executing again', FALSE)
      RETURN
    ENDIF
  ENDIF

--setup routines
  initPROJprgs
  load_projpg
  proj_stytb
  proj_macro

  ErrsInShop.ErrorsPrgrms =  ErrsInShop.ErrorsPrgrms + (AddUtltyErrs) -- Get all errors in utility program to be added to any program errors
  IF (ErrsInShop.ErrorsPrgrms -StrtinErs) > 0 THEN -- check for I/O setup errors
    WriteLog('  Projection Program Setup GMPROJPG had ' + int2str((ErrsInShop.ErrorsPrgrms- StrtinErs))+' while executing', TRUE)
  ELSE
    WriteLog('  Projection Program Setup completed', FALSE)
    PROJPG_Setup = TRUE
  ENDIF

  WriteLog('', FALSE)

ENDIF --numprojctrl

END set_proj_pg
-----------------------------------------------------------------------------
BEGIN

END GMPROJPG
