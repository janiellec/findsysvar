-- -----------------------------------------------------------------------
--
--   MODULE:         GMARCPG.KL
--   TITLE:          GMARCPG PROGRAM
--
--
--   WRITTEN BY:     Fanuc
--   REVISION DATE:  2016/10/08
--
--   LANGUAGE:       KAREL 8.33 R30iB
--   CONTROL GROUP:  BODY SHOP EXECUTION GROUP
--   STATUS:
--
--
--   ORDER NUMBER:   GMGBL4
--   PROJECT NAME:   GM Global Center
--
--
--         FANUC Robotics retains rights in any and all Software
--         contained in the material attached hereto and said
--         Software may not be copied or reproduced without the
--         written permission of FANUC Robotics.
--
--         All Software, (C) Copyright FANUC Robotics Corporation, 2016
--         DESCRIPTION: GM Global 4 ArcTool Program Setup
--                      
--                      
--
--         HISTORY OF CHANGES:
--
--         REVISION   DATE       BY               COMMENTS
--         --------   ---------  ---------------  --------------------
--             v4.1   2018/03/16 marchaka         Add ArcTool home_io setup
--             v4.1   2018/03/24 marchaka	  Add ArcTool hmiocst	
--              
--
--
--
--
--------------------------------------------------------------------------
PROGRAM gmarcpg

%COMMENT = 'GM ARC PG V4.1'

%NOLOCKGROUP
%INVISIBLE
%RWACCESS
%NOPAUSE = ERROR + COMMAND + TPENABLE

%INCLUDE KLEVCCDF  -- Required for the TPERROR write command for the contants

%INCLUDE gmcfgcel  -- GM wizard variables for workcell variables that are common across all shops
%INCLUDE gmcfgerr  -- Required for the configuration for GM Error counting and logging


CONST

  Version = '2018-03-24'
  %INCLUDE gmcnstnt -- all GM constants for the wizard

VAR

  Current_Ver  IN SHADOW :STRING[32] -- Set equal to Version constant in initialization routine
  StrtinErs   : INTEGER   -- How many errors I/O error counter had when the program started
  ArcPG_Setup  IN SHADOW : BOOLEAN  -- Keeps track if routine setup arc tool program setup at least first time
  gm_status: INTEGER

  prog_nam     : STRING[12]

ROUTINE writeLog(p_message: STRING; isError: BOOLEAN) FROM GMWIZLOG

%INCLUDE GMRDUTIL -- Utility Routine for Setting Variables
-----------------------------------------------------------------------------
ROUTINE init_arc_pg
-- PURPOSE: to initialize variables for arc program setup
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN



END init_arc_pg
-----------------------------------------------------------------------------
ROUTINE set_arc_tp
-- PURPOSE: load ArcTool tp
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  SPRUNCfile('FRS:\arc_hmiocst.tp', 'FR:\hmiocst.tp')
  Load_File('FR:','hmiocst.tp',1)

END set_arc_tp
-----------------------------------------------------------------------------
ROUTINE set_arc_mac
-- PURPOSE: set arc macros
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  prog_nam = 'home_io'
  SET_ATTR_PRG(prog_nam, AT_PROTECT, 1, prog_nam, gm_status)
  CLEAR('HOME_IO', gm_status)
  Set_I_sVar('$MACROTABLE[10].$SYS_LEV_MSK', 0)
  SET_ATTR_PRG(prog_nam, AT_PROTECT, 1, prog_nam, gm_status)
  Load_File('FRS:','HOME_IO.TP',1) -- Must relaod standard macro
  SET_ATTR_PRG(prog_nam, AT_PROTECT, 2, prog_nam, gm_status)
  Setup_Macro(10,  'HOME I/O' ,   'HOME_IO', 1, 0,TRUE)

END set_arc_mac
-----------------------------------------------------------------------------
ROUTINE set_arc_pg
-- PURPOSE: set arc pg
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  Current_Ver = Version -- Set the version for reference

  IF UNINIT(ErrsInShop.ErrorsRgstrs) THEN
    ErrsInShop.ErrorsRgstrs = 0
  ENDIF
  IF UNINIT(ArcPG_Setup) OR (Reset_Cell) THEN
    ArcPG_Setup = FALSE
  ENDIF

  StrtinErs = ErrsInShop.ErrorsRgstrs -- grab current error count
  ClrUtltyErrs -- Clear all error in utility program to be used when done

  WriteLog('  Starting the Arc Program GMARCPG', FALSE)

  IF (ArcPG_Setup = TRUE) THEN -- setup has already been setup
    WriteLog('  Arc Prog Already Setup', FALSE)
    IF ExecSetupAgn('Arc Program') THEN -- ask user if they want to setup again
      ArcPG_Setup = FALSE
    ELSE
      WriteLog('  Arc Program already Complete', FALSE)
      WriteLog('  GMARCPG Setup NOT executing again', FALSE)
      RETURN
    ENDIF
  ENDIF

  --setup routines
  init_arc_pg
  set_arc_tp --load arctool TP
  set_arc_mac --setup macros

  ErrsInShop.ErrorsRgstrs =  ErrsInShop.ErrorsRgstrs + (AddUtltyErrs) -- Get all errors in utility program to be added to any program errors
  IF (ErrsInShop.ErrorsRgstrs -StrtinErs) > 0 THEN -- check for I/O setup errors
    WriteLog('  Arc Prog Setup GMARCPG had ' + int2str((ErrsInShop.ErrorsRgstrs- StrtinErs))+' while executing', TRUE)
  ELSE
    WriteLog('  Arc Prog Setup completed', FALSE)
    ArcPG_Setup = TRUE
  ENDIF

  WriteLog('', FALSE)


END set_arc_pg
-----------------------------------------------------------------------------
BEGIN

END gmarcpg
