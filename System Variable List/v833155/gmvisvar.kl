-- -----------------------------------------------------------------------
--
--   MODULE:         GMVISVAR.KL
--   TITLE:          GMVISVAR PROGRAM
--
--
--   WRITTEN BY:     RANDY KOSASKI
--   REVISION DATE:  1/23/16
--
--   LANGUAGE:       KAREL 8.33 R30iB
--   CONTROL GROUP:  BODY SHOP EXECUTION GROUP
--   STATUS:
--
--
--   ORDER NUMBER:   GMGBL4
--   PROJECT NAME:   GM Global Center
--
--
--         FANUC Robotics retains rights in any and all Software
--         contained in the material attached hereto and said
--         Software may not be copied or reproduced without the
--         written permission of FANUC Robotics.
--
--         All Software, (C) Copyright FANUC Robotics Corporation, 2016
--         DESCRIPTION: Vision Program  program files. These routines will be
--                      called from the main wizard, no prompts are in the Variable file
--                      only the setttings GMWIZMH,GMWIZVIS are the questions
--
--         HISTORY OF CHANGES:
--
--         REVISION   DATE       BY               COMMENTS
--         --------   ---------  ---------------  --------------------
--         4.1        2017/01/29 marchaka         Added iRVision variable settings.
--         4.1        2017/02/07 marchaka         Add webscreen for iRVision
--         4.1        2017/03/12 marchaka         Modifications to support ArcTool wizard
--         4.2        2017/06/24 marchaka	  Webscreen setup moved to SetWebScreen in gmcellvr
--         4.3        2018/02/23 marchaka         Load body shop variables if ArcTool
--
--
--
--
--------------------------------------------------------------------------
PROGRAM GMVISVAR

%COMMENT = 'GM Vision V4.3'

%NOLOCKGROUP
%INVISIBLE
%RWACCESS
%NOPAUSE = ERROR + COMMAND + TPENABLE

%INCLUDE KLEVCCDF  -- Required for the TPERROR write command for the contants

CONST
Version = '2018-02-23'
%INCLUDE gmcnstnt -- used for all of the constants for GM wizard

VAR
  Current_Ver  IN SHADOW :STRING[32] -- Set equal to Version constant in initialization routine
  StrtinErs    : INTEGER   -- How many errors I/O error counter had when the program started

  VisnVarsDone IN SHADOW FROM GMVISVAR: BOOLEAN -- if the variables has ran completly

  lst_menu      IN SHADOW FROM custolst : ARRAY[50,9] OF STRING[40] 
  ir_text2      IN SHADOW FROM IR_OPTN3: STRING[25]
  gm_status    : INTEGER
  arc_optn      IN SHADOW FROM GMVARS :BOOLEAN  --ArcTool or LR ArcTool loaded 

-- variables declared for All shops
%INCLUDE gmcfgcel  -- GM wizard variables for workcell variables that are common across all shops
%INCLUDE gmcfgerr  -- Required for the configuration for GM Error counting and logging

%INCLUDE gmcfgvis  -- All variables associated with Vision configuratio

ROUTINE writeLog(p_message: STRING; isError: BOOLEAN) FROM GMWIZLOG
ROUTINE arc_loaded FROM gmmain1 --ArcTool option
%INCLUDE gmrdutil -- has all GM common wizard routine in it
-----------------------------------------------------------------------------
ROUTINE init_BSVVar
-- PURPOSE: Load vision Variables that are unique to Body Shop Applications
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
-----------------------------------------------------------------------------
BEGIN
       writeLog('Loading Vision Variables for Body Shop', FALSE)


  writeLog('Body Shop Vision Variables loaded', FALSE)

END init_BSVVar
-----------------------------------------------------------------------------
ROUTINE init_PrsVVar
-- PURPOSE: Load vision Variables that are unique to Press Shop Applications
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
-----------------------------------------------------------------------------
BEGIN

writeLog('Loading Vision Variables for Press Shop', FALSE)


 writeLog('Press Shop Vision Variables loaded', FALSE)

END init_PrsVVar
-----------------------------------------------------------------------------
ROUTINE init_PwrVVar
-- PURPOSE: Load vision Variables that are unique to Powertrain Applications
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
-----------------------------------------------------------------------------
BEGIN
       writeLog('Loading Vision Variables for Powertrain', FALSE)

       writeLog('Powertrain Vision Variables loaded', FALSE)

END init_PwrVVar
-----------------------------------------------------------------------------
ROUTINE init_PntVVar
-- PURPOSE: Load vision Variables that are unique to Paint Applications
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
-----------------------------------------------------------------------------
BEGIN
       writeLog('Loading Vision Variables for Paint Shop', FALSE)

       writeLog('Paint Shop Vision Variables loaded', FALSE)

END init_PntVVar

--*********************************************************************************
ROUTINE Cmnt_UFrame
--
--*********************************************************************************
VAR
  l_entry  : INTEGER
--  l_status : INTEGER
BEGIN
-- set up user frame comments
--Max Character 20

  Set_S_PVar('tpfdef', 'SETUP_DATA[1,3,1].$COMMENT','WorkObject#1')
  Set_S_PVar('tpfdef', 'SETUP_DATA[1,3,2].$COMMENT','WorkObject#2')
  Set_S_PVar('tpfdef', 'SETUP_DATA[1,3,3].$COMMENT','WorkObject#3')
  Set_S_PVar('tpfdef', 'SETUP_DATA[1,3,4].$COMMENT','WorkObject#4')
  Set_S_PVar('tpfdef', 'SETUP_DATA[1,3,5].$COMMENT','WorkObject#5')
  Set_S_PVar('tpfdef', 'SETUP_DATA[1,3,6].$COMMENT','WorkObject#6')

  Set_S_PVar('tpfdef', 'SETUP_DATA[1,3,7].$COMMENT','3DL CalibPlat1')
  Set_S_PVar('tpfdef', 'SETUP_DATA[1,3,8].$COMMENT','3DL CalibPlat2')
  Set_S_PVar('tpfdef', 'SETUP_DATA[1,3,9].$COMMENT','BaseFrameofRobot')

END Cmnt_UFrame
--*********************************************************************************

--*********************************************************************************
ROUTINE Cmnt_Utool
--
--*********************************************************************************
VAR
  l_entry  : INTEGER
  l_status : INTEGER

BEGIN
  --User Tool Menu

  Set_S_PVar('tpfdef', 'SETUP_DATA[1,1,1].$COMMENT','Std GM Tool1')
  Set_S_PVar('tpfdef', 'SETUP_DATA[1,1,2].$COMMENT','Std GM Tool2')
  Set_S_PVar('tpfdef', 'SETUP_DATA[1,1,3].$COMMENT','Std GM Tool3')
  Set_S_PVar('tpfdef', 'SETUP_DATA[1,1,4].$COMMENT','Std GM Tool4')
  Set_S_PVar('tpfdef', 'SETUP_DATA[1,1,5].$COMMENT','Std GM Tool5')
  Set_S_PVar('tpfdef', 'SETUP_DATA[1,1,6].$COMMENT','Std GM Tool6')

  Set_S_PVar('tpfdef', 'SETUP_DATA[1,1,7].$COMMENT','3DL Sensor1')
  Set_S_PVar('tpfdef', 'SETUP_DATA[1,1,8].$COMMENT','3DL Sensor2')
  Set_S_PVar('tpfdef', 'SETUP_DATA[1,1,9].$COMMENT','DefltFacePltRbt')
  Set_S_PVar('tpfdef', 'SETUP_DATA[1,1,10].$COMMENT','EOATPointer')

END Cmnt_Utool
-----------------------------------------------------------------------------
ROUTINE irvis_vars
-- PURPOSE: set variables for iRVision application
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  writeLog('  Loading Vision Variable Settings for iRVision', FALSE)

  IF (Chk_loaded('custolst')) THEN
    Set_S_PVar('custolst', 'lst_menu[33,1]', '--AUTOMATIC RE-CALIBRATION--')
    Set_S_PVar('custolst', 'lst_menu[33,3]', '-- #1 = AUTO RE-TEACH TCP/CALIBRATE ')
    Set_S_PVar('custolst', 'lst_menu[33,4]', '-- #2 = CONTINUE HOME WITH NO CHANGE ')
    Set_S_PVar('custolst', 'lst_menu[34,1]', '--FAILED TO FIND CALIBRATION IMAGE--')
    Set_S_PVar('custolst', 'lst_menu[34,3]', '-- #1 = RETRY ')
    Set_S_PVar('custolst', 'lst_menu[34,4]', '-- #2 = CONTINUE HOME WITH NO CHANGE ')
  ELSE
    POST_ERR(38000, 'Failed to set custolst vars', 0, 0)
    writeLog('custolst not loaded, vars not set', FALSE)  
  ENDIF

  IF (Chk_loaded('ir_optn3')) THEN  
    Set_S_PVar('IR_OPTN3', 'IR_TEXT2','Adjust Tolerance Limits')
  ELSE
    POST_ERR(38000, 'Failed to set ir_optn3 vars', 0, 0)
    writeLog('ir_optn3 not loaded, vars not set', FALSE)  
  ENDIF

  Set_S_sVar('$CUSTOMMENU[23].$TITLE', 'Vision Data')
  Set_S_sVar('$CUSTOMMENU[23].$PROG_NAME', 'GMVZDATA')
  Set_I_sVar('$CUSTOMMENU[23].$OPTION', 31)

  IF Chk_Feature('R685') THEN --is iRVision 2D Pkg loaded (3DL pkg includes R685, shows up in feature array)
    Set_I_sVar('$VGFS_CFG[1].$UF_OR_UT', 0)
    Set_I_sVar('$VGFS_CFG[1].$UFRAME_NUM', 7)
    Set_I_sVar('$VGFS_CFG[1].$UTOOL_NUM', 7)
    Set_I_sVar('$VGFS_CFG[1].$ROBOT_GRP', 1)
    Set_S_sVar('$VGFS_CFG[1].$CAMERA_NAME', 'CAMERA1')
    Set_R_sVar('$VGFS_CFG[1].$EXPOSURE', 45.00000)
    Set_R_sVar('$VGFS_CFG[1].$GRID_SPACE', 20.00000)
    Set_R_sVar('$VGFS_CFG[1].$MOVE_ANG_R', 45.00000)
    Set_R_sVar('$VGFS_CFG[1].$MOVE_ANG_W', 30.00000)
    Set_R_sVar('$VGFS_CFG[1].$MOVE_ANG_P', 30.00000)
    Set_R_sVar('$VGFS_CFG[1].$MOVE_DST_Z', 50.00000)
  ELSE
    POST_ERR(38000, 'Failed to set iRVis vars', 0, 0)
    writeLog('iRVis option not installed, vars not set', FALSE)
  ENDIF

  --setup webscreen
  --moved to SetWebScreen in gmcellvr

  writeLog('iRVision Variable Settings complete', FALSE)

END irvis_vars
-----------------------------------------------------------------------------
ROUTINE initVSN_VARS
-- PURPOSE: to initialize Vision Variables associated with Vision setup
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

IF UNINIT(arc_optn) THEN --ArcTool
  arc_loaded
ENDIF

Current_Ver = Version -- Set the version for reference

writeLog('Loading Common Vision Variables for ALL Shops', FALSE)

 Set_B_sVar('$OFFSET_CART',TRUE)
 Set_B_sVar('$VISION_CFG.$PC_SETUP',TRUE)

 Cmnt_UFrame
 Cmnt_Utool

  writeLog('ALL Shops Common Vision Variables Loaded', FALSE)

IF (arc_optn = FALSE) THEN --SpotTool
  SELECT mfg_area OF -- launch the Display Setup set by wizard or load feature
    CASE(mfg_area_bs):  --Body Shop
        init_BSVVar
    CASE(mfg_area_ps):  --Press Shop
        init_PrsVVar
    CASE(mfg_area_pt):  --Powertrain
        init_PwrVVar
    CASE(mfg_area_pn):  --Paint Shop
        init_PntVVar
  ELSE:
    POST_ERR(38000, 'MFG_AREA '+int2str(mfg_area)+' INVALID in initVSN_VARS routine in GMVISVAR', 0, 0) --
    shop_str = 'Unknown'
  ENDSELECT

ELSE --ArcTool

  init_BSVVar --use body shop until GM gives direction

ENDIF --SpotTool

SELECT VisSys_Type OF --launch setup based on vision application
  CASE(vis_irvis):  --Fanuc iRVision
    irvis_vars
  ELSE:
ENDSELECT


END initVSN_VARS
--************************************************************************
--
--                 Main Body of Program
--
--************************************************************************
BEGIN

Current_Ver = Version -- Set the version for reference
-- Check these here instead of a routine so can return to calling routine
IF (arc_optn = FALSE) THEN --SpotTool
  IF UNINIT(mfg_area) THEN
    POST_ERR(38000, 'MFG_AREA not setup in GMVISVAR program', 0, 0) --
    RETURN
  ENDIF
ENDIF --SpotTool
IF UNINIT(Use_Vision) THEN
  POST_ERR(38000, 'Use_Vision not setup in GMVISVAR program', 0, 0) --
  RETURN
ENDIF
IF UNINIT(ErrsInVision.ErrorsVarbls) THEN
  ErrsInVision.ErrorsVarbls = 0
ENDIF
IF UNINIT(VisnVarsDone) THEN
  VisnVarsDone = FALSE
ENDIF

 WriteLog('Starting the Vision Vars setup Program', FALSE)

  IF (VisnVarsDone = TRUE) THEN -- setup has already been setup
      WriteLog('Vision Variables Already Setup', FALSE)
    IF ExecSetupAgn('Vision VARIABLES') THEN -- ask user if they want to setup again
      VisnVarsDone = FALSE
    ELSE
      WriteLog('Vision Variables already Complete', FALSE)
      WriteLog('GMVISVAR Setup NOT executing again', FALSE)
      RETURN
    ENDIF
  ENDIF

 StrtinErs = ErrsInVision.ErrorsVarbls -- grab curent eror count
 ClrUtltyErrs -- Clear all error in utility program to be used when done

 initVSN_VARS

  ErrsInVision.ErrorsVarbls =  ErrsInVision.ErrorsVarbls + (AddUtltyErrs) -- Get all errors in utility program to be added to any program errors
 IF (ErrsInVision.ErrorsVarbls -StrtinErs) > 0 THEN -- check for I/O setup errors
   POST_ERR(38000, 'GMVISVAR had '+int2str((ErrsInVision.ErrorsVarbls - StrtinErs))+' while executing',0, 0) --
   WriteLog('Vision Variable setup Program GMVISVAR had ' + int2str((ErrsInVision.ErrorsVarbls-StrtinErs))+' while executing', TRUE)
 ELSE
   WriteLog('Vision Variable setup Program completed', FALSE)
   VisnVarsDone = TRUE
 ENDIF

  WriteLog('',FALSE)

END GMVISVAR
