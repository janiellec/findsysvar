-------------------------------------------------------------------------
--
--   MODULE:         gmsrvbrs.kl
--   TITLE:          GMSRVBRS PROGRAM
--
--
--   WRITTEN BY:     FANUC
--   REVISION DATE:  2018/09/05
--
--   LANGUAGE:       KAREL 8.33 R30iB
--   CONTROL GROUP:  BODY SHOP EXECUTION GROUP
--   STATUS:
--
--
--   ORDER NUMBER:   GMGBL4
--   PROJECT NAME:   GM Global Center
--
--
--         FANUC Robotics retains rights in any and all Software
--         contained in the material attached hereto and said
--         Software may not be copied or reproduced without the
--         written permission of FANUC Robotics.
--
--         All Software, (C) Copyright FANUC Robotics Corporation, 2016
--         DESCRIPTION: Application setup for stand alone configuration for a
--                      Fanuc servo brush.
--                      
--                      
--
--         HISTORY OF CHANGES:
--
--         REVISION   DATE       BY               COMMENTS
--         --------   ---------  ---------------  --------------------
--	   V4.0	      9-10-2018	 schoensm	  V8.33P06 stand-alone configurations
--
--
--------------------------------------------------------------------------
PROGRAM GMSRVBRS

%COMMENT = 'GM SRVO BRUSH V4.0'

%NOLOCKGROUP
%INVISIBLE
%RWACCESS
%NOPAUSE = ERROR + COMMAND + TPENABLE

%INCLUDE KLEVCCDF  -- Required for the TPERROR write command for the contants
%INCLUDE kliotyps  -- Required for the base I/O types i.e. IO_DIN etc.

CONST
Version = '2018-09-05'

VAR
  gm_status: INTEGER

  Current_Ver  IN SHADOW :STRING[32] -- Set equal to Version constant in initialization routine

  stnda_srvbrs IN SHADOW FROM gmlang1  : STRING[35]
  enter_gmdata IN SHADOW FROM gmlang1  : STRING[35]

ROUTINE writeLog(p_message: STRING; isError: BOOLEAN) FROM GMWIZLOG

%INCLUDE klrdutil -- Required for the CLR_STND_SCR routine for Pendant screen
%INCLUDE gmrdutil --GM common routines
-----------------------------------------------------------------------------
ROUTINE init_srvbrs
-- PURPOSE: to initialize application Programs associated with application setup
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN


END init_srvbrs
-----------------------------------------------------------------------------
ROUTINE set_vr
-- PURPOSE: to load all variables used in process
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN


END set_vr
-----------------------------------------------------------------------------
ROUTINE set_io
-- PURPOSE: to comment and setup all io used in process
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  --IO Flag Comments
  SET_PORT_CMT(IO_FLAG,70,'System Ready    ', gm_status)
  SET_PORT_CMT(IO_FLAG,71,'Motor On        ', gm_status) 
  SET_PORT_CMT(IO_FLAG,72,'Process Fault   ', gm_status) 
  SET_PORT_CMT(IO_FLAG,73,'Monitor Process ', gm_status) 
  SET_PORT_CMT(IO_FLAG,74,'Start RPM RampUp', gm_status) 
  SET_PORT_CMT(IO_FLAG,75,'RPM RampUp Comp.', gm_status) 
  SET_PORT_CMT(IO_FLAG,76,'New Disk        ', gm_status)   
  
  SET_PORT_CMT(IO_FLAG,101,'RPM Command 1   ', gm_status)
  SET_PORT_CMT(IO_FLAG,102,'RPM Command 2   ', gm_status)
  SET_PORT_CMT(IO_FLAG,103,'RPM Command 4   ', gm_status)
  SET_PORT_CMT(IO_FLAG,104,'RPM Command 8   ', gm_status)
  SET_PORT_CMT(IO_FLAG,105,'RPM Command 16  ', gm_status)
  SET_PORT_CMT(IO_FLAG,106,'RPM Command 32  ', gm_status)
  SET_PORT_CMT(IO_FLAG,107,'RPM Command 64  ', gm_status)
  SET_PORT_CMT(IO_FLAG,108,'RPM Command 128 ', gm_status)
  SET_PORT_CMT(IO_FLAG,109,'RPM Command 256 ', gm_status)
  SET_PORT_CMT(IO_FLAG,110,'RPM Command 512 ', gm_status)
  SET_PORT_CMT(IO_FLAG,111,'RPM Command 1024', gm_status)
  SET_PORT_CMT(IO_FLAG,112,'RPM Command 2048', gm_status)

  --Inputs
  --SET_PORT_CMT(IO_DIN, 65,'SBI Shutdown    ',  gm_status)
  
  --Outputs
  --SET_PORT_CMT(IO_DOUT, 71,'SBIPilot Active ',  gm_status)

  --Group Input  
  --SET_PORT_CMT(IO_GPIN,29, 'giJobNumber     ', gm_status)
  
  --Group Output  
  --SET_PORT_CMT(IO_GPOUT,29, 'goJobNumber     ', gm_status)

END set_io
-----------------------------------------------------------------------------
ROUTINE set_pg
-- PURPOSE: to load all programs used in process
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  --Load TP programs for stand-alone config V8.33P06
  Load_File('FRS:','debur_stylexx.tp',1)
  Load_File('FRS:','debur_sxxponc.tp',1)
  SPRUNCfile('FRS:debur_sxxponc.tp', 'FR:\debur_sxxpounc.tp')
  Load_File('FR:','debur_sxxpounc.tp',1) 
  SPRUNCfile('FRS:debur_sxxprc1.tp', 'FR:\debur_sxxproc1.tp')
  Load_File('FR:','debur_sxxproc1.tp',1)
  Load_File('FRS:','deburr_bg.tp',1) 
  Load_File('FRS:','deburr_err.tp',1)     
  SPRUNCfile('FRS:hmiocst_dburr.tp', 'FR:\hmiocst.tp')
  Load_File('FR:','hmiocst.tp',1)
  SPRUNCfile('FRS:tm_brush_prc1.tp', 'FR:\tm_brush_proc1.tp')
  Load_File('FR:','tm_brush_proc1.tp',1)  

END set_pg
-----------------------------------------------------------------------------
ROUTINE set_rg
-- PURPOSE: to comment numeric/position registers used in process.
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

	--data registers
  Comment_Reg(1,5,'Fault Message LB')
  SET_INT_REG(5,0,gm_status)
  Comment_Reg(1,6,'Fault Check LBL ')
  SET_INT_REG(6,0,gm_status)
  Comment_Reg(1,7,'Auto Retry Cntr ')
  SET_INT_REG(7,0,gm_status)
  Comment_Reg(1,8,'Max # of Retries')
  SET_INT_REG(8,2,gm_status)
  Comment_Reg(1,9,'Total Retry Cn  ')
  SET_INT_REG(9,0,gm_status)
  
  Comment_Reg(1,410,'SMC PSI Command ')
  SET_INT_REG(410,0,gm_status)
  Comment_Reg(1,411,'SMC PSI Feedback')
  SET_INT_REG(411,0,gm_status)
  Comment_Reg(1,412,'Requested RPM   ')
  SET_INT_REG(412,0,gm_status)
  Comment_Reg(1,413,'RPM Calc.1      ')
  SET_INT_REG(413,0,gm_status)
  Comment_Reg(1,414,'RPM Calc.2      ')
  SET_INT_REG(414,0,gm_status)
  Comment_Reg(1,415,'Calc.RPM Command')
  SET_INT_REG(415,0,gm_status)
  Comment_Reg(1,416,'RPM Variance    ')
  SET_INT_REG(416,0,gm_status)
  Comment_Reg(1,417,'Max Disk Wear   ')
  SET_INT_REG(417,50,gm_status)
  Comment_Reg(1,418,'Disk Search Pos.')
  SET_INT_REG(418,0,gm_status)
  Comment_Reg(1,419,'Actual Disk Size')
  SET_INT_REG(419,0,gm_status)
  Comment_Reg(1,420,'Request SqFt/min')
  SET_INT_REG(420,0,gm_status)
  Comment_Reg(1,421,'Calc. SqFt/Min  ')
  SET_INT_REG(421,0,gm_status)
  Comment_Reg(1,422,'Adjusted RPM    ')
  SET_INT_REG(422,0,gm_status)  
  Comment_Reg(1,423,'Cycle Counter   ')
  SET_INT_REG(423,0,gm_status)  

	--position registers
  Comment_Reg(2,90, 'Disk Zero Offset')
  Comment_Reg(2,91, 'Start Disk Srch ')
  Comment_Reg(2,92, 'End Disk Search ')
  Comment_Reg(2,93, 'Disk Offset(+X) ')

END set_rg
-----------------------------------------------------------------------------
ROUTINE set_srvbrsh
-- PURPOSE: setup servo brush application
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  Current_Ver = Version -- Set the version for reference

  WriteLog('  Starting the spot plasma program GMSPTPLSM', FALSE)

  init_srvbrs
  
  --SETUP ROUTINES
  set_vr  -- setup all variables used in process.
  set_io  -- setup, comment and configure all io for process.
  set_pg  -- load programs used in process.
  set_rg  -- comment numeric registers and position registers used in process.
  
  WriteLog('  FANUC Servo Brush setup completed', FALSE)

  WriteLog('', FALSE)

END set_srvbrsh
-----------------------------------------------------------------------------
BEGIN

END gmsrvbrs





