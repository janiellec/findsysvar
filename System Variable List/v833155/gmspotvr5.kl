-- -----------------------------------------------------------------------
--
--   MODULE:         GMSPOTVR5.KL
--   TITLE:          GMSPOTVR5 PROGRAM
--
--
--   WRITTEN BY:     FANUC
--   REVISION DATE:  2018/09/18
--
--   LANGUAGE:       KAREL 8.33 R30iB
--   CONTROL GROUP:  BODY SHOP EXECUTION GROUP
--   STATUS:
--
--
--   ORDER NUMBER:   GMGBL4
--   PROJECT NAME:   GM Global Center
--
--
--         FANUC Robotics retains rights in any and all Software
--         contained in the material attached hereto and sai
--         Software may not be copied or reproduced without the
--         written permission of FANUC Robotics.
--
--         All Software, (C) Copyright FANUC Robotics Corporation, 2016
--         DESCRIPTION: Spot Program  program files. These routines will be
--                      called from the main wizard, no prompts are in the Variable file
--                      only the setttings GMWIZARD are the questions
--
--         HISTORY OF CHANGES:
--
--         REVISION   DATE       BY               COMMENTS
--         --------   ---------  ---------------  --------------------
--             V4.0   2018/09/18 marchaka         All servo tip dress motor setup moved here from gmspotvr4. 
--                                                New servo cap change/dresser motor configuration added
--             V4.0   2018/10/26 marchaka         Modify motor settings for the combo servo cap changer and dresser
--             V4.0   2018/11/15 marchaka         Change accel time to 120 for combo servo cap changers.
--             v4.1   2020/03/17 marchaka         Modify hardware start axis to 12 for non servo tip dress applications.
--                                                This will correct an issue where if there were three or more servo guns on a
--                                                servo gun change application the isdtcfg.dt mismatch (hardware start
--                                                axis is used by gun) would cause the ISDT setup questions to occur during an 
--                                                auto update.
--                                                
--
--
--
--
--------------------------------------------------------------------------
PROGRAM GMSPOTVR5

%COMMENT = 'GM Spot V4.1'

%NOLOCKGROUP
%INVISIBLE
%RWACCESS
%NOPAUSE = ERROR + COMMAND + TPENABLE

%ENVIRONMENT SGDEF1  --SWG variables


%INCLUDE KLEVCCDF  -- Required for the TPERROR write command for the contants


-- variables declared for All shops
%INCLUDE gmcfgerr  -- Required for the configuration for GM Error counting and logging
%INCLUDE gmcfgspt  -- GM spot application variables
%INCLUDE gm_var --GM Variables

CONST
Version = '2020-03-17'

%INCLUDE gmcnstnt -- all GM constants for the wizard

VAR

  Current_Ver  IN SHADOW :STRING[32] -- Set equal to Version constant in initialization routine
  StrtinErs   : INTEGER   -- How many errors I/O error counter had when the program started
  SpotVR5Setup  IN SHADOW : BOOLEAN  -- Keeps track if routine setup Mh I/O at least first time
  defpath     IN SHADOW : STRING[16] --used for copying swg dt files for swg setup
  gun_num     : STRING[2] 
  
  srvo_td_opt  IN SHADOW FROM GMCUSTO: BOOLEAN --servo tip dress option loaded
  srvo_dress   IN SHADOW FROM GMCUSTO: INTEGER
  num_tipdrs   IN SHADOW FROM GMCUSTO: INTEGER
  sgunchng     IN SHADOW FROM GMCUSTO  : BOOLEAN   -- Servo gun tool changer option loaded 

  srvotd      IN SHADOW FROM GMSPOTVR3: BOOLEAN --user selected servo tip dresser in wizard
  dtdfiltmp   IN SHADOW FROM GMSPOTVR3   : ARRAY[35] OF STRING[64]  --isdt.dt
  dtdfiltmp2  IN SHADOW FROM GMSPOTVR3   : ARRAY[34] OF STRING[64]  --isdt.dt --servo tip dressers 3 and 4
  dtdcfgftmp  IN SHADOW FROM GMSPOTVR3  : ARRAY[27] OF STRING[64]  --isdtcfg.dt
  numsrvodrs  IN SHADOW FROM GMSPOTVR3  : INTEGER --number of servo tip dressers
  dt_name      IN SHADOW FROM GMCUSTO : STRING[16]  
  dt_file      IN SHADOW FROM GMCUSTO : FILE
  dt_fulnam    IN SHADOW FROM GMCUSTO : STRING[32]
  got_rtu      IN SHADOW FROM GMCUSTO  : BOOLEAN   -- Extended axis option loaded
  gm_status : INTEGER
 
  Reset_Cell   IN SHADOW FROM GMCFGCEL: BOOLEAN    --Used for if all Cell I/O shoudl be all reset
  UseToolChngr IN SHADOW FROM gmcfgtlc : BOOLEAN -- If Tool Changer on Tool

ROUTINE writeLog(p_message: STRING; isError: BOOLEAN) FROM GMWIZLOG

%INCLUDE klrdutil
%INCLUDE GMRDUTIL -- Utility Routine for Setting Variables

ROUTINE srvo_optn FROM gmwizspt --check if servo gun option loaded
ROUTINE srvotd_optn FROM gmwizspt
ROUTINE sgunchg_optn FROM gmwizspt
-----------------------------------------------------------------------------
ROUTINE initspot5var
-- PURPOSE: to initialize registers associated with setup
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  IF UNINIT(g_servog_opt) THEN
    srvo_optn
  ENDIF

  IF UNINIT(srvo_td_opt) THEN
    srvotd_optn --servo tip dresser option loaded
  ENDIF

  IF UNINIT(sgunchng) THEN
    sgunchg_optn --servo gun change option
  ENDIF

  IF UNINIT(num_tipdrs) THEN
    num_tipdrs = 0
  ENDIF

  IF UNINIT(servotipdrs) THEN
    servotipdrs = 0
  ENDIF

END initspot5var
-----------------------------------------------------------------------------
ROUTINE set_tddt
-- PURPOSE: configure isdt dt variables
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:  gmspotvr3
--
--
-----------------------------------------------------------------------------
VAR
  l_i          : INTEGER
  l_copy_str   : STRING[32]

BEGIN

  initspot5var

  do_kcl_Cmnd('CHDIR FRSU:\') --reset FRS to root directory
  do_kcl_Cmnd('CHDIR FRS:\') --reset FRS to root directory
  do_kcl_Cmnd('CHDIR FR:\') --reset FR to root directory

  IF (g_servog_opt = TRUE) THEN --swg option on robot
    IF (srvo_td_opt = TRUE) THEN --servo tip dress option on robot
      IF ((srvotd = TRUE) OR ((srvo_dress = wizans_yes) AND (num_tipdrs > 0))) THEN --servo tip dressers are used  

        -- Write DT file
        defpath = 'FR:'

        --set servo tip dress dt files
        --isdtcfg
        dtdcfgftmp[1] = '----- ISDTCFG.DT  Generated Automatically ------'
        dtdcfgftmp[2] = 'frl_load  0 --Generated Automatically'

        IF ((numsrvodrs = 1) OR (num_tipdrs = 1)) THEN --one servo tip dresser
          dtdcfgftmp[3] = 'num_isdt_axes      1  --Generated by Wizard'
        ENDIF
        IF ((numsrvodrs = 2) OR (num_tipdrs = 2)) THEN --two servo tip dresser
          dtdcfgftmp[3] = 'num_isdt_axes      2  --Generated by Wizard'
        ENDIF
        IF (num_tipdrs = 3) THEN --three servo tip dresser
          dtdcfgftmp[3] = 'num_isdt_axes      3  --Generated by Wizard'
        ENDIF
        IF (num_tipdrs = 4) THEN --three servo tip dresser
          dtdcfgftmp[3] = 'num_isdt_axes      4  --Generated by Wizard'
        ENDIF
       
        dtdcfgftmp[4] = 'fssb_num_a1         1 --Generated Automatically '

        IF (got_rtu = FALSE) THEN --no RTU
          dtdcfgftmp[5] = 'hw_axes_a1         7 --Generated by Wizard'
          dtdcfgftmp[6] = 'amp_num_a1         2 --Generated by Wizard'
          IF ((numsrvodrs = 2) OR (num_tipdrs >= 2)) THEN --two servo tip dressers, configre tip dresser 2
            dtdcfgftmp[7] = 'fssb_num_a2     1 --Generated Automatically'
            dtdcfgftmp[8] = 'hw_axes_a2         8 --Generated by Wizard'
            dtdcfgftmp[9] = 'amp_num_a2         2 --Generated by Wizard' 
          ENDIF
          IF (num_tipdrs >= 3) THEN --three servo tip dressers, configre tip dresser 3
            dtdcfgftmp[10] = 'fssb_num_a3     1 --Generated Automatically' 
            dtdcfgftmp[11] = 'hw_axes_a3     9 --Generated Automatically'
            dtdcfgftmp[12] = 'amp_num_a3     2 --Generated Automatically' 
          ENDIF
          IF (num_tipdrs >= 4) THEN --four servo tip dressers, configre tip dresser 4
            dtdcfgftmp[13] = 'fssb_num_a4     1 --Generated Automatically' 
            dtdcfgftmp[14] = 'hw_axes_a4     10 --Generated Automatically' 
            dtdcfgftmp[15] = 'amp_num_a4     2 --Generated Automatically' 
          ENDIF
        ELSE --RTU
          dtdcfgftmp[5] = 'hw_axes_a1         8 --Generated by Wizard'
          dtdcfgftmp[6] = 'amp_num_a1         3 --Generated by Wizard'
          IF ((numsrvodrs = 2) OR (num_tipdrs >= 2)) THEN --two servo tip dressers, configre tip dresser 2
            dtdcfgftmp[7] = 'fssb_num_a2     1 --Generated Automatically'
            dtdcfgftmp[8] = 'hw_axes_a2         9 --Generated by Wizard'
            dtdcfgftmp[9] = 'amp_num_a2         3 --Generated by Wizard'
          ENDIF
          IF (num_tipdrs >= 3) THEN --three servo tip dressers, configre tip dresser 3
            dtdcfgftmp[10] = 'fssb_num_a3     1 --Generated Automatically' 
            dtdcfgftmp[11] = 'hw_axes_a3     10 --Generated Automatically'
            dtdcfgftmp[12] = 'amp_num_a3     2 --Generated Automatically' 
          ENDIF
          IF (num_tipdrs >= 4) THEN --four servo tip dressers, configre tip dresser 4
            dtdcfgftmp[13] = 'fssb_num_a4     1 --Generated Automatically' 
            dtdcfgftmp[14] = 'hw_axes_a4     11 --Generated Automatically' 
            dtdcfgftmp[15] = 'amp_num_a4     2 --Generated Automatically' 
          ENDIF
        ENDIF --no RTU

        IF ((numsrvodrs = 1) OR ((wld1_app = wld1app_cg) AND (UseToolChngr = TRUE) AND (sgunchng = TRUE) AND (num_tipdrs <= 1))) THEN --one tip dresser, configure tipdreser 1
          dtdcfgftmp[7] = 'fssb_num_a2     0 --Generated Automatically'
          dtdcfgftmp[8] = 'hw_axes_a2         0 --Generated by Wizard'
          dtdcfgftmp[9] = 'amp_num_a2         0 --Generated by Wizard'
        ENDIF

        IF ((numsrvodrs <= 2) OR ((wld1_app = wld1app_cg) AND (UseToolChngr = TRUE) AND (sgunchng = TRUE) AND (num_tipdrs <= 2))) THEN --two or less servo tip dressers        
          dtdcfgftmp[10] = 'fssb_num_a3     0 --Generated Automatically' 
          dtdcfgftmp[11] = 'hw_axes_a3     0 --Generated Automatically'
          dtdcfgftmp[12] = 'amp_num_a3     0 --Generated Automatically' 
          dtdcfgftmp[13] = 'fssb_num_a4     0 --Generated Automatically' 
          dtdcfgftmp[14] = 'hw_axes_a4     0 --Generated Automatically' 
          dtdcfgftmp[15] = 'amp_num_a4     0 --Generated Automatically'
        ENDIF 

        dtdcfgftmp[16] = 'fssb_num_a5     0 --Generated Automatically' 
        dtdcfgftmp[17] = 'hw_axes_a5     0 --Generated Automatically' 
        dtdcfgftmp[18] = 'amp_num_a5     0 --Generated Automatically' 
        dtdcfgftmp[19] = 'fssb_num_a6     0 --Generated Automatically'
        dtdcfgftmp[20] = 'hw_axes_a6     0 --Generated Automatically' 
        dtdcfgftmp[21] = 'amp_num_a6     0 --Generated Automatically' 
        dtdcfgftmp[22] = 'fssb_num_a7     0 --Generated Automatically' 
        dtdcfgftmp[23] = 'hw_axes_a7     0 --Generated Automatically' 
        dtdcfgftmp[24] = 'amp_num_a7     0 --Generated Automatically' 
        dtdcfgftmp[25] = 'fssb_num_a8     0 --Generated Automatically' 
        dtdcfgftmp[26] = 'hw_axes_a8     0 --Generated Automatically'
        dtdcfgftmp[27] = 'amp_num_a8     0 --Generated Automatically'

        dt_name = 'isdtcfg.dt'
        dt_fulnam = defpath + dt_name
        OPEN FILE dt_file('RW', dt_fulnam)
        gm_status = IO_STATUS(dt_file)
        IF (gm_status <> 0) THEN
          ABORT
        ENDIF
      
        FOR l_i=1 TO ARRAY_LEN(dtdcfgftmp) DO
          WRITE dt_file(dtdcfgftmp[l_i], CR)
        ENDFOR
        WRITE dt_file('ENDOFL -- End of file', CR)

        CLOSE FILE dt_file
        l_copy_str = 'frcopy ' + defpath + dt_name + ' FRSU:'
        SPRUNCMD( l_copy_str, gm_status )

        IF (cap_chngtype = cap_srvcombo) THEN --servo cap changer / dresser
        
          --isdt
          dtdfiltmp[1] = '----- ISDT.DT  Generated Automatically ------'
          dtdfiltmp[2] = 'add_proc_1         2 --Generated Automatically'
          dtdfiltmp[3] = 'axis_1             1 --Generated Automatically'
          dtdfiltmp[4] = 'motor_type_1      86 --Generated Automatically'
          dtdfiltmp[5] = 'motor_rpm_1       11 --Generated Automatically'
          dtdfiltmp[6] = 'max_current_1      5 --Generated Automatically'
          dtdfiltmp[7] = 'max_motor_cur_1     10 --Generated Automatically'

          IF (got_rtu = FALSE) THEN --no RTU
            dtdfiltmp[8] = 'amp_number_1       2 --Generated by Wizard'
          ELSE --RTU
            dtdfiltmp[8] = 'amp_number_1       3 --Generated by Wizard'
          ENDIF --no RTU

          dtdfiltmp[9] = 'amp_type_1         2 --Generated Automatcially'
          dtdfiltmp[10] = 'gear_ratio_1  11.700 --Generated Automatically'
          dtdfiltmp[11] = 'change_spd_1       2 --Generated Automatically'
          dtdfiltmp[12] = 'max_speed_1  341.880 --Generated Automatically'
          dtdfiltmp[13] = 'mosign_1           2 --Generated Automatically'
          dtdfiltmp[14] = 'change_accel_1     1 --Generated Automatically'
          dtdfiltmp[15] = 'accel_time_1     120 --Generated Automatically'
          dtdfiltmp[16] = 'load_ratio_1   2.000 --Generated Automatically'
          dtdfiltmp[17] = 'brake_num_1        0 --Generated Automatically'
          dtdfiltmp[18] = 'dresser_1          1 --Generated Automatically'
       
        ELSE --not a servo cap changer / dresser

          --isdt
          dtdfiltmp[1] = '----- ISDT.DT  Generated Automatically ------'
          dtdfiltmp[2] = 'add_proc_1         2 --Generated Automatically'
          dtdfiltmp[3] = 'axis_1             1 --Generated Automatically'
          dtdfiltmp[4] = 'motor_type_1      87 --Generated Automatically'
          dtdfiltmp[5] = 'motor_rpm_1        2 --Generated Automatically'
          dtdfiltmp[6] = 'max_current_1      5 --Generated Automatically'
          dtdfiltmp[7] = 'max_motor_cur_1      5 --Generated Automatically'

          IF (got_rtu = FALSE) THEN --no RTU
            dtdfiltmp[8] = 'amp_number_1       2 --Generated by Wizard'
          ELSE --RTU
            dtdfiltmp[8] = 'amp_number_1       3 --Generated by Wizard'
          ENDIF --no RTU

          dtdfiltmp[9] = 'amp_type_1         2 --Generated Automatcially'
          dtdfiltmp[10] = 'gear_ratio_1   5.000 --Generated Automatically'
          dtdfiltmp[11] = 'change_spd_1       2 --Generated Automatically'
          dtdfiltmp[12] = 'max_speed_1  450.000 --Generated Automatically'
          dtdfiltmp[13] = 'mosign_1           1 --Generated Automatically'
          dtdfiltmp[14] = 'change_accel_1     1 --Generated Automatically'
          dtdfiltmp[15] = 'accel_time_1      80 --Generated Automatically'
          dtdfiltmp[16] = 'load_ratio_1   2.000 --Generated Automatically'
          dtdfiltmp[17] = 'brake_num_1        0 --Generated Automatically'
          dtdfiltmp[18] = 'dresser_1          1 --Generated Automatically'

       ENDIF --not a servo cap cchanger /dresser

       --only dresser one can be one of two types of motors, all other dressers are only bis8/3000 40A
       IF ((numsrvodrs = 1) OR (num_tipdrs <= 1)) THEN  --no second tip dresser
         dtdfiltmp[19] = 'add_proc_2         0 --Generated Automatically'
         dtdfiltmp[20] = 'axis_2             0 --Generated Automatically'
         dtdfiltmp[21] = 'motor_type_2      0 --Generated Automatically'
         dtdfiltmp[22] = 'motor_rpm_2        0 --Generated Automatically'
         dtdfiltmp[23] = 'max_current_2      0 --Generated Automatically'
         dtdfiltmp[24] = 'max_motor_cur_2      0 --Generated Automatically'
         dtdfiltmp[25] = 'amp_number_2       0 --Generated by Wizard'
         dtdfiltmp[26] = 'amp_type_2         0 --Generated Automatcially'
         dtdfiltmp[27] = 'gear_ratio_2   0.000 --Generated Automatically'
         dtdfiltmp[28] = 'change_spd_2       0 --Generated Automatically'
         dtdfiltmp[29] = 'max_speed_2    0.000 --Generated Automatically'
         dtdfiltmp[30] = 'mosign_2           0 --Generated Automatically'
         dtdfiltmp[31] = 'change_accel_2     0 --Generated Automatically'
         dtdfiltmp[32] = 'accel_time_2       0 --Generated Automatically'
         dtdfiltmp[33] = 'load_ratio_2   0.000 --Generated Automatically'
         dtdfiltmp[34] = 'brake_num_2        0 --Generated Automatically'
         dtdfiltmp[35] = 'dresser_2          0 --Generated Automatically'
       ENDIF --don't configure second tip dresser

       IF ((numsrvodrs = 2) OR (num_tipdrs >= 2)) THEN --configure second tip dresser
         dtdfiltmp[19] = 'add_proc_2         2 --Generated Automatically'
         dtdfiltmp[20] = 'axis_2             2 --Generated Automatically'
         dtdfiltmp[21] = 'motor_type_2      87 --Generated Automatically'
         dtdfiltmp[22] = 'motor_rpm_2        2 --Generated Automatically'
         dtdfiltmp[23] = 'max_current_2      5 --Generated Automatically'
         dtdfiltmp[24] = 'max_motor_cur_2      5 --Generated Automatically'

         IF (got_rtu = FALSE) THEN --no RTU
           dtdfiltmp[25] = 'amp_number_2       2 --Generated by Wizard'
         ELSE --RTU
           dtdfiltmp[25] = 'amp_number_2       3 --Generated by Wizard'
         ENDIF --no RTU

         dtdfiltmp[26] = 'amp_type_2         2 --Generated Automatcially'
         dtdfiltmp[27] = 'gear_ratio_2   5.000 --Generated Automatically'
         dtdfiltmp[28] = 'change_spd_2       2 --Generated Automatically'
         dtdfiltmp[29] = 'max_speed_2  450.000 --Generated Automatically'
         dtdfiltmp[30] = 'mosign_2           1 --Generated Automatically'
         dtdfiltmp[31] = 'change_accel_2     1 --Generated Automatically'
         dtdfiltmp[32] = 'accel_time_2      80 --Generated Automatically'
         dtdfiltmp[33] = 'load_ratio_2   2.000 --Generated Automatically'
         dtdfiltmp[34] = 'brake_num_2        0 --Generated Automatically'
         dtdfiltmp[35] = 'dresser_2          1 --Generated Automatically'
       ENDIF --configure second tip dresser

       IF (num_tipdrs >= 3) THEN --configure third dresser
         dtdfiltmp2[1] = 'add_proc_3         2 --Generated Automatically'
         dtdfiltmp2[2] = 'axis_3             2 --Generated Automatically'
         dtdfiltmp2[3] = 'motor_type_3      87 --Generated Automatically'
         dtdfiltmp2[4] = 'motor_rpm_3        2 --Generated Automatically'
         dtdfiltmp2[5] = 'max_current_3      5 --Generated Automatically'
         dtdfiltmp2[6] = 'max_motor_cur_3      5 --Generated Automatically'

         IF (got_rtu = FALSE) THEN --no RTU
           dtdfiltmp2[7] = 'amp_number_3       2 --Generated by Wizard'
         ELSE --RTU
           dtdfiltmp2[7] = 'amp_number_3       3 --Generated by Wizard'
         ENDIF --no RTU

         dtdfiltmp2[8] = 'amp_type_3         2 --Generated Automatcially'
         dtdfiltmp2[9] = 'gear_ratio_3   5.000 --Generated Automatically'
         dtdfiltmp2[10] = 'change_spd_3       2 --Generated Automatically'
         dtdfiltmp2[11] = 'max_speed_3  450.000 --Generated Automatically'
         dtdfiltmp2[12] = 'mosign_3           1 --Generated Automatically'
         dtdfiltmp2[13] = 'change_accel_3     1 --Generated Automatically'
         dtdfiltmp2[14] = 'accel_time_3      80 --Generated Automatically'
         dtdfiltmp2[15] = 'load_ratio_3   2.000 --Generated Automatically'
         dtdfiltmp2[16] = 'brake_num_3        0 --Generated Automatically'
         dtdfiltmp2[17] = 'dresser_3          1 --Generated Automatically'
       ELSE  --no third tip dresser
         dtdfiltmp2[1] = 'add_proc_3         0 --Generated Automatically'
         dtdfiltmp2[2] = 'axis_3             0 --Generated Automatically'
         dtdfiltmp2[3] = 'motor_type_3      0 --Generated Automatically'
         dtdfiltmp2[4] = 'motor_rpm_3        0 --Generated Automatically'
         dtdfiltmp2[5] = 'max_current_3      0 --Generated Automatically'
         dtdfiltmp2[6] = 'max_motor_cur_3      0 --Generated Automatically'
         dtdfiltmp2[7] = 'amp_number_3       0 --Generated by Wizard'
         dtdfiltmp2[8] = 'amp_type_3         0 --Generated Automatcially'
         dtdfiltmp2[9] = 'gear_ratio_3   0.000 --Generated Automatically'
         dtdfiltmp2[10] = 'change_spd_3       0 --Generated Automatically'
         dtdfiltmp2[11] = 'max_speed_3    0.000 --Generated Automatically'
         dtdfiltmp2[12] = 'mosign_3           0 --Generated Automatically'
         dtdfiltmp2[13] = 'change_accel_3     0 --Generated Automatically'
         dtdfiltmp2[14] = 'accel_time_3       0 --Generated Automatically'
         dtdfiltmp2[15] = 'load_ratio_3   0.000 --Generated Automatically'
         dtdfiltmp2[16] = 'brake_num_3        0 --Generated Automatically'
         dtdfiltmp2[17] = 'dresser_3          0 --Generated Automatically'
       ENDIF --setup third dresser

       IF (num_tipdrs >= 4) THEN --configure fourth dresser
         dtdfiltmp2[18] = 'add_proc_4         2 --Generated Automatically'
         dtdfiltmp2[19] = 'axis_4             2 --Generated Automatically'
         dtdfiltmp2[20] = 'motor_type_4      87 --Generated Automatically'
         dtdfiltmp2[21] = 'motor_rpm_4        2 --Generated Automatically'
         dtdfiltmp2[22] = 'max_current_4      5 --Generated Automatically'
         dtdfiltmp2[23] = 'max_motor_cur_4      5 --Generated Automatically'

         IF (got_rtu = FALSE) THEN --no RTU
           dtdfiltmp2[24] = 'amp_number_4       2 --Generated by Wizard'
         ELSE --RTU
           dtdfiltmp2[24] = 'amp_number_4       3 --Generated by Wizard'
         ENDIF --no RTU

         dtdfiltmp2[25] = 'amp_type_4         2 --Generated Automatcially'
         dtdfiltmp2[26] = 'gear_ratio_4   5.000 --Generated Automatically'
         dtdfiltmp2[27] = 'change_spd_4       2 --Generated Automatically'
         dtdfiltmp2[28] = 'max_speed_4  450.000 --Generated Automatically'
         dtdfiltmp2[29] = 'mosign_4           1 --Generated Automatically'
         dtdfiltmp2[30] = 'change_accel_4     1 --Generated Automatically'
         dtdfiltmp2[31] = 'accel_time_4      80 --Generated Automatically'
         dtdfiltmp2[32] = 'load_ratio_4   2.000 --Generated Automatically'
         dtdfiltmp2[33] = 'brake_num_4        0 --Generated Automatically'
         dtdfiltmp2[34] = 'dresser_4          1 --Generated Automatically'
       ELSE  --no fourth tip dresser
         dtdfiltmp2[18] = 'add_proc_4         0 --Generated Automatically'
         dtdfiltmp2[19] = 'axis_4             0 --Generated Automatically'
         dtdfiltmp2[20] = 'motor_type_4      0 --Generated Automatically'
         dtdfiltmp2[21] = 'motor_rpm_4        0 --Generated Automatically'
         dtdfiltmp2[22] = 'max_current_4      0 --Generated Automatically'
         dtdfiltmp2[23] = 'max_motor_cur_4      0 --Generated Automatically'
         dtdfiltmp2[24] = 'amp_number_4       0 --Generated by Wizard'
         dtdfiltmp2[25] = 'amp_type_4         0 --Generated Automatcially'
         dtdfiltmp2[26] = 'gear_ratio_4   0.000 --Generated Automatically'
         dtdfiltmp2[27] = 'change_spd_4       0 --Generated Automatically'
         dtdfiltmp2[28] = 'max_speed_4    0.000 --Generated Automatically'
         dtdfiltmp2[29] = 'mosign_4           0 --Generated Automatically'
         dtdfiltmp2[30] = 'change_accel_4     0 --Generated Automatically'
         dtdfiltmp2[31] = 'accel_time_4       0 --Generated Automatically'
         dtdfiltmp2[32] = 'load_ratio_4   0.000 --Generated Automatically'
         dtdfiltmp2[33] = 'brake_num_4        0 --Generated Automatically'
         dtdfiltmp2[34] = 'dresser_4          0 --Generated Automatically'
       ENDIF --setup third dresser

       dt_name = 'isdt.dt'
       dt_fulnam = defpath + dt_name
       OPEN FILE dt_file('RW', dt_fulnam)
       gm_status = IO_STATUS(dt_file)
       IF (gm_status <> 0) THEN
         ABORT
       ENDIF
      
       FOR l_i=1 TO ARRAY_LEN(dtdfiltmp) DO
         WRITE dt_file(dtdfiltmp[l_i], CR)
       ENDFOR
       FOR l_i = 1 TO ARRAY_LEN(dtdfiltmp2) DO  --write third and fourth tip dresser setup
         WRITE dt_file(dtdfiltmp2[l_i],CR)
       ENDFOR
       WRITE dt_file('ENDOFL -- End of file', CR)

       CLOSE FILE dt_file
       l_copy_str = 'frcopy ' + defpath + dt_name + ' FRSU:'
       SPRUNCMD( l_copy_str, gm_status )

     ELSE -- no servo tip dresser, write default dt file

       -- Write DT file
       defpath = 'FR:'

       --set servo tip dress dt files
       --isdtcfg

       --HARDWARE START set to 10 because worst case scenario is that 
       --there would be an rtu and two servo guns, need to set hardware start
       --to an avaliable axis
       --AMP set to 4 because worst case scenario is that there would be an RTU
       --and 2 servo guns
       dtdcfgftmp[1] = '----- ISDTCFG.DT  Generated Automatically ------'
       dtdcfgftmp[2] = 'frl_load  0 --Generated Automatically'
       dtdcfgftmp[3] = 'num_isdt_axes      1  --Generated by Wizard'
       dtdcfgftmp[4] = 'fssb_num_a1         1 --Generated Automatically '
       dtdcfgftmp[5] = 'hw_axes_a1         12 --Generated by Wizard'
       dtdcfgftmp[6] = 'amp_num_a1         4 --Generated by Wizard'
       dtdcfgftmp[7] = 'fssb_num_a2     0 --Generated Automatically'
       dtdcfgftmp[8] = 'hw_axes_a2         0 --Generated by Wizard'
       dtdcfgftmp[9] = 'amp_num_a2         0 --Generated by Wizard'
       dtdcfgftmp[10] = 'fssb_num_a3     0 --Generated Automatically' 
       dtdcfgftmp[11] = 'hw_axes_a3     0 --Generated Automatically'
       dtdcfgftmp[12] = 'amp_num_a3     0 --Generated Automatically' 
       dtdcfgftmp[13] = 'fssb_num_a4     0 --Generated Automatically' 
       dtdcfgftmp[14] = 'hw_axes_a4     0 --Generated Automatically' 
       dtdcfgftmp[15] = 'amp_num_a4     0 --Generated Automatically' 
       dtdcfgftmp[16] = 'fssb_num_a5     0 --Generated Automatically' 
       dtdcfgftmp[17] = 'hw_axes_a5     0 --Generated Automatically' 
       dtdcfgftmp[18] = 'amp_num_a5     0 --Generated Automatically' 
       dtdcfgftmp[19] = 'fssb_num_a6     0 --Generated Automatically'
       dtdcfgftmp[20] = 'hw_axes_a6     0 --Generated Automatically' 
       dtdcfgftmp[21] = 'amp_num_a6     0 --Generated Automatically' 
       dtdcfgftmp[22] = 'fssb_num_a7     0 --Generated Automatically' 
       dtdcfgftmp[23] = 'hw_axes_a7     0 --Generated Automatically' 
       dtdcfgftmp[24] = 'amp_num_a7     0 --Generated Automatically' 
       dtdcfgftmp[25] = 'fssb_num_a8     0 --Generated Automatically' 
       dtdcfgftmp[26] = 'hw_axes_a8     0 --Generated Automatically'
       dtdcfgftmp[27] = 'amp_num_a8     0 --Generated Automatically'

       dt_name = 'isdtcfg.dt'
       dt_fulnam = defpath + dt_name
       OPEN FILE dt_file('RW', dt_fulnam)
       gm_status = IO_STATUS(dt_file)
       IF (gm_status <> 0) THEN
         ABORT
       ENDIF
      
       FOR l_i=1 TO ARRAY_LEN(dtdcfgftmp) DO
         WRITE dt_file(dtdcfgftmp[l_i], CR)
       ENDFOR

       WRITE dt_file('ENDOFL -- End of file', CR)

       CLOSE FILE dt_file
       l_copy_str = 'frcopy ' + defpath + dt_name + ' FRSU:'
       SPRUNCMD( l_copy_str, gm_status )

       --isdt
       dtdfiltmp[1] = '----- ISDT.DT  Generated Automatically ------'
       dtdfiltmp[2] = 'add_proc_1         4 --Generated Automatically'
       dtdfiltmp[3] = 'axis_1             0 --Generated Automatically'
       dtdfiltmp[4] = 'motor_type_1       0 --Generated Automatically'
       dtdfiltmp[5] = 'motor_rpm_1        0 --Generated Automatically'
       dtdfiltmp[6] = 'max_current_1      0 --Generated Automatically'
       dtdfiltmp[7] = 'max_motor_cur_1      0 --Generated Automatically'
       dtdfiltmp[8] = 'amp_number_1        0 --Generated by Wizard'
       dtdfiltmp[9] = 'amp_type_1          0 --Generated Automatcially'
       dtdfiltmp[10] = 'gear_ratio_1   0.000 --Generated Automatically'
       dtdfiltmp[11] = 'change_spd_1       0 --Generated Automatically'
       dtdfiltmp[12] = 'max_speed_1    0.000 --Generated Automatically'
       dtdfiltmp[13] = 'mosign_1           0 --Generated Automatically'
       dtdfiltmp[14] = 'change_accel_1     0 --Generated Automatically'
       dtdfiltmp[15] = 'accel_time_1       0 --Generated Automatically'
       dtdfiltmp[16] = 'load_ratio_1   0.000 --Generated Automatically'
       dtdfiltmp[17] = 'brake_num_1        0 --Generated Automatically'
       dtdfiltmp[18] = 'dresser_1          0 --Generated Automatically'
       dtdfiltmp[19] = 'add_proc_2         0 --Generated Automatically'
       dtdfiltmp[20] = 'axis_2             0 --Generated Automatically'
       dtdfiltmp[21] = 'motor_type_2      0 --Generated Automatically'
       dtdfiltmp[22] = 'motor_rpm_2        0 --Generated Automatically'
       dtdfiltmp[23] = 'max_current_2      0 --Generated Automatically'
       dtdfiltmp[24] = 'max_motor_cur_2      0 --Generated Automatically'
       dtdfiltmp[25] = 'amp_number_2       0 --Generated by Wizard'
       dtdfiltmp[26] = 'amp_type_2         0 --Generated Automatcially'
       dtdfiltmp[27] = 'gear_ratio_2   0.000 --Generated Automatically'
       dtdfiltmp[28] = 'change_spd_2       0 --Generated Automatically'
       dtdfiltmp[29] = 'max_speed_2    0.000 --Generated Automatically'
       dtdfiltmp[30] = 'mosign_2           0 --Generated Automatically'
       dtdfiltmp[31] = 'change_accel_2     0 --Generated Automatically'
       dtdfiltmp[32] = 'accel_time_2       0 --Generated Automatically'
       dtdfiltmp[33] = 'load_ratio_2   0.000 --Generated Automatically'
       dtdfiltmp[34] = 'brake_num_2        0 --Generated Automatically'
       dtdfiltmp[35] = 'dresser_2          0 --Generated Automatically'

       dtdfiltmp2[1] = 'add_proc_3         0 --Generated Automatically'
       dtdfiltmp2[2] = 'axis_3             0 --Generated Automatically'
       dtdfiltmp2[3] = 'motor_type_3      0 --Generated Automatically'
       dtdfiltmp2[4] = 'motor_rpm_3        0 --Generated Automatically'
       dtdfiltmp2[5] = 'max_current_3      0 --Generated Automatically'
       dtdfiltmp2[6] = 'max_motor_cur_3      0 --Generated Automatically'
       dtdfiltmp2[7] = 'amp_number_3       0 --Generated by Wizard'
       dtdfiltmp2[8] = 'amp_type_3         0 --Generated Automatcially'
       dtdfiltmp2[9] = 'gear_ratio_3   0.000 --Generated Automatically'
       dtdfiltmp2[10] = 'change_spd_3       0 --Generated Automatically'
       dtdfiltmp2[11] = 'max_speed_3    0.000 --Generated Automatically'
       dtdfiltmp2[12] = 'mosign_3           0 --Generated Automatically'
       dtdfiltmp2[13] = 'change_accel_3     0 --Generated Automatically'
       dtdfiltmp2[14] = 'accel_time_3       0 --Generated Automatically'
       dtdfiltmp2[15] = 'load_ratio_3   0.000 --Generated Automatically'
       dtdfiltmp2[16] = 'brake_num_3        0 --Generated Automatically'
       dtdfiltmp2[17] = 'dresser_3          0 --Generated Automatically'
       dtdfiltmp2[18] = 'add_proc_4         0 --Generated Automatically'
       dtdfiltmp2[19] = 'axis_4             0 --Generated Automatically'
       dtdfiltmp2[20] = 'motor_type_4      0 --Generated Automatically'
       dtdfiltmp2[21] = 'motor_rpm_4        0 --Generated Automatically'
       dtdfiltmp2[22] = 'max_current_4      0 --Generated Automatically'
       dtdfiltmp2[23] = 'max_motor_cur_4      0 --Generated Automatically'
       dtdfiltmp2[24] = 'amp_number_4       0 --Generated by Wizard'
       dtdfiltmp2[25] = 'amp_type_4         0 --Generated Automatcially'
       dtdfiltmp2[26] = 'gear_ratio_4   0.000 --Generated Automatically'
       dtdfiltmp2[27] = 'change_spd_4       0 --Generated Automatically'
       dtdfiltmp2[28] = 'max_speed_4    0.000 --Generated Automatically'
       dtdfiltmp2[29] = 'mosign_4           0 --Generated Automatically'
       dtdfiltmp2[30] = 'change_accel_4     0 --Generated Automatically'
       dtdfiltmp2[31] = 'accel_time_4       0 --Generated Automatically'
       dtdfiltmp2[32] = 'load_ratio_4   0.000 --Generated Automatically'
       dtdfiltmp2[33] = 'brake_num_4        0 --Generated Automatically'
       dtdfiltmp2[34] = 'dresser_4          0 --Generated Automatically'

       dt_name = 'isdt.dt'
       dt_fulnam = defpath + dt_name
       OPEN FILE dt_file('RW', dt_fulnam)
       gm_status = IO_STATUS(dt_file)
       IF (gm_status <> 0) THEN
         ABORT
       ENDIF
      
       FOR l_i=1 TO ARRAY_LEN(dtdfiltmp) DO
         WRITE dt_file(dtdfiltmp[l_i], CR)
       ENDFOR
       FOR l_i = 1 TO ARRAY_LEN(dtdfiltmp2) DO  --clear third and fourth tip dresser settings
         WRITE dt_file(dtdfiltmp2[l_i],CR)
       ENDFOR
       WRITE dt_file('ENDOFL -- End of file', CR)

       CLOSE FILE dt_file
       l_copy_str = 'frcopy ' + defpath + dt_name + ' FRSU:'
       SPRUNCMD( l_copy_str, gm_status )

     ENDIF --servo tip dressers are used 
   
    ENDIF --servo tip dress option on robot

  ENDIF --servo gun

END set_tddt
-----------------------------------------------------------------------------
ROUTINE td_mtr_var
-- PURPOSE: sets system variables required for servo tip dress motor config
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:  
--             
--
--
-----------------------------------------------------------------------------
VAR
ax, x, j, k, amp: INTEGER
h, a, p: STRING[4]
tot_tdaxs:  INTEGER


BEGIN

  initspot5var

  IF (g_servog_opt = TRUE) THEN --swg option on robot
    IF (srvo_td_opt = TRUE) THEN --servo tip dress option on robot

      IF ((numsrvodrs = 1) OR (num_tipdrs = 1)) THEN
        Set_I_sVar('$is_scr.$num_tot_axs', 1)
      ENDIF
      IF ((numsrvodrs = 2) OR (num_tipdrs = 2)) THEN
        Set_I_sVar('$is_scr.$num_tot_axs', 2)
      ENDIF
      IF (num_tipdrs = 3) THEN
        Set_I_sVar('$is_scr.$num_tot_axs', 3)     
      ENDiF
      IF (num_tipdrs = 4) THEN
        Set_I_sVar('$is_scr.$num_tot_axs', 4)
      ENDIF

      IF (srvo_dress = wizans_yes) THEN  --servo gun change td motor setup
        tot_tdaxs = num_tipdrs
      ELSE --normal wizard setup
        tot_tdaxs = numsrvodrs
      ENDIF

      FOR k = 1 TO tot_tdaxs DO
        SELECT k OF
          CASE(1):  --servo dresser 1
            IF (got_rtu = FALSE) THEN  --set variables to offset axis if there is an RTU
              ax = 7
              amp = 2
            ELSE
              ax = 8
              amp = 3
            ENDIF 
          CASE(2):  --servo dresser 2
            IF (got_rtu = FALSE) THEN  --set variables to offset axis if there is an RTU
              ax = 8
              amp = 2
            ELSE
              ax = 9
              amp = 3
            ENDIF 
          CASE(3):  --servo dresser 3
            IF (got_rtu = FALSE) THEN  --set variables to offset axis if there is an RTU
              ax = 9
              amp = 2
            ELSE
              ax = 10
              amp = 3
            ENDIF 
          CASE(4):  --servo dresser 3
            IF (got_rtu = FALSE) THEN  --set variables to offset axis if there is an RTU
              ax = 10
              amp = 2
            ELSE
              ax = 11
              amp = 3
            ENDIF 
          ELSE:
        ENDSELECT

        CNV_INT_STR(ax, 1, 0, h)  --hardware axis for dresser
        h = SUB_STR(h, 2, 3)
        CNV_INT_STR(k, 1, 0, p)  --servo tip dresser axis on group 0
        p = SUB_STR(p, 2, 3)
        
        Set_I_sVar('$is_scr.$fssb_line[' + p + ']', 1)
        Set_I_sVar('$is_scr.$axisorder[' + p + ']', ax)
        Set_I_sVar('$is_scr.$prc_axs_typ[' + p + ']', 2)
        Set_S_sVar('$is_scr.$prc_axs_nam[' + p + ']', 'ServoTipDresser')
        Set_I_sVar('$is_scr.$dsp_num[' + p + ']', 7)
        Set_I_sVar('$is_scr.$sbrorder[' + p + ']', ax)
        IF (got_rtu = FALSE) THEN
          Set_I_sVar('$is_scr.$amp_type[2]', 2)
          Set_I_sVar('$scr.$amp_type[2]', 2)
        ELSE
          Set_I_sVar('$is_scr.$amp_type[2]', 0)
          Set_I_sVar('$is_scr.$amp_type[3]', 2)
          Set_I_sVar('$scr.$amp_type[2]', 0)
          Set_I_sVar('$scr.$amp_type[3]', 2)
        ENDIF
        Set_I_sVar('$is_scr.$hw_strt_axs', 0)
        Set_B_sVar('$is_scr.$rotary_axs[' + p + ']', TRUE)
        Set_R_sVar('$is_mrr.$max_amp_cur[' + p + ']', 40.000)
        Set_I_sVar('$is_scr.$axs_amp_num[' + p + ']', amp)
        Set_I_sVar('$sbr[' + h + '].$grp_num', 0)
        IF k = 1 THEN
          Set_I_sVar('$sbr[' + h + '].$axis_num', 1)
        ENDIF
        IF k = 2 THEN
          Set_I_sVar('$sbr[' + h + '].$axis_num', 2)
        ENDIF
        IF k = 3 THEN
          Set_I_sVar('$sbr[' + h + '].$axis_num', 3)
        ENDIF         
        IF k = 4 THEN
          Set_I_sVar('$sbr[' + h + '].$axis_num', 4)
        ENDIF
        Set_R_sVar('$is_scr.$loadratio[' + p + ']', 2.000)
        Set_R_sVar('$is_mrr.$mover_gain[' + p + ']', 0.000)
        Set_R_sVar('$is_mrr.$mover_scale[' + p + ']', 0.000)

        Set_R_sVar('$is_scr.$loadratio[' + p + ']', 2.00)
        Set_I_sVar('$is_scr.$brk_number[' + p + ']', 0)

        Set_I_sVar('$scr.$atr[' + h + ']', ax)
        Set_I_sVar('$scr.$atrattrib[' + h + ']', 0)
        j = ax - 1
        Set_I_sVar('$scr.$f_atr[' + h + ']', j)
        Set_I_sVar('$scr.$f_atrattrib[' + h + ']', 0)
        Set_I_sVar('$scr.$fssb_stat[' + h + ']', 393216)
     
        Set_S_sVar('$sbr[' + h + '].$robot_id', 'EXTENDED AXIS')
        Set_I_sVar('$sbr[' + h + '].$grp_num', 0)
        Set_S_sVar('$sbr[' + h + '].$mtr_inf_id', 'H  DSP -')
        Set_S_sVar('$sbr[' + h + '].$sv_param_id', 'P00.57')

        Set_I_sVar('$sbr[' + h + '].$param[1]', 9)
        Set_I_sVar('$sbr[' + h + '].$param[2]', 640)
        Set_I_sVar('$sbr[' + h + '].$param[3]', 0)
   
        FOR x = 5 TO 6 DO
          CNV_INT_STR(x, 1, 0, a)
          a = SUB_STR(a, 2, 3)
          Set_I_sVar('$sbr[' + h + '].$param[' + a + ']', 0)
        ENDFOR

        Set_I_sVar('$sbr[' + h + '].$param[7]', 6161)
        Set_I_sVar('$sbr[' + h + '].$param[8]', 0)
        Set_I_sVar('$sbr[' + h + '].$param[9]', 4)
        Set_I_sVar('$sbr[' + h + '].$param[10]', 0)
        Set_I_sVar('$sbr[' + h + '].$param[11]', 12)
        Set_I_sVar('$sbr[' + h + '].$param[12]', 0)
        Set_I_sVar('$sbr[' + h + '].$param[16]', 0)
        Set_I_sVar('$sbr[' + h + '].$param[17]', 30)
        Set_I_sVar('$sbr[' + h + '].$param[19]', -8236) 
        Set_I_sVar('$sbr[' + h + '].$param[20]', 0)
        Set_I_sVar('$sbr[' + h + '].$param[21]', 5243)
 
        FOR x = 22 TO 24 DO
          CNV_INT_STR(x, 1, 0, a)
          a = SUB_STR(a, 2, 3)
          Set_I_sVar('$sbr[' + h + '].$param[' + a + ']', 0)  
        ENDFOR

        Set_I_sVar('$sbr[' + h + '].$param[26]', 0)
        Set_I_sVar('$sbr[' + h + '].$param[31]', 515)
 
        FOR x = 41 TO 44 DO  
          CNV_INT_STR(x, 1, 0, a)
          a = SUB_STR(a, 2, 3)
          Set_I_sVar('$sbr[' + h + '].$param[' + a + ']', 0)
        ENDFOR

        Set_I_sVar('$sbr[' + h + '].$param[45]', 1677)
        Set_I_sVar('$sbr[' + h + '].$param[46]', 447)

        FOR x = 48 TO 130 DO
          CNV_INT_STR(x, 1, 0, a)
          a = SUB_STR(a, 2, 3)
          Set_I_sVar('$sbr[' + h + '].$param[' + a + ']', 0)
        ENDFOR 

        Set_I_sVar('$sbr[' + h + '].$param[134]', 1638)  

        FOR x = 137 TO 138 DO
          CNV_INT_STR(x, 1, 0, a)
          a = SUB_STR(a, 2, 3)
          Set_I_sVar('$sbr[' + h + '].$param[' + a + ']', 0)
        ENDFOR

        Set_I_sVar('$sbr[' + h + '].$param[142]', 22) 
        Set_I_sVar('$sbr[' + h + '].$param[143]', 1850)
        Set_I_sVar('$sbr[' + h + '].$param[144]', 319)
        Set_I_sVar('$sbr[' + h + '].$param[146]', 1680)

        FOR x = 147 TO 151 DO
          CNV_INT_STR(x, 1, 0, a)
          a = SUB_STR(a, 2, 3)
          Set_I_sVar('$sbr[' + h + '].$param[' + a + ']', 0)
        ENDFOR

        FOR x = 154 TO 201 DO
          CNV_INT_STR(x, 1, 0, a)
          a = SUB_STR(a, 2, 3)
          Set_I_sVar('$sbr[' + h + '].$param[' + a + ']', 0)
        ENDFOR

        FOR x = 203 TO 300 DO
          CNV_INT_STR(x, 1, 0, a)
          a = SUB_STR(a, 2, 3)
          Set_I_sVar('$sbr[' + h + '].$param[' + a + ']', 0)
        ENDFOR

        Set_I_sVar('$sbr2[' + h + '].$param[1]', -32765)
 
        FOR x = 2 TO 150 DO
          CNV_INT_STR(x, 1, 0, a)
          a = SUB_STR(a, 2, 3)
          Set_I_sVar('$sbr2[' + h + '].$param[' + a + ']', 0)
        ENDFOR

        IF ((cap_chngtype = cap_srvcombo) AND (((got_rtu = FALSE) AND (ax = 7)) OR ((got_rtu = TRUE) AND (ax = 8)))) THEN --servo cap change / dresser, combo cap change dresser can only be on tip dresser 1
                                                            --with current v833p06 configurations
          Set_I_sVar('$is_scr.$motor_size[' + p + ']', 86)  
          Set_I_sVar('$is_scr.$motor_type[' + p + ']', 11)    
          Set_I_sVar('$is_scr.$motor_curnt[' + p + ']', 10)   

          Set_I_sVar('$is_mrr.$mot_spd_lim[' + p + ']', 4000)
          Set_R_sVar('$is_mrr.$encscales[' + p + ']', 408.9446)
          Set_R_sVar('$is_mrr.$jntvellim[' + p + ']', 341.8803)
          Set_B_sVar('$is_mrr.$mosign[' + p + ']', FALSE)
          Set_R_sVar('$is_mrr.$gear_ratio[' + p + ']', 11.700) 
          Set_I_sVar('$is_mrr.$exp_accel[' + p + ']', 120)
          Set_I_sVar('$is_mrr.$moverrlim[' + p + ']', 2271912)
          Set_I_sVar('$is_mrr.$mover_offst[' + p + ']', 2271912) 

          Set_I_sVar('$sbr[' + h + '].$svmtr_id', 22202)  
          Set_S_sVar('$sbr[' + h + '].$mtr_id', 'biS4/4000 20A')  
          Set_I_sVar('$sbr[' + h + '].$mot_spd_lim', 4000)  

          Set_I_sVar('$sbr[' + h + '].$param[4]', 7)  

          Set_I_sVar('$sbr[' + h + '].$param[13]', 800)  
          Set_I_sVar('$sbr[' + h + '].$param[14]', -3840) 
          Set_I_sVar('$sbr[' + h + '].$param[15]', -1253) 
 
          Set_I_sVar('$sbr[' + h + '].$param[18]', -546) 
  
          Set_I_sVar('$sbr[' + h + '].$param[27]', 0) 
          Set_I_sVar('$sbr[' + h + '].$param[28]', 32595)  
          Set_I_sVar('$sbr[' + h + '].$param[29]', 2166)  
          Set_I_sVar('$sbr[' + h + '].$param[30]', 1609)  

          Set_I_sVar('$sbr[' + h + '].$param[32]', 1821) 
          Set_I_sVar('$sbr[' + h + '].$param[33]', 290)  
          Set_I_sVar('$sbr[' + h + '].$param[34]', 0)
          Set_I_sVar('$sbr[' + h + '].$param[35]', 0)
          Set_I_sVar('$sbr[' + h + '].$param[36]', 546)  
          Set_I_sVar('$sbr[' + h + '].$param[37]', 192)  
          Set_I_sVar('$sbr[' + h + '].$param[38]', 1424) 
          Set_I_sVar('$sbr[' + h + '].$param[39]', 5860)  
          Set_I_sVar('$sbr[' + h + '].$param[40]', 64)  

          Set_I_sVar('$sbr[' + h + '].$param[47]', 3857)  

          Set_I_sVar('$sbr[' + h + '].$param[131]', 1908)  
          Set_I_sVar('$sbr[' + h + '].$param[132]', 1821)  
          Set_I_sVar('$sbr[' + h + '].$param[133]', 7680) 

          Set_I_sVar('$sbr[' + h + '].$param[135]', 110)  
          Set_I_sVar('$sbr[' + h + '].$param[136]', 50)  

          Set_I_sVar('$sbr[' + h + '].$param[139]', 1635)  
          Set_I_sVar('$sbr[' + h + '].$param[140]', 91)  
          Set_I_sVar('$sbr[' + h + '].$param[141]', 1543)  

          Set_I_sVar('$sbr[' + h + '].$param[145]', 1592)  

          Set_I_sVar('$sbr[' + h + '].$param[152]', 1394)  
          Set_I_sVar('$sbr[' + h + '].$param[153]', 1210)  

          Set_I_sVar('$sbr[' + h + '].$param[202]', 3641) 

        ELSE --just servo tip dresser
          Set_I_sVar('$is_scr.$motor_size[' + p + ']', 87)   
          Set_I_sVar('$is_scr.$motor_type[' + p + ']', 2)    
          Set_I_sVar('$is_scr.$motor_curnt[' + p + ']', 5)   

          Set_I_sVar('$is_mrr.$mot_spd_lim[' + p + ']', 3000)  
          Set_R_sVar('$is_mrr.$encscales[' + p + ']', 174.763)
          Set_R_sVar('$is_mrr.$jntvellim[' + p + ']', 450.000)
          Set_B_sVar('$is_mrr.$mosign[' + p + ']', TRUE)
          Set_R_sVar('$is_mrr.$gear_ratio[' + p + ']', 5.000)
          Set_I_sVar('$is_mrr.$exp_accel[' + p + ']', 80)
          Set_I_sVar('$is_mrr.$moverrlim[' + p + ']', 1277952)
          Set_I_sVar('$is_mrr.$mover_offst[' + p + ']', 1277952)

          Set_I_sVar('$sbr[' + h + '].$svmtr_id', 22309)  
          Set_S_sVar('$sbr[' + h + '].$mtr_id', 'biS8/3000 40A')  
          Set_I_sVar('$sbr[' + h + '].$mot_spd_lim', 3000)  

          Set_I_sVar('$sbr[' + h + '].$param[4]', 3072)  

          Set_I_sVar('$sbr[' + h + '].$param[13]', 1160) 
          Set_I_sVar('$sbr[' + h + '].$param[14]', -5600)  
          Set_I_sVar('$sbr[' + h + '].$param[15]', -1299)  
          Set_I_sVar('$sbr[' + h + '].$param[18]', -400)  

          Set_I_sVar('$sbr[' + h + '].$param[27]', 3641)  
          Set_I_sVar('$sbr[' + h + '].$param[28]', 32486)  
          Set_I_sVar('$sbr[' + h + '].$param[29]', 3523)  
          Set_I_sVar('$sbr[' + h + '].$param[30]', 2621)  

          FOR x = 32 TO 35 DO 
            CNV_INT_STR(x, 1, 0, a)
            a = SUB_STR(a, 2, 3)
            Set_I_sVar('$sbr[' + h + '].$param[' + a + ']', 0)
          ENDFOR

          Set_I_sVar('$sbr[' + h + '].$param[36]', 1456)  
          Set_I_sVar('$sbr[' + h + '].$param[37]', 168)  
          Set_I_sVar('$sbr[' + h + '].$param[38]', 548)  
          Set_I_sVar('$sbr[' + h + '].$param[39]', 6836)  
          Set_I_sVar('$sbr[' + h + '].$param[40]', 18)  

          Set_I_sVar('$sbr[' + h + '].$param[47]', 5266)  

          Set_I_sVar('$sbr[' + h + '].$param[131]', 818)  
          Set_I_sVar('$sbr[' + h + '].$param[132]', 2548)  
          Set_I_sVar('$sbr[' + h + '].$param[133]', 4320)  

          Set_I_sVar('$sbr[' + h + '].$param[135]', 250)  
          Set_I_sVar('$sbr[' + h + '].$param[136]', 30)  

          Set_I_sVar('$sbr[' + h + '].$param[139]', 1090)  
          Set_I_sVar('$sbr[' + h + '].$param[140]', 142)  
          Set_I_sVar('$sbr[' + h + '].$param[141]', 1763)  

          Set_I_sVar('$sbr[' + h + '].$param[145]', 1442)  

          Set_I_sVar('$sbr[' + h + '].$param[152]', 2154)  
          Set_I_sVar('$sbr[' + h + '].$param[153]', 1545)  

          Set_I_sVar('$sbr[' + h + '].$param[202]', 1821)   
        ENDIF --just servo tip dresser, no cap changer

      ENDFOR --setup dressers 
   
    ENDIF --servo tip dress option

  ENDIF --servo gun option

END td_mtr_var
-----------------------------------------------------------------------------
ROUTINE set_spotvar5
-- PURPOSE: set spot welding application variables
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------

BEGIN

IF (numwldctrl <> 0) THEN --spot welding applciation

  Current_Ver = Version -- Set the version for reference

  -- Insert routines created call here
  initspot5var

ENDIF --numweldctrl

END set_spotvar5
-----------------------------------------------------------------------------
BEGIN

END gmspotvr5
