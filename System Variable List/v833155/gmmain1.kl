--
--    This material is the joint property of Fanuc Robotics Corporation  and
--    FANUC  LTD  Japan,  and  must  be  returned  to  either Fanuc Robotics
--    Corporation or FANUC LTD Japan immediately upon request.  This  material
--    and   the  information  illustrated  or  contained  herein  may  not  be
--    reproduced, copied, used, or transmitted in whole or in part in any  way
--    without the prior written consent of both Fanuc Robotics and FANUC.
--    
--             All Rights Reserved
--             Copyright (C)   1999
--             Fanuc Robotics Corporation
--    
--             Karel is a registered trademark of
--             Fanuc Robotics Corporation
-- 
--    Language: KAREL
--    
--    Source File:  
--    
--    Author: Fanuc Robotics Corporation
--            3900 W. Hamlin Rd.
--            Rochester Hills, Michigan  48309
--    
--	 
--    Modification history:
--      2016-03-15:  marchaka - file created
--      2016-06-14
--      2016-09-02:  marchaka Add srvo_td call in set_std_ctrl to setup 
--                            servo tip dressers on way to cold start
--      2016-10-07:  marchaka Add projection weld setup routines and dimpler routines
--      2016-10-14:  marchaka Moved bodyshop setup routine calls to gmbodysh
--      2016-10-27:  marchaka Add logic for routine calls for dimpler and projection
--                            welding setup that has to happen on way to controlled start.
--      2016-11-12   friededr Minor updates to support PaintShop.
--      2016-12-12   marchaka Add call to set ZDT settings going to cold start.
--                            Need to do it going to cold incase groups were added with
--                            servo gun config.  There are motion group settings.
--      2017-02-09   marchaka Reset FRS and FR to root of directory for file loading
--      2017-02-16   marchaka Added routine arc_loaded. Checks if ArcTool is installed.
--                            Needed in this program because common cell setup files are used
--                            for SpotTool and ArcTool applications.
--      2017-07-06   marchaka Add call to SetWebScreen for weld applciations during cold start.
--                            This fixes an issue with SpotTool+ defaults clearing the GM settings
--                            when a motion group is added during wizard robot configuration.
--                            Add call to spot_posreg for weld applications durig cold start.
--                            This fixes an issue with group 2 position register settings gettin cleared
--                            when a motion group is added during wizard robot configuration.
--      2017-07-09   marchaka Added gm_cfgdone variable in the cold start routine.  It will ensure that
--                            this setup code is only executed when the user has selected to configure
--                            the robot during wizard execution.
--      2018-09-10   marchaka Per GM's request for v833p06, DCS will only be setup during wizard execution
--                            if the user answered yes to DCS setup in the wizard.  DCS setup still occurs
--                            during software installation no matter what.
--      2019-08-23   marchaka Check if a collaborative robot arm is being used, if it is, then execute
--                            collaborative robot setup.  This will be done prior to shop setup but after common
--                            cell setup.
--      2020-10-09   schoensm Added checks for collaborative program file var during V8.33P10
--      2020-10-26   marchaka Add check for CR-14iAL collaborative robot arm
--                            
------------------------------------------------------------------
PROGRAM gmmain1
------------------------------------------------------------------
%COMMENT = 'GM Main 1'
%NOLOCKGROUP
%INVISIBLE
%RWACCESS
%NOPAUSE = ERROR + COMMAND + TPENABLE
%NOABORT = ERROR + COMMAND

%ENVIRONMENT PRODDEF

%INCLUDE gmcfgcel  --  GM wizard variables that are common across all shops
%INCLUDE gmcfgerr  --  Required for the configuration of GM Error counting and logging
%INCLUDE gmcfgbdy  --  GM wizard variables for body shop applciations
%INCLUDE gmcfgpwr  --  GM wizard variables for powertrain applications
%INCLUDE gmcfgprs  --  GM wizard variables for press applications
%INCLUDE gmcfgdsp  --  GM wizard variables for dispense applications
%INCLUDE gmcfgspt  --  GM wizard variables for spot applications
%INCLUDE gmcfgpjw  --  GM wizard variables for projection welders
%INCLUDE gmcfgdmp  --  GM Wizard variables for dimplers
%INCLUDE gm_var    --  GM variables


CONST
Revision = '2020-10-26'
%INCLUDE gmcnstnt -- All GM wizard constants

VAR
entry, gm_status     : INTEGER
coldcfg_done IN CMOS : BOOLEAN --robot cold start config is done 

%INCLUDE klrdutil  --Routine declaration for core util
%INCLUDE gmrdutil  --GM utilities

ROUTINE load_pmc     FROM gmpmc
ROUTINE set_reg      FROM gmcellrg
ROUTINE set_cell_io  FROM gmcellio
ROUTINE set_cellvar  FROM gmcellvr
ROUTINE App_Shop_Bit FROM gmcellvr
ROUTINE set_cellpg   FROM gmcellpg
ROUTINE set_zdt      FROM gmcellvr
ROUTINE set_disp_pg  FROM gmdisppg
ROUTINE set_disp_var FROM gmdispvr
ROUTINE set_disp_reg FROM gmdisprg
ROUTINE setdispiovr  FROM gmdispio
ROUTINE projio2cold  FROM gmprojio2
ROUTINE dimpiocold   FROM gmdimpio
ROUTINE GMPT_SETUP   FROM GMPWRTN
ROUTINE Press_Setup  FROM GMPress   -- Contains Press execution routines
ROUTINE Paint_Setup  FROM GMPAINT
ROUTINE set_bodyshop FROM gmbodysh
ROUTINE repwr_msg    FROM gmwizard
ROUTINE srvo_td      FROM gmspotvr4 --setup servo tip dressers
ROUTINE SetWebScreen FROM gmcellvr  --setup menu favourites and web screens
ROUTINE spot_posreg  FROM gmspotrg
ROUTINE set_colb_io  FROM gmcolbio  --collaborative robot I/O setup
ROUTINE set_colb_var FROM gmcolbvr  --collaborative robot VAR setup
ROUTINE set_colb_pg  FROM gmcolbpg  --collaborative robot PRG setup
-------------------------------------------------------------------
ROUTINE arc_loaded
-------------------------------------------------------------------
VAR
  h541_loaded:  BOOLEAN
  h574_loaded:  BOOLEAN

BEGIN

 arc_optn = FALSE
 h541_loaded = FALSE
 h574_loaded = FALSE

 IF Chk_Feature('H541') THEN -- is the Arc Tool option loaded
   h541_loaded = TRUE   
 ENDIF
 IF Chk_Feature('H574') THEN -- is the LR Arc Tool option loaded
   h574_loaded = TRUE   
 ENDIF

 IF (h541_loaded) OR (h574_loaded) THEN
  arc_optn = TRUE
 ENDIF

END arc_loaded
-------------------------------------------------------------------
ROUTINE collab_arm
--check to see if collaborative robot arm is being used
------------------------------------------------------------------
VAR
cr35:  BOOLEAN
cr7:  BOOLEAN
cr4:  BOOLEAN
cr7L:  BOOLEAN
cr15:  BOOLEAN
cr14L:  BOOLEAN

BEGIN

--initialize to false
collab_rbt = FALSE 
cr35 = FALSE
cr7 = FALSE
cr4 = FALSE
cr7L = FALSE
cr15 = FALSE
cr14L= FALSE

IF Chk_Feature('H768') THEN --CR-35iA
  cr35 = TRUE
ENDIF

IF Chk_Feature('H766') THEN --CR-7iA
  cr7 = TRUE
ENDIF

IF Chk_Feature('H765') THEN --CR-4iA
  cr4 = TRUE
ENDIF

IF Chk_Feature('H767') THEN --CR-7LiA/L
  cr7L = TRUE
ENDIF

IF Chk_Feature('H787') THEN --CR-15iA
  cr15 = TRUE
ENDIF

IF Chk_Feature('H788') THEN --CR-14iA/L
  cr14L = TRUE
ENDIF

IF ((cr35 = TRUE) OR (cr7 = TRUE) OR (cr4 = TRUE) OR (cr7L = TRUE) OR (cr15 = TRUE) OR (cr14L = TRUE)) THEN
  collab_rbt = TRUE
ENDIF

END collab_arm
--**************************************************************************************
ROUTINE set_std_cold
--  This routine will perform the setup that is needed on power up after
--  the custo is ran (from set_std_ctrl).  Call on cold start power up.
--**************************************************************************************

VAR
prog_index: INTEGER

BEGIN

  --Current_Ver = Revision -- save version for reference in backups  --no VARs created yet

  IF (UNINIT(wiz_exec)) THEN
    wiz_exec = FALSE
  ENDIF

  IF (UNINIT(arc_optn)) THEN
    arc_loaded
  ENDIF

  GET_VAR(entry, 'gmwizard', 'config_comp', coldcfg_done, gm_status) --see if cold start setup is already done
    IF (gm_status <> 0) THEN
      POST_ERR(38000, 'READ [gmwizard].config_comp FAILED', gm_status, 0) --
      IF (gm_status = 12311) THEN --Uninitialized, initialize it for auto updated units or error will post every power cycle
        SET_VAR(entry, 'gmwizard', 'config_comp', TRUE, gm_status)
          IF (gm_status <> 0) THEN
            POST_ERR(38000, 'WRITE [gmwizard].config_comp FAILED', gm_status, 0) --
          ELSE
            POST_ERR(38000, 'SET [gmwizard].config_comp to TRUE', gm_status, 0) --
          ENDIF         
      ENDIF
    ENDIF

    IF UNINIT(coldcfg_done) THEN
      coldcfg_done = FALSE
    ENDIF

  IF ((wiz_exec) AND (coldcfg_done = FALSE)) THEN

    do_kcl_Cmnd('CHDIR FRS:\') --reset FRS to root directory
    do_kcl_Cmnd('CHDIR FR:\') --reset FR to root directory

    App_Shop_Bit  --sets up app and shop bits
    set_zdt --sets ZDT variable settings

    IF (numdispctrl<>0) THEN --dispense application selected
      setdispiovr   --sets dispense I/O setup
      --set_disp_pg   --moved to gmbodysh
      set_disp_var  --set dispense variables, changed order so BG tasks would run
      set_disp_reg  --sets dispense registers   
    ENDIF

    IF (numwldctrl <> 0) THEN --spot application
      srvo_td --sets up servo tip drsesers
      SetWebScreen --will resetup web screen, corrects issue with SpotTool+ defaults overwriting them 
		   --during motion group additions at controlled start
      spot_posreg --sets up position register data, corrects an issue with position register positional
                  --data being cleared when a motion group is added at controlled start
    ENDIF --spot application

    IF (numprojctrl <> 0) THEN --projection weld application
      projio2cold --sets up projection I/O
    ENDIF --projection weld application

    IF (numdimpctrl <> 0) THEN --dimple application
      dimpiocold --sets up dimpler I/O
    ENDIF

    wiz_exec = FALSE
    Reset_Cell = FALSE
    
    SET_VAR(entry, 'gmwizard', 'config_comp', TRUE, gm_status)
      IF (gm_status <> 0) THEN
        POST_ERR(38000, '[gmwizard].config_comp FAILED', gm_status, 0) --
      ENDIF        
  ENDIF

END set_std_cold
--**************************************************************************************
ROUTINE set_std_ctrl                                             
--  This routine will perform all setup possible at controlled start for all applications
--**************************************************************************************
VAR 
  prog_index:  INTEGER

BEGIN

  IF (UNINIT(arc_optn)) THEN
    arc_loaded
  ENDIF

  IF (UNINIT(collab_rbt)) THEN
    collab_arm
  ENDIF

  do_kcl_Cmnd('CHDIR FRS:\') --reset FRS to root directory
  do_kcl_Cmnd('CHDIR FR:\') --reset FR to root directory

  IF (Chk_loaded('gmpmc')) THEN
    load_pmc          --load pmc
  ELSE
    ErrsInCell.ErrorsPrgrms = ErrsInCell.ErrorsPrgrms+1
  ENDIF

  IF UNINIT(set_safeio) THEN 
    set_safeio = wizans_yes           
  ENDIF

  IF (set_safeio = wizans_yes) THEN	--Setup DCS only if user answered yes during wizard
    IF NOT (CallThisProg('gmsafeio')) THEN
      ErrsInCell.ErrorsPrgrms = ErrsInCell.ErrorsPrgrms+1
    ENDIF
  ENDIF

  IF (Chk_loaded('gmcellrg')) THEN
    set_reg						 --sets registers
  ELSE
    ErrsInCell.ErrorsRgstrs = ErrsInCell.ErrorsRgstrs+1
  ENDIF

  IF (Chk_loaded('gmcellio')) THEN
    set_cell_io					 --sets cell I/O and flags
  ELSE
    ErrsInCell.ErrorsIOCom = ErrsInCell.ErrorsIOCom+1
  ENDIF

  IF (Chk_loaded('gmcellvr')) THEN
    set_cellvar					 --sets cell variables
  ELSE
    ErrsInCell.ErrorsVarbls = ErrsInCell.ErrorsVarbls+1
  ENDIF

  IF (Chk_loaded('gmcellpg')) THEN
    set_cellpg
  ELSE
    ErrsInCell.ErrorsPrgrms = ErrsInCell.ErrorsPrgrms+1
  ENDIF

  IF (collab_rbt = TRUE) THEN --collaborative robot
    IF (Chk_loaded('gmcolbio')) THEN --collaborative robot I/O setup 
      set_colb_io
    ELSE
      ErrsInShop.ErrorsIOCom = ErrsInShop.ErrorsIOCom+1
    ENDIF
    IF (Chk_loaded('gmcolbvr')) THEN --collaboratve robot variable setup
      set_colb_var
    ELSE
      ErrsInShop.ErrorsVarbls = ErrsInShop.ErrorsVarbls+1
    ENDIF
    IF (Chk_loaded('gmcolbpg')) THEN --collaboratve robot program setup
      set_colb_pg
    ELSE
      ErrsInCell.ErrorsPrgrms = ErrsInCell.ErrorsPrgrms+1
    ENDIF
  ENDIF --collaborative robot
    

-- Each shop should take care of their loading requirements
 SELECT mfg_area OF -- launch the Display Setup set by wizard or load feature
    CASE(mfg_area_bs): -- Body Shop

      IF (Chk_loaded('gmbodysh')) THEN
        set_bodyshop  --call routine that calls all body shop setup routines
      ELSE
        ErrsInShop.ErrorsPrgrms = ErrsInShop.ErrorsPrgrms+1
      ENDIF

    CASE(mfg_area_ps): -- Press Shop
      IF (Chk_loaded('GMPRESS')) THEN
        Press_Setup       -- Press Shop Application Setup
      ELSE
        ErrsInShop.ErrorsPrgrms = ErrsInShop.ErrorsPrgrms+1
      ENDIF

    CASE(mfg_area_pt): -- Powertrain Shop
      IF (Chk_loaded('GMPWRTN')) THEN
        GMPT_SETUP       -- powertrain setup
      ELSE
        ErrsInShop.ErrorsPrgrms = ErrsInShop.ErrorsPrgrms+1
      ENDIF

    CASE(mfg_area_pn): -- Paint Shop
      IF (Chk_loaded('GMPAINT')) THEN
        Paint_Setup       -- PaintShop Application Setup
      ELSE
        ErrsInShop.ErrorsPrgrms = ErrsInShop.ErrorsPrgrms+1
      ENDIF
  
  ELSE:
    POST_ERR(38000, 'MFG_AREA '+int2str(mfg_area)+' INVALID in set_std_ctrl routine in GMMAIN1', 0, 0) --
  ENDSELECT

IF (chk_repwr) THEN				 --post repower message
  repwr_msg
ENDIF

END  set_std_ctrl

--*********************************************************************************
BEGIN

END gmmain1
