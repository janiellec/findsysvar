-- -----------------------------------------------------------------------
--
--   MODULE:         GMMIGIO.KL
--   TITLE:          GMMIGIO PROGRAM
--
--
--   WRITTEN BY:     Fanuc
--   REVISION DATE:  2020/10/23
--
--   LANGUAGE:       KAREL 8.33 R30iB
--   CONTROL GROUP:  BODY SHOP EXECUTION GROUP
--   STATUS:
--
--
--   ORDER NUMBER:   GMGBL4
--   PROJECT NAME:   GM Global Center
--
--
--         FANUC Robotics retains rights in any and all Software
--         contained in the material attached hereto and said
--         Software may not be copied or reproduced without the
--         written permission of FANUC Robotics.
--
--         All Software, (C) Copyright FANUC Robotics Corporation, 2016
--         DESCRIPTION: GM Global 4 ArcTool I/O Setup
--                      
--                      
--
--         HISTORY OF CHANGES:
--
--         REVISION   DATE       BY               COMMENTS
--         --------   ---------  ---------------  --------------------
--             v4.0   2020/10/23 schoensm         Created during V8.33P10                                 
--
--
--
--
--------------------------------------------------------------------------
PROGRAM gmmigio

%COMMENT = 'GM MIG I/O V4.0'
%NOLOCKGROUP
%INVISIBLE
%RWACCESS
%NOPAUSE = ERROR + COMMAND + TPENABLE
%INCLUDE KLEVCCDF  -- Required for the TPERROR write command for the contants
%INCLUDE kliotyps  -- I/O constants
%INCLUDE gmcfgcel  -- GM wizard variables for workcell variables that are common across all shops
%INCLUDE gmcfgerr  -- Required for the configuration for GM Error counting and logging
%INCLUDE gmcfgarc  -- ArcTool wizard variables
%INCLUDE gmcfgmig  -- ArcTool Mig-Wizard variables

CONST

Version = '2020-12-16'
%INCLUDE gmcnstnt -- all GM constants for the wizard

VAR
Current_Ver               IN SHADOW : STRING[32] -- Set equal to Version constant in initialization routine
StrtinErs                           : INTEGER    -- How many errors I/O error counter had when the program started
MigIO_Setup               IN SHADOW : BOOLEAN    -- Keeps track if routine setup arc tool i/o at least first time
gm_status                           : INTEGER
reamer_slot                 IN CMOS : INTEGER    -- ENET comm type, ENET slot
Ream_Err_Sv IN SHADOW FROM GMENETSU : INTEGER    -- Used for the Severity $EIP_CONN[x].$ERR_SV setting by GMENETSU
R_Err_Sv                            : INTEGER    -- Used for arg 3 to pass severity

ROUTINE writeLog(p_message: STRING; isError: BOOLEAN) FROM GMWIZLOG
ROUTINE REAM_IN_EIP(P_Con_Num:INTEGER;p_Con_Name:STRING;p_Err_Sv:INTEGER) FROM gmenets3

%INCLUDE GMRDUTIL -- Utility Routine for Setting Variables
-----------------------------------------------------------------------------
ROUTINE init_mig_io
-- PURPOSE: to initialize variables for mig I/O setup
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  IF UNINIT(reamer_slot) THEN
    reamer_slot = 21
  ENDIF

  IF UNINIT(Ream_Err_Sv) THEN
    Ream_Err_Sv = 0  -- 0 = stop 1 = warn 2 = pause
  ENDIF

  IF UNINIT(R_Err_Sv) THEN
    R_Err_Sv = 0  -- 0 = stop 1 = warn 2 = pause
  ENDIF

END init_mig_io
-----------------------------------------------------------------------------
ROUTINE mig_io
-- PURPOSE: set mig i/o
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  --for Argument 3
  R_Err_Sv = 0 -- 0 = stop 1 = warn 2 = pause

  --Setup ENET
  REAM_IN_EIP(reamer_slot,'Reamer/Nozzle',R_Err_Sv) --pass in slot, description, and severity
  -- Digital Output Configuration      
  SET_PORT_ASG(IO_DOUT, 1457,89, reamer_slot, IO_DOUT, 25, -8,gm_status)  --changed 12-11-20 request by BK

  --comment outputs
  SET_PORT_CMT(IO_DOUT,  73, 'doP1TipMantReqG1',gm_status)
  SET_PORT_CMT(IO_DOUT,1457, 'doAirBlast',gm_status)
  SET_PORT_CMT(IO_DOUT,1458, 'doWireCutter',gm_status)
  SET_PORT_CMT(IO_DOUT,1459, 'doSpatterSpray',gm_status)
  SET_PORT_CMT(IO_DOUT,1460, 'doSlideUp',gm_status)
  SET_PORT_CMT(IO_DOUT,1461, 'doAirMtr&Clamp',gm_status)
  SET_PORT_CMT(IO_DOUT,1462, '(Reserved)',gm_status)
  SET_PORT_CMT(IO_DOUT,1463, '(Reserved)',gm_status)
  SET_PORT_CMT(IO_DOUT,1464, '(Reserved)',gm_status)

  -- Digital Input Configuration
  SET_PORT_ASG(IO_DIN, 1457,89, reamer_slot, IO_DIN, 17, -8,gm_status)

  --comment inputs
  SET_PORT_CMT(IO_DIN,1457, 'diNozUnClamped',gm_status)	
  SET_PORT_CMT(IO_DIN,1458, 'diSlideDown',gm_status)
  SET_PORT_CMT(IO_DIN,1459, 'diNozzlePresent',gm_status)
  SET_PORT_CMT(IO_DIN,1460, 'diCyclePB',gm_status)  	
  SET_PORT_CMT(IO_DIN,1461, 'diSprayPB',gm_status)
  SET_PORT_CMT(IO_DIN,1462, 'diNozzleDetect',gm_status)
  SET_PORT_CMT(IO_DIN,1463, '(Reserved)',gm_status)
  SET_PORT_CMT(IO_DIN,1464, '(Reserved)',gm_status)

END mig_io
-----------------------------------------------------------------------------
ROUTINE set_mig_io
-- PURPOSE: set mig i/o
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  Current_Ver = Version -- Set the version for reference

  IF UNINIT(ErrsInShop.ErrorsRgstrs) THEN
    ErrsInShop.ErrorsRgstrs = 0
  ENDIF
  IF UNINIT(MigIO_Setup) OR (Reset_Cell) THEN
    MigIO_Setup = FALSE
  ENDIF

  StrtinErs = ErrsInShop.ErrorsRgstrs -- grab current error count
  ClrUtltyErrs -- Clear all error in utility program to be used when done

  WriteLog('  Starting the Arc Program GMMIGIO', FALSE)

  IF (MigIO_Setup = TRUE) THEN -- setup has already been setup
    WriteLog('Mig I/O Already Setup', FALSE)
    IF ExecSetupAgn('Mig I/O') THEN -- ask user if they want to setup again
      MigIO_Setup = FALSE
    ELSE
      WriteLog('Mig I/O already Complete', FALSE)
      WriteLog('GMMIGIO Setup NOT executing again', FALSE)
      RETURN
    ENDIF
  ENDIF

  --setup routines
  IF (rmr_trch_wiz = wizans_yes) THEN --application is a Reamer Torch Wizard
    init_mig_io
    mig_io
  ENDIF

  ErrsInShop.ErrorsRgstrs =  ErrsInShop.ErrorsRgstrs + (AddUtltyErrs) -- Get all errors in utility program to be added to any program errors
  IF (ErrsInShop.ErrorsRgstrs -StrtinErs) > 0 THEN -- check for I/O setup errors
    WriteLog('Mig I/O Setup GMMIGIO had ' + int2str((ErrsInShop.ErrorsRgstrs- StrtinErs))+' while executing', TRUE)
  ELSE
    WriteLog('Mig I/O Setup completed', FALSE)
    MigIO_Setup = TRUE
  ENDIF

 WriteLog('', FALSE)


END set_mig_io
-----------------------------------------------------------------------------
BEGIN

END gmmigio
