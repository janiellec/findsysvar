-- -----------------------------------------------------------------------
--
--   MODULE:         GMSPOTPG.KL
--   TITLE:          GMSPOTPG PROGRAM
--
--
--   WRITTEN BY:     RANDY KOSASKI
--   REVISION DATE:  1/23/16
--
--   LANGUAGE:       KAREL 8.33 R30iB
--   CONTROL GROUP:  BODY SHOP EXECUTION GROUP
--   STATUS:
--
--
--   ORDER NUMBER:   GMGBL4
--   PROJECT NAME:   GM Global Center
--
--
--         FANUC Robotics retains rights in any and all Software
--         contained in the material attached hereto and said
--         Software may not be copied or reproduced without the
--         written permission of FANUC Robotics.
--
--         All Software, (C) Copyright FANUC Robotics Corporation, 201
--         DESCRIPTION: Spot Program  program files. These routines will be
--                      called from the main wizard, no prompts are in the Variable file
--                      only the setttings GMWIZARD are the questions
--
--         HISTORY OF CHANGES:
--
--         REVISION   DATE       BY               COMMENTS
--         --------   ---------  ---------------  --------------------
--         V4.1       2017/01/09 marchaka	  Added loading of ccteach.pc
--                                                Removed loading of templa05. It is loaded
--                                                in gmmhprgs.  Add macros 1 - 4.
--                                                Added new cap change programs and servo gun programs
--         V4.1       2017/02/05 marchaka         Modify logic for wizard rerun.
--                                                Style 27 replaces cap change program in style table.  
--                                                Style 28 added to style table.
--         V4.1       2017/02/10 marchaka         Add autocapchangr.tp, dcd_capchngr.tp, tw_prs01.tp
--         V4.1       2017/02/16 marchaka         Remove dcd_capchngr.tp
--         V4.1       2017/02/26 marchaka         Remove tc_tdpr1.tp
--         V4.1       2017/03/14 marchaka         Add auto cap change and tipdress programs for tool changers.
--                                                Add gmdresseron.tp.  Add tdwebmon.pc
--         V4.1       2017/03/28 marchaka         Modify loading of cap changer and tip dresser programs for 
--                                                multiple guns.  Always load gmdresseron as long as the servo 
--                                                tip dress option is installed on the robot.
--         V4.2       2018/04/05 marchaka         Add new cap change programs
--         V4.3       2018/09/17 marchaka         Modified logic to only load autocap*.tp, comobcap*.tp, dcdcap*.tp and capchng*.tp only if they
--                                                do not exist on the controller.  Added new servo cap changer dresser setup.  Style 27 gets 
--                                                loaded and setup on all spot applications.
--         V4.3       2018/09/24 marchaka         Remove loading of srvo_tc.  Servo gun tool change setup will now happen at controlled start
--                                                in the miscellaneous tools program.
--         V4.4       2019/08/27 marchaka         Add servo nut weld application
--         V4.4       2019/10/30 marchaka         Load and setup style 28 for all carried servo gun applications.  Load tdfrcapchng and tdtocapchng
--                                                for all carried servo gun applications.
--         V4.5       2020/11/06 marchaka         Add loading of templa18 and sgthkchk_tmp teach pendant programs for single carried 
--                                                servo gun applications.  The programs are for thickness check.
--------------------------------------------------------------------------
PROGRAM GMSPOTPG

%COMMENT = 'GM Spot V4.5'

%NOLOCKGROUP
%INVISIBLE
%RWACCESS
%NOPAUSE = ERROR + COMMAND + TPENABLE

%INCLUDE KLEVCCDF  -- Required for the TPERROR write command for the contants

-- variables declared for All shops
%INCLUDE gmcfgcel  -- GM wizard variables for workcell variables that are common across all shops
%INCLUDE gmcfgerr  -- Required for the configuration for GM Error counting and logging
%INCLUDE gmcfgspt  -- spot welding application variables
%INCLUDE gmcfgtlc  -- tool change variables
%INCLUDE gmcfgbdy  -- bodyshop variables

CONST

Version = '2020-11-06'
%INCLUDE gmcnstnt -- all GM constants for the wizard

VAR

  Current_Ver  IN SHADOW :STRING[32] -- Set equal to Version constant in initialization routine
  StrtinErs   : INTEGER   -- How many errors I/O error counter had when the program started
  SpotPG_Setup  IN SHADOW : BOOLEAN  -- Keeps track if routine setup Mh I/O at least first time

  gm_status:  INTEGER
  prog_nam     : STRING[12]
  num_swg_guns : INTEGER
  l_psve: INTEGER

  g_servog_opt IN SHADOW FROM GMVARS : BOOLEAN     -- Servo gun option loaded
  sgunchng     IN SHADOW FROM GMCUSTO  : BOOLEAN   -- Servo gun tool changer option loaded 
  srvo_td_opt  IN SHADOW FROM GMCUSTO: BOOLEAN --servo tip dress option loaded
  num_tipdrs   IN SHADOW FROM GMCUSTO: INTEGER

  di_clsgun1mc  IN SHADOW FROM GMVARS: INTEGER  --Close Gun Process 1 Macro Input
  di_clsgun2mc  IN SHADOW FROM GMVARS: INTEGER  --Close Gun Process 2 Macro Input
  di_opngun1mc  IN SHADOW FROM GMVARS: INTEGER  --Open Gun Process 1 Macro Input
  di_opngun2mc  IN SHADOW FROM GMVARS: INTEGER  --Open Gun Process 2 Macro Input  

ROUTINE writeLog(p_message: STRING; isError: BOOLEAN) FROM GMWIZLOG

%INCLUDE GMRDUTIL -- Utility Routine for Setting Variables

ROUTINE srvo_optn FROM gmwizspt --check if servo gun option loaded
ROUTINE sgunchg_optn FROM gmwizspt --check if servo gun option loaded
ROUTINE srvotd_optn FROM gmwizspt 
ROUTINE setpg_visatr(p_program: String;p_prg_atr:INTEGER) FROM swshell3 --make program invisible or visible
-----------------------------------------------------------------------------
ROUTINE initSpotprgs
-- PURPOSE: to initialize spot program variables
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
VAR
guns_grp2, guns_grp3: INTEGER

BEGIN

  IF UNINIT(numwldctrl) THEN
    numwldctrl = 0
  ENDIF

  IF UNINIT(UseToolChngr) THEN
    UseToolChngr = FALSE
  ENDIF

  IF UNINIT(g_servog_opt) THEN
    srvo_optn
  ENDIF

  IF UNINIT(sgunchng) THEN
    sgunchg_optn
  ENDIF

  IF UNINIT(srvo_td_opt) THEN
    srvotd_optn
  ENDIF

  IF (g_servog_opt = TRUE) THEN --determine how many servo guns are setup on unit
    num_swg_guns = 0
    guns_grp2 = 0
    guns_grp3 = 0
    GET_VAR(l_psve, '*system*', '$scr_grp[2].$num_axes', guns_grp2,  gm_status)
    IF (gm_status = 0) THEN --valid read
      num_swg_guns = guns_grp2
    ENDIF
    GET_VAR(l_psve, '*system*', '$scr_grp[3].$num_axes', guns_grp3,  gm_status)
    IF (gm_status = 0) THEN --valid read
      num_swg_guns = num_swg_guns + guns_grp3
    ENDIF
  ENDIF
          
  Set_S_sVar('$TP_DEFPROG', 'PROMPTYN')
  Set_S_sVar('$SHELL_WRK.$ROUT_NAME', '')

END initSpotprgs
-----------------------------------------------------------------------------
ROUTINE load_spot_pg
-- PURPOSE: load spot welding application programs
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  --load for all spot welding applications

  Load_File('FRS:','CAP_SELC.TP',1)  
  Load_File('FRS:','RST_STP.TP',0)
  Load_File('FRS:','partcomp.tp',0)
  Load_File('FRS:','sgtcload.pc',1)   
  Load_File('FRS:','pdsty29.tp',1)
  Load_File('FRS:','pdsty30.tp',1) 
  Load_File('FRS:','dvgchke1.tp',1)
  Load_File('FRS:','dvgchke2.tp',1)
  Load_File('FRS:','tmsproc1.tp',1)
  Load_File('FRS:','ccteach.pc',1)
  Load_File('FRS:', 'homefrtd.tp', 0)
  Load_File('FRS:', 'hometotd.tp', 0)
  Load_File('FRS:', 'notiprst.tp', 1)
  Load_File('FRS:', 'tdwebmon.pc',1)
  Load_File('FRS:', 'style27.tp', 1) 
  
  --load on robots that have servo gun option
  IF (g_servog_opt = TRUE) THEN
    
    Load_File('FRS:','sgdg_ld.pc',1)
    Load_File('FRS:','tunediag.pc',1)
    Load_File('FRS:','get_cfg.pc',1)       
    Load_File('FRS:','TW_UPD.TP',1)
    Load_File('FRS:','TW_UPDCC.TP',1)
    Load_File('FRS:','TW_UPDT.TP',1)
    SPRUNCMD ('COPY FRS:WR_UPDGM.TP FR:\WR_UPDAT.TP', gm_status) 
      IF (gm_status <> 0) THEN
        POST_ERR(38000, 'Failed to copy WR_UPDAT.TP to FR', 0,0)
      ENDIF
    Load_File('FR:','WR_UPDAT.TP',1)
    Load_File('FRS:','STPR_CHK.TP',0)
    Load_File('FRS:','NUM_GUNS.TP',1)
    Load_File('FRS:','CHK_TIPS.TP',1)
    Load_File('FRS:','CHK_WEAR.TP',1)
    Load_File('FRS:','TW_REG.TP',1)
    Load_File('FRS:','FFRMTR.TP',1)  
    Load_File('FRS:','TW_REG.TP',1)
    CLEAR('OPENGUNS',gm_status) 
    Load_File('FRS:','OPENGUNS.TP',1)
    Load_File('FRS:','OPENGRP2.TP',1)
    Load_File('FRS:','OPENGRP3.TP',1)
    Load_File('FRS:','TEMPLA02.TP',1)
 
    Load_File('FRS:','TEMPLA08.TP',1) 
    Load_File('FRS:','TEMPLA09.TP',1)
    Load_File('FRS:','TEMPLA16.TP',1) 
    Load_File('FRS:','TEMPLA17.TP',1)
    Load_File('FRS:','TEMPLA20.TP',1)
    Load_File('FRS:','TEMPLA30.TP',1)

    SPRUNCMD ('COPY FRS:RST_WTR1.TP FR:\RST_WTR.TP', gm_status)
      IF (gm_status <> 0) THEN
        POST_ERR(38000, 'Failed to copy RST_WTR.TP to FR', 0,0)
      ENDIF
    Load_File('FR:','RST_WTR.TP',1)

    Load_File('FRS:', 'clsgrp2.tp', 1)
    Load_File('FRS:', 'clsgrp3.tp', 1)
    Load_File('FRS:', 'clsgunp1.tp', 1)
    Load_File('FRS:', 'clsguns.tp', 1)
    Load_File('FRS:', 'opengunp1.tp', 1)

    SPRUNCMD ('COPY FRS:GM_TW_PRS01.TP FR:\TW_PRS01.TP', gm_status)
      IF (gm_status <> 0) THEN
        POST_ERR(38000, 'Failed to copy TW_PRS01.TP to FR', 0,0)
      ENDIF
    Load_File('FR:', 'tw_prs01.tp',1)
    setpg_visatr('tw_prs01',1)  --make the program visible

    IF (srvo_td_opt = TRUE) THEN --servo tip dress option installed
      SPRUNCMD('COPY FRS:GMDRESSERON.TP FR:\DRESSER_ON.TP', gm_status)
        IF (gm_status <> 0) THEN
          POST_ERR(38000, 'Failed to copy DRESSER_ON.TP to FR', 0,0)
        ENDIF
      Load_File('FR:','DRESSER_ON.TP',1)
    ENDIF --servo tip dress option

    IF (wld1_app = wld1app_snut) THEN --servo nut weld application
      Load_File('FRS:','templa01n.tp',1)
    ENDIF
    
  ELSE --air gun
    CLEAR('OPENGUNS',gm_status)  
    CLEAR('OPENGRP2',gm_status)
    CLEAR('OPENGRP3',gm_status)
    SPRUNCMD ('COPY FRS:AIROPGNS.TP FR:\OPENGUNS.TP', gm_status)
      IF (gm_status <> 0) THEN
        POST_ERR(38000, 'Failed to copy OPENGUNS.TP to FR', 0,0)
      ENDIF      
    Load_File('FR:','OPENGUNS.TP',1)
    Load_File('FRS:','DPTYPE.PC',1)
    Load_File('FRS:','FFR_OPTN.PC',1)
    Load_File('FRS:','FFROPTN2.PC',1)
    Load_File('FRS:','CAPLOSS.PC',1)
    Load_File('FRS:','TEMPLA01.TP',1)
    Load_File('FRS:','TEMPLA05.TP',1) 
    Load_File('FRS:','TEMPLA06.TP',1) 
    Load_File('FRS:','TEMPLA07.TP',1)
    Load_File('FRS:','TEMPLA14.TP',1)
    Load_File('FRS:','TEMPLA15.TP',1)
  ENDIF --servo gun 

  
  --load on robots that have servo gun tool change
  IF (sgunchng = TRUE) THEN       

    -- Load Templates 
     
    SPRUNCMD ('COPY FRS:SGCGWEAR.TP FR:\CAP_WEAR.TP', gm_status)
      IF (gm_status <> 0) THEN
        POST_ERR(38000, 'Failed to copy CAP_WEAR.TP to FR', 0,0)
      ENDIF
     Load_File('FR:','CAP_WEAR.TP',1)
     Load_File('FRS:','TEMPLA21.TP',1)
     Load_File('FRS:','TEMPLA23.TP',1)
     Load_File('FRS:','TEMPLA24.TP',1)

     SPRUNCMD ('COPY FRS:SGTCTWGN.TP FR:\TW_GUNS.TP', gm_status)
       IF (gm_status <> 0) THEN
         POST_ERR(38000, 'Failed to copy TW_GUNS.TP to FR', 0,0)
       ENDIF 
     Load_File('FR:','TW_GUNS.TP',1)
     Load_File('FRS:','TW_MEM.TP',1)   
     Load_File('FRS:','TW_VER.TP',1)

     Load_File('FRS:','TCCKTOOL.TP',1)
     Load_File('FRS:','EMGDTCH.TP',1)
     Load_File('FRS:','SGATTACH.TP',1)
     Load_File('FRS:','SGDETACH.TP',1)
     Load_File('FRS:','TWSTGXTC.TP',1)

     SPRUNCMD ('COPY FRS:sgtcgrst.tp FR:\tw_gnrst.tp', gm_status) 
       IF (gm_status <> 0) THEN
         POST_ERR(38000, 'Failed to copy TW_GUNRST.TP to FR', 0,0)
       ENDIF
     Load_File('FR:','tw_gnrst.tp', 1) 

  ELSE  --load on robots that don't have servo gun tool change

    SPRUNCMD ('COPY FRS:WTR_OFF1.TP FR:\WTR_OFF.TP', gm_status)
       IF (gm_status <> 0) THEN
         POST_ERR(38000, 'Failed to copy WTR_OFF.TP to FR', 0,0)
       ENDIF
    Load_File('FR:','WTR_OFF.TP',1)      
    Load_File('FRS:','TIP_RST.TP',1)      
    Load_File('FRS:','CAP_WEAR.TP',0)
    Load_File('FRS:','TW_GNRST.TP',1)
    Load_File('FRS:','TW_GUNS.TP',1)           
  ENDIF  --servo gun change  

  IF ((wld1_app <> wld1app_cg) AND (wld1_app <> wld1app_cgmh) AND (wld1_app <> wld1app_snut)) THEN --there is one pedstal application
    Load_File('FRS:','PDINSDRS.TP',1) 
  ENDIF --at least one pedestal spot application

  IF ((wld1_app = wld1app_cg) OR (wld1_app = wld1app_cgmh) OR (wld1_app = wld1app_snut) OR (wld2_app = wld2app_cgpg)) THEN --there is one carried gun
    Load_File('FRS:', 'style28.tp', 1)
    Load_File('FRS:', 'tdfrcapchng.tp', 0)		
    Load_File('FRS:', 'tdtocapchng.tp', 0)
 
    IF (g_servog_opt = TRUE) AND ((wld1_app = wld1app_cg) OR (wld1_app = wld1app_cgmh))  THEN --app has a single carried servo gun application
      Load_File('FRS:', 'templa18.tp', 1)  --carried servo gun with thickness check
      Load_File('FRS:', 'sgthkchk_tmp.tp', 0) --servo gun thickness check
    ENDIF --single carried servo gun application

  ENDIF --there is one carried application

  IF (cap_chnger = wizans_yes) THEN --application has a cap changer
    --loaded on all cap changers       	
    Load_File('FRS:', 'dcd_capchng.tp', 0)    		
    Load_File('FRS:', 'capoff.tp', 1)		
    Load_File('FRS:', 'capon.tp', 1)	
    Load_File('FRS:', 'cctiprst.tp', 1)	
    Load_File('FRS:', 'cc_proc1.tp',1)
    Load_File('FRS:', 'cc_frtd1.tp',1)

    SELECT cap_chngtype OF --cap changer type
      CASE(cap_rbtmov, cap_rbtstatn):  --pneumatic setup, robot moving and robot stationary
        Load_File('FRS:', 'capchngr.tp', 0)		
        Load_File('FRS:', 'ccoffsetmov.tp', 1)
        Load_File('FRS:', 'ccoffsetsta.tp', 1)
        Load_File('FRS:', 'ccremovemov.tp', 1)
        Load_File('FRS:', 'ccremovesta.tp', 1)
        Load_File('FRS:', 'autocapchngr.tp',0)  

      CASE(cap_srvcombo):  --servo cap changer / dresser
        Load_File('FRS:', 'combocapchgr.tp',0)
        Load_File('FRS:', 'jawclosed.tp',1)
        Load_File('FRS:', 'jawopen.tp',1)
     
      ELSE:
    ENDSELECT -- cap changer type 

    IF (g_servog_opt = TRUE) THEN  --servo gun option 
      IF ((wld1_app = wld1app_cg) AND (UseToolChngr = TRUE)) THEN --carried gun tool changer   
        IF (num_swg_guns > 1) THEN
          Load_File('frs:', 'dcd_capchng2.tp',0)
          Load_File('frs:', 'tdfrcapchng2.tp',0)	
          Load_File('frs:', 'tdtocapchng2.tp',0)
          IF ((cap_chngtype = cap_rbtmov) OR (cap_chngtype = cap_rbtstatn)) THEN --pneumatic setup, robot moving or robot stationary
            Load_File('frs:', 'capchngr2.tp',0)
            Load_File('frs:', 'autocapchngr2.tp',0)              		
          ENDIF --pneumatic setup, robot moving or robot stationary
          IF (cap_chngtype = cap_srvcombo) THEN --servo cap changer / dresser used
            Load_File('FRS:','combocapchgr2.tp',0)
          ENDIF --servo cap changer /dresser used
        ENDIF
        IF (num_swg_guns > 2) THEN
          Load_File('frs:', 'dcd_capchng3.tp',0)
          Load_File('frs:', 'tdfrcapchng3.tp',0)
          Load_File('frs:', 'tdtocapchng3.tp',0)
          IF ((cap_chngtype = cap_rbtmov) OR (cap_chngtype = cap_rbtstatn)) THEN --pneumatic setup, robot moving or robot stationary
            Load_File('frs:', 'capchngr3.tp',0)
            Load_File('frs:', 'autocapchngr3.tp',0)
          ENDIF --pneumatic setup, robot moving or robot stationary
          IF (cap_chngtype = cap_srvcombo) THEN --servo cap changer / dresser used
            Load_File('FRS:','combocapchgr3.tp',0)
          ENDIF --servo cap changer /dresser used
        ENDIF
        IF (num_swg_guns > 3) THEN
          Load_File('frs:', 'dcd_capchng4.tp',0)
          Load_File('frs:', 'tdfrcapchng4.tp',0)
          Load_File('frs:', 'tdtocapchng4.tp',0)
          IF ((cap_chngtype = cap_rbtmov) OR (cap_chngtype = cap_rbtstatn)) THEN --pneumatic setup, robot moving or robot stationary
            Load_File('frs:', 'capchngr4.tp',0)
            Load_File('frs:', 'autocapchngr4.tp',0)
          ENDIF --pneumatic seutp, robot moving or robot stationary
          IF (cap_chngtype = cap_srvcombo) THEN --servo cap changer / dresser used
            Load_File('FRS:','combocapchgr4.tp',0)
          ENDIF --servo cap changer /dresser used
        ENDIF
      ENDIF --carried gun tool changer 
    ENDIF--servo gun option
       
  ENDIF --cap changer    

  IF ((wld1_app = wld1app_cg) AND (UseToolChngr = TRUE)) THEN --carried gun tool changer
    SPRUNCMD ('COPY FRS:TCSTY28.TP FR:\STYLE28.TP', gm_status) 
    IF (gm_status <> 0) THEN
      POST_ERR(38000, 'Failed to copy STYLE28.TP to FR', 0,0)
    ENDIF
    Load_File('FR:','STYLE28.TP',1)  
  ELSE --not a carried gun tool changer

  ENDIF --carried gun tool changer

END load_spot_pg
-----------------------------------------------------------------------------
ROUTINE loadspot1_pg
-- PURPOSE: load spot1 macros
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  IF (numwldctrl <> 0) THEN --Process 1 is a spotwelder



    IF (wldapp[1].wld_wtreip = wizans_yes) THEN -- watersaver    
      SPRUNCMD ('COPY FRS:setwrtol.tp FR:\setwrtol.tp', gm_status)
        IF (gm_status <> 0) THEN
          POST_ERR(38000, 'Failed to copy SETWRTOL.TP to FR', 0,0)
        ENDIF
      SPRUNCMD ('COPY FRS:wtr_off1.tp FR:\wtr_off.tp', gm_status)
        IF (gm_status <> 0) THEN
          POST_ERR(38000, 'Failed to copy WTR_OFF.TP to FR', 0,0)
        ENDIF
      SPRUNCMD ('COPY FRS:woffmtr.tp FR:\woffmtr.tp', gm_status)
        IF (gm_status <> 0) THEN
          POST_ERR(38000, 'Failed to copy WOFFMTR.TP to FR', 0,0)
        ENDIF
      SPRUNCMD ('COPY FRS:tip_rst.tp FR:\tip_rst.tp', gm_status)
        IF (gm_status <> 0) THEN
          POST_ERR(38000, 'Failed to copy TIP_RST.TP to FR', 0,0)
        ENDIF

      Load_File('FR:','setwrtol.tp', 1)
      Load_File('FR:','wtr_off.tp', 1)
      Load_File('FR:','woffmtr.tp', 1)
      Load_File('FR:','tip_rst.tp', 1)
    ENDIF -- watersaver

    IF (spotapp_eq[1].spotgun[1].sp_srvogn = wizans_yes) THEN --equipment 1, gun 1 is a swg
      Load_File('FRS:','TW_SETG1.TP',1)
    ENDIF --equipment 1, gun 1 is a swg

    IF (wld1_app = wld1app_cg) OR (wld1_app = wld1app_cgmh) OR (wld2_app = wld2app_cgpg) OR (wld1_app = wld1app_snut) THEN --gun 1 is carried
      CLEAR('FFROPTN2.PC',gm_status)
      CLEAR('FFROPTN2.VR',gm_status)
    ENDIF --gun 1 is carried

    IF ((wld1_app = wld1app_spdg) OR (wld1_app = wld1app_dpsg)) THEN --single ped dual gun, dual ped single gun each
      IF (spotapp_eq[2].spotgun[1].sp_srvogn = wizans_yes) THEN --application is a servo gun
         -- load TIP WEAR MACROS HERE
         Load_File('FRS:','TW_SETG2.TP',1)
      ENDIF -- application has servo gun 
    ENDIF

    IF ((wld1_app = wld1app_pg) OR (wld1_app = wld1app_spdg) OR (wld1_app = wld1app_dpsg) OR (wld2_app = wld2app_spdg) OR (wld2_app = wld2app_dpsg)) THEN --application is pedestal
      
      IF (spotapp_eq[1].spotgun[1].sp_srvogn = wizans_yes) THEN --application is a servo gun
        CLEAR('OPENGUNS',gm_status)  
        Load_File('FRS:','OPENGUNS.TP',1)
        Load_File('FRS:','OPENGRP2.TP',1)
        Load_File('FRS:','OPENGRP3.TP',1)
        -- Load FFR Templates
        SPRUNCMD ('COPY FRS:SPDPFFR1.TP FR:\FFRPROC1.TP', gm_status)
          IF (gm_status <> 0) THEN
            POST_ERR(38000, 'Failed to copy FFRPROC1.TP to FR', 0,0)
          ENDIF
        Load_File('FR:','FFRPROC1.TP',0)  
        SPRUNCMD ('COPY FRS:SPDPFFR2.TP FR:\FFRPROC2.TP', gm_status) 
          IF (gm_status <> 0) THEN
            POST_ERR(38000, 'Failed to copy FFRPROC2.TP to FR', 0,0)
          ENDIF
        Load_File('FR:','FFRPROC2.TP',0)  

      ELSE --applciation is not a servo gun
        CLEAR('OPENGUNS',gm_status)  
        CLEAR('OPENGRP2',gm_status)  
        CLEAR('OPENGRP3',gm_status)  
        SPRUNCMD ('COPY FRS:AIROPGNS.TP FR:\OPENGUNS.TP', gm_status)
          IF (gm_status <> 0) THEN
            POST_ERR(38000, 'Failed to copy OPENGUNS.TP to FR', 0,0)
          ENDIF
        Load_File('FR:','OPENGUNS.TP',1)
        Load_File('FRS:','DPTYPE.PC',1)
      ENDIF --gun 1 is a servo gun  
    ELSE --application is carried
    ENDIF -- gun 1 is a pedstal

    IF ((wld1_app = wld1app_cg) AND (UseToolChngr = TRUE)) THEN --carried gun tool changer 

      SPRUNCMD ('COPY FRS:tc_tipdrs1.tp FR:\tipdress1.tp', gm_status)
        IF (gm_status <> 0) THEN
          POST_ERR(38000, 'Failed to copy TIPDRESS1.TP to FR', 0,0)
         ENDIF
      Load_File('FR:', 'tipdress1.tp',0)    
    
    ELSE --not carried gun tool changer
      Load_File('FRS:', 'tipdress1.tp', 1)
    ENDIF --carried gun tool changer  

  ENDIF --process 1 is a spot welder

END loadspot1_pg
-----------------------------------------------------------------------------
ROUTINE loadspot2_pg
-- PURPOSE: load spot2 macros
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  IF (numwldctrl = 2) THEN --Process 2 is a spotwelder

    Load_File('FRS:','tmsproc2.tp',1)

    IF (wldapp[2].wld_wtreip = wizans_yes) THEN -- watersaver    
      SPRUNCMD ('COPY FRS:w2offmtr.tp FR:\w2offmtr.tp', gm_status)
        IF (gm_status <> 0) THEN
          POST_ERR(38000, 'Failed to copy W2OFFMTR.TP to FR', 0,0)
        ENDIF

      Load_File('FR:','w2offmtr.tp', 1)
    ENDIF -- watersaver

    IF (g_servog_opt = TRUE) THEN --servo gun
      Load_File('FRS:', 'clsgunp2.tp', 1)
      Load_File('FRS:', 'opengunp2.tp', 1)
    ENDIF --servo gun    

    IF ((spotapp_eq[1].spotgun[2].sp_srvogn = wizans_yes) OR (spotapp_eq[2].spotgun[1].sp_srvogn = wizans_yes)) THEN --application is a servo gun
      -- load TIP WEAR MACROS HERE
      Load_File('FRS:','TW_SETG2.TP',1)
    ENDIF -- application has servo gun
   
  ENDIF --process 2 is a spot welder

END loadspot2_pg
-----------------------------------------------------------------------------
ROUTINE spot_stytb
-- PURPOSE: setup spot style table
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  Set_S_sVar('$style_comnt[27]','Cap Change')
  Set_S_sVar('$style_name[27]', 'STYLE27') 
  Set_B_sVar('$style_enab[27]', TRUE)

  IF ((wld1_app = wld1app_cg) OR (wld1_app = wld1app_cgmh) OR (wld1_app = wld1app_snut) OR (wld2_app = wld2app_cgpg)) THEN --there is one carried gun
    Set_S_sVar('$style_comnt[28]','Auto Cap Changer')
    Set_S_sVar('$style_name[28]', 'STYLE28') 
    Set_B_sVar('$style_enab[28]', TRUE)
  ENDIF --application has a cap changer


  IF (wld1_app <> wld1app_snut) THEN --do not set for servo nut weld applications
    Set_S_sVar('$style_comnt[29]','Proc1TipMaint')
    Set_S_sVar('$style_name[29]', 'STYLE29') 
    Set_B_sVar('$style_enab[29]', TRUE)

    Set_S_sVar('$style_comnt[30]','Proc2TipMaint')
    Set_S_sVar('$style_name[30]','STYLE30')
    Set_B_sVar('$style_enab[30]', TRUE)
  ENDIF

END spot_stytb
-----------------------------------------------------------------------------
ROUTINE spot_macro
-- PURPOSE: setup spot macros
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  IF (g_servog_opt = TRUE) THEN --servo gun
    Setup_Macro(1, 'CLSGUNP1', 'CLSGUNP1', 6, di_clsgun1mc, FALSE)
    Setup_Macro(2, 'OPENGUNP1', 'OPENGUNP1', 6, di_opngun1mc, FALSE)
    Setup_Macro(50,  'RESET WS ' ,   'RST_WTR', 4, 3,FALSE)

    IF (bshop_proc2 = spotappl) THEN --process 2 is a spot weld app
      Setup_Macro(3, 'CLSGUNP2', 'CLSGUNP2', 6, di_clsgun2mc, FALSE)
      Setup_Macro(4, 'OPENGUNP2', 'OPENGUNP2', 6, di_opngun2mc, FALSE)
    ENDIF --process 2 is a spot weld app
  ENDIF  --servo gun

  prog_nam = 'cap_chng'
  SET_ATTR_PRG(prog_nam, AT_PROTECT, 1, prog_nam, gm_status)
  Load_File('FRS:','CAP_CHNG.TP',1)
  Setup_Macro(12, 'CAP CHANGE', 'CAP_CHNG',1,0, FALSE)
 
END spot_macro
-----------------------------------------------------------------------------
ROUTINE td_pg_mc_1
-- PURPOSE: load tip dress 1 programs and macros
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
VAR
prog_nam :  STRING[12]
srvotd:  BOOLEAN

BEGIN

  IF UNINIT(srvo_td_opt) THEN
    srvotd_optn  --servo tip dress option loaded
  ENDIF
  IF UNINIT(num_tipdrs) THEN
    num_tipdrs = 0
  ENDIF

  srvotd = FALSE

  IF (srvo_td_opt = TRUE) THEN -- servo tip dress software option is loaded

    sp_eqnum = 1       --initialize equipment setup for wizard to equipment 1
    sp_gnnum = 1       --initialize gun setup for wizard questions to gun 1	
    sp_eqgn_num = spttl_eq1gn  --initialize guns per equipment tracker

    FOR sp_eqnum = 1 TO sp_ttl_eq DO
      FOR sp_gnnum = 1 TO sp_eqgn_num DO    

        IF (spotapp_eq[sp_eqnum].spotgun[sp_gnnum].sp_srvo_td = wizans_yes) THEN --servo tipdress
          srvotd = TRUE
        ENDIF --servo tip dress
       ENDFOR
       IF (spttl_eq2gn = 2) THEN --reinitialize variables for equipment 2 gun setup
         sp_eqgn_num = sp_ttl_gn
       ENDIF
     ENDFOR

  ENDIF  --servo tip dresser option is loaded

  Load_File('FRS:','CUTRRST.TP',1)
  Load_File('FRS:','POSTDRES.TP',1)

  SPRUNCMD ('COPY FRS:CUTRLMG1.TP FR:\CUTRLMT.TP', gm_status)
    IF (gm_status <> 0) THEN
      POST_ERR(38000, 'Failed to copy CUTRLMT.TP to FR', 0,0)
    ENDIF
  Load_File('FR:','CUTRLMT.TP',1)
  SPRUNCMD ('COPY FRS:CUTRPLG1.TP FR:\CUTRPLC.TP', gm_status)
    IF (gm_status <> 0) THEN
      POST_ERR(38000, 'Failed to copy CUTRPLC.TP to FR', 0,0)
    ENDIF
  Load_File('FR:','CUTRPLC.TP',1)
  Load_File('FRS:','TD_CHK.TP',1)
  Load_File('FRS:','reschke1.tp',0) 

  SPRUNCMD ('COPY FRS:TDG1PR1.TP FR:\TD_PROC1.TP', gm_status)
    IF (gm_status <> 0) THEN
      POST_ERR(38000, 'Failed to copy TD_PROC1.TP to FR', 0,0)
    ENDIF  
  Load_File('FR:','TD_PROC1.TP',0)

  IF ((spotapp_eq[1].spotgun[1].sp_srvo_td = wizans_yes) OR ((srvotd = TRUE) AND (num_tipdrs > 0))) THEN  -- load on servo tip dressers only

    SPRUNCMD ('COPY FRS:SDRSCAPS.TP FR:\DRESCAPS.TP', gm_status)
      IF (gm_status <> 0) THEN
        POST_ERR(38000, 'Failed to copy SDRSCAPS.TP to FR', 0,0)
      ENDIF
    Load_File('FR:','DRESCAPS.TP',1) 
    SPRUNCMD ('COPY FRS:SDRSPDE1.TP FR:\DRESPDE1.TP', gm_status)
      IF (gm_status <> 0) THEN
        POST_ERR(38000, 'Failed to copy SDRSPDE1.TP to FR', 0,0)
      ENDIF
    Load_File('FR:','DRESPDE1.TP',1)
    Load_File('FRS:','STD_1MTR.TP',1)

    SPRUNCMD ('COPY FRS:STDG1ON.TP FR:\TD_1_ON.TP', gm_status)
      IF (gm_status <> 0) THEN
        POST_ERR(38000, 'Failed to copy TD_1_ON.TP to FR', 0,0)
      ENDIF
    Load_File('FR:','TD_1_ON.TP',1)

    Setup_Macro(23, 'START TD MOTOR 1'  ,  'TD_1_ON' , 4, 11,FALSE)

  ENDIF --load on servo tip dresser

  IF (((spotapp_eq[1].spotgun[1].sp_srvo_td = wizans_no) OR (spotapp_eq[1].spotgun[1].sp_srvo_td = 0)) OR ((srvotd = FALSE) AND (num_tipdrs > 0))) THEN  -- load on electric tip dressers only

    prog_nam = 'drescaps'
    Load_File('FRS:','DRESCAPS.TP',1) 
    set_attr_prg ( prog_nam , AT_DEF_GROUP , 3 , prog_nam, gm_status)

    SPRUNCMD ('COPY FRS:TDGL1MTR.TP FR:\TD_1_MTR.TP', gm_status)
      IF (gm_status <> 0) THEN
        POST_ERR(38000, 'Failed to copy TD_1_MTR.TP to FR', 0,0)
      ENDIF
    Load_File('FR:','TD_1_MTR.TP',1)
    SPRUNCMD ('COPY FRS:TDG1ON.TP FR:\TD_1_ON.TP', gm_status)
      IF (gm_status <> 0) THEN
        POST_ERR(38000, 'Failed to copy TD_1_ON.TP to FR', 0,0)
      ENDIF
    Load_File('FR:','TD_1_ON.TP',1)

    Setup_Macro(23, 'START TD MOTOR 1'  ,  'TD_1_ON' , 4, 11,FALSE)

    prog_nam = 'drespde1'
    set_attr_prg ( prog_nam , AT_DEF_GROUP , 0 , prog_nam, gm_status)
    Load_File('FRS:','DRESPDE1.TP',1) 
    prog_nam = 'drespde1'
    set_attr_prg ( prog_nam , AT_DEF_GROUP , 0 , prog_nam, gm_status)

    prog_nam = 'drespde2'
    set_attr_prg ( prog_nam , AT_DEF_GROUP , 0 , prog_nam, gm_status)
    Load_File('FRS:','DRESPDE2.TP',1) 
    prog_nam = 'drespde2'
    set_attr_prg ( prog_nam , AT_DEF_GROUP , 0 , prog_nam, gm_status)
 
  ENDIF -- load on electric tip dressers only        

  -- Define Macro's
  Setup_Macro(26, 'CUTTER RESET'      ,  'CUTRRST' , 4, 14,FALSE)

  Load_File('FRS:','MENU110.VR',0)
  Load_File('FRS:','MENU114.VR',0)
  Load_File('FRS:','MENU205.VR',0) -- Dump protection
  Load_File('FRS:','MENU503.VR',1)

  IF (((numwldctrl = 1) AND ((wld1_app = wld1app_cg) OR (wld1_app = wld1app_cgmh))) OR ((numwldctrl = 2) AND (wld2_app = wld2app_cgpg))) THEN --carried app
    Load_File('FRS:','tdverify.tp',0)
    Load_File('FRS:','dvgtipck.tp',0)

    IF (UseToolChngr = TRUE) THEN  --carried app + tool changer
      Load_File('FRS:','TCPSTDRS.TP',1) 
    ELSE --no tool changer
      SPRUNCMD ('COPY FRS:CARSTY29.TP FR:\STYLE29.TP', gm_status) 
        IF (gm_status <> 0) THEN
          POST_ERR(38000, 'Failed to copy STYLE29.TP to FR', 0,0)
         ENDIF
      Load_File('FR:','STYLE29.TP',1)
    ENDIF --carried app + tool changer
         
    IF (g_servog_opt = TRUE) THEN --carried app + servo gun 
      Load_File('FRS:','DRESCPE2.TP',1) 
      prog_nam = 'drescpe2'
      set_attr_prg ( prog_nam , AT_DEF_GROUP , 3 , prog_nam, gm_status)
      Load_File('FRS:','DRESCPE2.TP',1)

      prog_nam = 'td_proc1'  --loaded at the beginning of the progra
      set_attr_prg ( prog_nam , AT_DEF_GROUP , 3 , prog_nam, gm_status)             
            
    ELSE --carried app + no servo gun  
      set_attr_prg ( prog_nam , AT_DEF_GROUP , 1 , prog_nam, gm_status)
      prog_nam = 'drescpe2'
      set_attr_prg ( prog_nam , AT_DEF_GROUP , 1 , prog_nam, gm_status)
      Load_File('FRS:','DRESCPE2.TP',1) 
      set_attr_prg ( prog_nam , AT_DEF_GROUP , 1 , prog_nam, gm_status)
 
      IF (UseToolChngr = TRUE) THEN --carried app + no servo gun + tool changer

      ELSE --carried app + no servo gun + no tool changer
        prog_nam = 'td_proc1'  --loaded at the beginning of routine
        set_attr_prg ( prog_nam , AT_DEF_GROUP , 1 , prog_nam, gm_status)
      ENDIF  --carried app + no servo gun + tool changer

    ENDIF --carried app + servo gun
      
  ELSE --gun isn't carried

    Load_File('FRS:','POST29.TP',1)
    SPRUNCMD ('COPY FRS:PEDGTDG1.TP FR:\PED_TDG1.TP', gm_status) 
    IF (gm_status <> 0) THEN
      POST_ERR(38000, 'Failed to copy PED_TDG1.TP to FR', 0,0)
    ENDIF
    Load_File('FR:','PED_TDG1.TP',1)
    SPRUNCMD ('COPY FRS:TDGP1CK.TP FR:\TD_PD_CK.TP', gm_status)
      IF (gm_status <> 0) THEN
        POST_ERR(38000, 'Failed to copy TD_PD_CK.TP to FR', 0,0)
      ENDIF
    Load_File('FR:','TD_PD_CK.TP',1)         
    SPRUNCMD ('COPY FRS:PEDSTY29.TP FR:\STYLE29.TP', gm_status)
      IF (gm_status <> 0) THEN
        POST_ERR(38000, 'Failed to copy STYLE29.TP to FR', 0,0)
      ENDIF
    Load_File('FR:','STYLE29.TP',1)
             
    IF (g_servog_opt = TRUE) THEN -- gun isn't carried + servo gun

      SPRUNCMD ('COPY FRS:TDDMPGCK.TP FR:\TDDMPCHK.TP', gm_status) 
        IF (gm_status <> 0) THEN
          POST_ERR(38000, 'Failed to copy TDDMPCHK.TP to FR', 0,0)
        ENDIF
      Load_File('FR:','TDDMPCHK.TP',1) 
       
      SPRUNCMD ('COPY FRS:ADVSTD_D.TP FR:\ADV_TD_D.TP', gm_status)
        IF (gm_status <> 0) THEN
          POST_ERR(38000, 'Failed to copy ADV_TD_D.TP to FR', 0,0)
        ENDIF
      Load_File('FR:','ADV_TD_D.TP',1)
      Setup_Macro(24, 'ADV TD DUMP '   ,  'ADV_TD_D', 1, 0,FALSE)

      SPRUNCMD ('COPY FRS:RETSTD_D.TP FR:\RET_TD_D.TP', gm_status)
        IF (gm_status <> 0) THEN
          POST_ERR(38000, 'Failed to copy RET_TD_D.TP to FR', 0,0)
        ENDIF       
       Load_File('FR:','RET_TD_D.TP',1)           
       Setup_Macro(25, 'RET TD DUMP '   ,   'RET_TD_D', 1, 0,FALSE)

     ELSE -- gun isn't carried + no servo gun

       SPRUNCMD ('COPY FRS:TDDMPACK.TP FR:\TDDMPCHK.TP', gm_status) 
         IF (gm_status <> 0) THEN
           POST_ERR(38000, 'Failed to copy TDDMPCHK.TP to FR', 0,0)
          ENDIF
       Load_File('FR:','TDDMPCHK.TP',1) 

       IF ((spotapp_eq[1].spotgun[1].ag_vlv = ag_eurovlv) OR (spotapp_eq[1].spotgun[1].ag_denspk = wizans_yes)) THEN --dense pack integrated
         SPRUNCMD ('COPY FRS:ADVATD_D.TP FR:\ADV_TD_D.TP', gm_status)
           IF (gm_status <> 0) THEN
             POST_ERR(38000, 'Failed to copy ADV_TD_D.TP to FR', 0,0)
           ENDIF
         SPRUNCMD ('COPY FRS:RETATD_D.TP FR:\RET_TD_D.TP', gm_status)
           IF (gm_status <> 0) THEN
             POST_ERR(38000, 'Failed to copy RET_TD_D.TP to FR', 0,0)
           ENDIF
         Load_File('FR:','ADV_TD_D.TP',1)
         Load_File('FR:','RET_TD_D.TP',1)
       ENDIF --dense pack integrated

     ENDIF --gun isn't carried + servo gun
         
  ENDIF --carried gun

END td_pg_mc_1
-----------------------------------------------------------------------------
ROUTINE td_pg_mc_2
-- PURPOSE: load tip dress 2 programs and macros
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
VAR
prog_nam :  STRING[12]
srvotd: BOOLEAN

BEGIN

  IF UNINIT(srvo_td_opt) THEN
    srvotd_optn  --servo tip dress option loaded
  ENDIF
  IF UNINIT(num_tipdrs) THEN
    num_tipdrs = 0
  ENDIF

  srvotd = FALSE

  IF (srvo_td_opt = TRUE) THEN -- servo tip dress software option is loaded

    sp_eqnum = 1       --initialize equipment setup for wizard to equipment 1
    sp_gnnum = 1       --initialize gun setup for wizard questions to gun 1	
    sp_eqgn_num = spttl_eq1gn  --initialize guns per equipment tracker

    FOR sp_eqnum = 1 TO sp_ttl_eq DO
      FOR sp_gnnum = 1 TO sp_eqgn_num DO    

        IF (spotapp_eq[sp_eqnum].spotgun[sp_gnnum].sp_srvo_td = wizans_yes) THEN --servo tipdress
          srvotd = TRUE
        ENDIF --servo tip dress
       ENDFOR
       IF (spttl_eq2gn = 2) THEN --reinitialize variables for equipment 2 gun setup
         sp_eqgn_num = sp_ttl_gn
       ENDIF
     ENDFOR

  ENDIF  --servo tip dresser option is loaded

  Load_File('FRS:','MENU111.VR',0)
  Load_File('FRS:','MENU115.VR',0)
  Load_File('FRS:','MENU205.VR',0) -- Dump protection
  Load_File('FRS:','MENU207.VR',1)  -- Load menu menu utilities prompt boxes for Cutter limits
 
  Load_File('FRS:','reschke2.tp',0)

  SPRUNCMD ('COPY FRS:ADVSTD_D.TP FR:\ADV_TD_D.TP', gm_status)
    IF (gm_status <> 0) THEN
      POST_ERR(38000, 'Failed to copy ADV_TD_D.TP to FR', 0,0)
    ENDIF
  Load_File('FR:','ADV_TD_D.TP',1)
  SPRUNCMD ('COPY FRS:RETSTD_D.TP FR:\RET_TD_D.TP', gm_status)
    IF (gm_status <> 0) THEN
      POST_ERR(38000, 'Failed to copy RET_TD_D.TP to FR', 0,0)
    ENDIF       
  Load_File('FR:','RET_TD_D.TP',1)

  SPRUNCMD ('COPY FRS:PEDGTDG2.TP FR:\PED_TDG2.TP', gm_status) 
    IF (gm_status <> 0) THEN
      POST_ERR(38000, 'Failed to copy PED_TDG2.TP to FR', 0,0)
    ENDIF
  Load_File('FR:','PED_TDG2.TP',1)
  
  SELECT (numwldctrl) OF --number of weld controllers

    CASE(1): --one weld controller

      IF ((srvotd = FALSE) AND (num_tipdrs > 1)) THEN --load tip dress programs for servo tool changers
        SPRUNCMD ('COPY FRS:TD_2_MT.tp FR:\TD_2_MTR.TP', gm_status)
          IF (gm_status <> 0) THEN
            POST_ERR(38000, 'Failed to copy TD_2_MTR.TP to FR', 0,0)
          ENDIF
        Load_File('FR:','TD_2_MTR.TP',1)

        SPRUNCMD ('COPY FRS:TDG2ON.TP FR:\TD_2_ON.TP', gm_status)
          IF (gm_status <> 0) THEN
            POST_ERR(38000, 'Failed to copy TD_2_ON.TP to FR', 0,0)
          ENDIF
        Load_File('FR:','TD_2_ON.TP',1)
        Setup_Macro(30, 'START TD MOTOR 2'  ,  'TD_2_ON' , 4, 16,FALSE)
      ENDIF --load tip dress programs for servo tool changers

      SELECT sp_ttl_eq OF --total equipment
        CASE(1): 	  --gun 2 is on equipment 1
          IF (spotapp_eq[1].spotgun[2].sp_td = wizans_yes) THEN
            IF ((spotapp_eq[1].spotgun[2].sp_srvo_td = wizans_no) OR (spotapp_eq[1].spotgun[2].sp_srvo_td = 0)) THEN --equipment 1 gun 2 is an electric dresser

              SPRUNCMD ('COPY FRS:TD_2_MT.tp FR:\TD_2_MTR.TP', gm_status)
                IF (gm_status <> 0) THEN
                  POST_ERR(38000, 'Failed to copy TD_2_MTR.TP to FR', 0,0)
                ENDIF
              Load_File('FR:','TD_2_MTR.TP',1)

              SPRUNCMD ('COPY FRS:TDG2ON.TP FR:\TD_2_ON.TP', gm_status)
                IF (gm_status <> 0) THEN
                  POST_ERR(38000, 'Failed to copy TD_2_ON.TP to FR', 0,0)
                ENDIF
              Load_File('FR:','TD_2_ON.TP',1)
              Setup_Macro(30, 'START TD MOTOR 2'  ,  'TD_2_ON' , 4, 16,FALSE)

              prog_nam = 'drespde1'
              set_attr_prg ( prog_nam , AT_DEF_GROUP , 0 , prog_nam, gm_status)
              Load_File('FRS:','DRESPDE1.TP',1) 

              prog_nam = 'drespde2'
              set_attr_prg ( prog_nam , AT_DEF_GROUP , 0 , prog_nam, gm_status)
              Load_File('FRS:','DRESPDE2.TP',1)  
       
            ENDIF --equipment 1, gun 2 is an electric dresser 
          ENDIF --equipment 1, gun 2 has a tip dresser

        CASE(2):	  --gun 2 is on equipment 2
          IF (spotapp_eq[2].spotgun[1].sp_td = wizans_yes) THEN
            IF ((spotapp_eq[2].spotgun[1].sp_srvo_td = wizans_no) OR (spotapp_eq[2].spotgun[1].sp_srvo_td = 0)) THEN --equipment 2 gun 1 is an electric dresser

              SPRUNCMD ('COPY FRS:TD_2_MT.tp FR:\TD_2_MTR.TP', gm_status)
                IF (gm_status <> 0) THEN
                  POST_ERR(38000, 'Failed to copy TD_2_MTR.TP to FR', 0,0)
                ENDIF
              Load_File('FR:','TD_2_MTR.TP',1)

              SPRUNCMD ('COPY FRS:TDG2ON.TP FR:\TD_2_ON.TP', gm_status)
                IF (gm_status <> 0) THEN
                  POST_ERR(38000, 'Failed to copy TD_2_ON.TP to FR', 0,0)
                ENDIF
              Load_File('FR:','TD_2_ON.TP',1)
              Setup_Macro(30, 'START TD MOTOR 2'  ,  'TD_2_ON' , 4, 16,FALSE)

              prog_nam = 'drespde1'
              set_attr_prg ( prog_nam , AT_DEF_GROUP , 0 , prog_nam, gm_status)
              Load_File('FRS:','DRESPDE1.TP',1) 

              prog_nam = 'drespde2'
              set_attr_prg ( prog_nam , AT_DEF_GROUP , 0 , prog_nam, gm_status)
              Load_File('FRS:','DRESPDE2.TP',1)  
       
            ENDIF --equipment 2, gun 1 is an electric dresser 
          ENDIF --equipment 2, gun 1 has a tip dresser
        ELSE:
      ENDSELECT --total equipment

    CASE(2): --two weld controllers

      SELECT sp_ttl_eq OF --total equipment
        CASE(1): 	  --gun 2 is on equipment 1
          IF (spotapp_eq[1].spotgun[2].sp_td = wizans_yes) THEN --equipment 1 gun 2 has a tip dresesr 
            IF ((spotapp_eq[1].spotgun[2].sp_srvo_td = wizans_no) OR (spotapp_eq[1].spotgun[2].sp_srvo_td = 0)) THEN --equipment 1, gun 2 has tip dresser and it is an electric dresser

            SPRUNCMD ('COPY FRS:TDGL2MTR.TP FR:\TD_2_MTR.TP', gm_status)
              IF (gm_status <> 0) THEN
                POST_ERR(38000, 'Failed to copy TD_2_MTR.TP to FR', 0,0)
              ENDIF
            Load_File('FR:','TD_2_MTR.TP',1)

            SPRUNCMD ('COPY FRS:TDG2ON.TP FR:\TD_2_ON.TP', gm_status)
              IF (gm_status <> 0) THEN
                POST_ERR(38000, 'Failed to copy TD_2_ON.TP to FR', 0,0)
              ENDIF
            Load_File('FR:','TD_2_ON.TP',1)
            Setup_Macro(30, 'START TD MOTOR 2'  ,  'TD_2_ON' , 4, 16,FALSE)

            prog_nam = 'drespde1'
            set_attr_prg ( prog_nam , AT_DEF_GROUP , 0 , prog_nam, gm_status)
            Load_File('FRS:','DRESPDE1.TP',1) 

            prog_nam = 'drespde2'
            set_attr_prg ( prog_nam , AT_DEF_GROUP , 0 , prog_nam, gm_status)
            Load_File('FRS:','DRESPDE2.TP',1)  
      
          ENDIF --only load on an electric dresser
        ENDIF --equipment 1 gun 2 has a tip dresser

       CASE(2): --two equipment
         IF (spotapp_eq[2].spotgun[1].sp_td = wizans_yes) THEN -- equipment 2, gun 1 has a tip dresser
           IF ((spotapp_eq[2].spotgun[1].sp_srvo_td = wizans_no) OR (spotapp_eq[2].spotgun[1].sp_srvo_td = 0)) THEN --equipment 2, gun 1 has tip dresser and it is an electric dresser

             SPRUNCMD ('COPY FRS:TDGL2MTR.TP FR:\TD_2_MTR.TP', gm_status)
               IF (gm_status <> 0) THEN
                 POST_ERR(38000, 'Failed to copy TD_2_MTR.TP to FR', 0,0)
               ENDIF
            Load_File('FR:','TD_2_MTR.TP',1)

             SPRUNCMD ('COPY FRS:TDG2ON.TP FR:\TD_2_ON.TP', gm_status)
               IF (gm_status <> 0) THEN
                 POST_ERR(38000, 'Failed to copy TD_2_ON.TP to FR', 0,0)
               ENDIF
             Load_File('FR:','TD_2_ON.TP',1)
             Setup_Macro(30, 'START TD MOTOR 2'  ,  'TD_2_ON' , 4, 16,FALSE)

             prog_nam = 'drespde1'
             set_attr_prg ( prog_nam , AT_DEF_GROUP , 0 , prog_nam, gm_status)
             Load_File('FRS:','DRESPDE1.TP',1) 

             prog_nam = 'drespde2'
             set_attr_prg ( prog_nam , AT_DEF_GROUP , 0 , prog_nam, gm_status)
             Load_File('FRS:','DRESPDE2.TP',1)   

           ENDIF --only load on an electric dresser
         ENDIF --equipment 2 gun 1 has a tip dresser
       ELSE:
     ENDSELECT --total equipment
         
    SPRUNCMD ('COPY FRS:PEDSTY30.TP FR:\STYLE30.TP', gm_status) 
      IF (gm_status <> 0) THEN
        POST_ERR(38000, 'Failed to copy STYLE30.TP to FR', 0,0)
      ENDIF
    Load_File('FR:','STYLE30.TP',1)
    Load_File('FRS:','POST30.TP',1)
    SPRUNCMD ('COPY FRS:TDGP1CK.TP FR:\TD_PD_CK.TP', gm_status)
      IF (gm_status <> 0) THEN
        POST_ERR(38000, 'Failed to copy TD_PD_CK.TP to FR', 0,0)
      ENDIF
    Load_File('FR:','TD_PD_CK.TP',1)

   ELSE:
  ENDSELECT --two weld controllers
  
  IF (((numwldctrl = 1) AND ((wld1_app = wld1app_cg) OR (wld1_app = wld1app_cgmh))) OR ((numwldctrl = 2) AND (wld2_app = wld2app_cgpg))) THEN --carried app

    Load_File('FRS:','POST29.TP',1)
    Load_File('FRS:','tdverify.tp',0)
    Load_File('FRS:','dvgtipck.tp',0)  
         
    IF (g_servog_opt = TRUE) THEN --carried app + servo gun 
      
      SPRUNCMD ('COPY FRS:TDDMPGCK.TP FR:\TDDMPCHK.TP', gm_status) 
        IF (gm_status <> 0) THEN
          POST_ERR(38000, 'Failed to copy TDDMPCHK.TP to FR', 0,0)
        ENDIF
      Load_File('FR:','TDDMPCHK.TP',1) 
                                         
    ELSE --carried app + no servo gun

      SPRUNCMD ('COPY FRS:TDDMPACK.TP FR:\TDDMPCHK.TP', gm_status)   
        IF (gm_status <> 0) THEN
          POST_ERR(38000, 'Failed to copy TDDMPCHK.TP to FR', 0,0)
        ENDIF
      Load_File('FR:','TDDMPCHK.TP',1)
                
    ENDIF --carried app + servo gun
      
  ELSE --gun isn't carried         
  ENDIF --carried gun

  IF (g_servog_opt = TRUE) THEN -- servo gun
    IF (((spotapp_eq[1].spotgun[2].sp_srvo_td = wizans_yes) OR (spotapp_eq[2].spotgun[1].sp_srvo_td = wizans_yes)) OR ((srvotd = TRUE) AND (num_tipdrs > 1))) THEN
      SPRUNCMD ('COPY FRS:SDRSCPE2.TP FR:\DRESCPE2.TP', gm_status)
        IF (gm_status <> 0) THEN
          POST_ERR(38000, 'Failed to copy SDRSCPE2.TP to FR', 0,0)
        ENDIF
      Load_File('FR:','DRESCPE2.TP',1) 
      SPRUNCMD ('COPY FRS:SDRSPDE2.TP FR:\DRESPDE2.TP', gm_status)
        IF (gm_status <> 0) THEN
          POST_ERR(38000, 'Failed to copy SDRSPDE2.TP to FR', 0,0)
        ENDIF
      Load_File('FR:','DRESPDE2.TP',1)
      Load_File('FRS:','STD_2MTR.TP',1)

      SPRUNCMD ('COPY FRS:STDG2ON.TP FR:\TD_2_ON.TP', gm_status)
        IF (gm_status <> 0) THEN
          POST_ERR(38000, 'Failed to copy TD_2_ON.TP to FR', 0,0)
        ENDIF
      Load_File('FR:','TD_2_ON.TP',1)
      Setup_Macro(30, 'START TD MOTOR 2'  ,  'TD_2_ON' , 4, 16,FALSE)

    ENDIF --servo tip dresser
  ENDIF --servo gun

END td_pg_mc_2
-----------------------------------------------------------------------------
ROUTINE td_pg_mc_3
-- PURPOSE: load tip dress 3 programs and macros
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
VAR
prog_nam :  STRING[12]
srvotd: BOOLEAN

BEGIN

  IF UNINIT(srvo_td_opt) THEN
    srvotd_optn  --servo tip dress option loaded
  ENDIF
  IF UNINIT(num_tipdrs) THEN
    num_tipdrs = 0
  ENDIF

  srvotd = FALSE

  IF (srvo_td_opt = TRUE) THEN -- servo tip dress software option is loaded

    sp_eqnum = 1       --initialize equipment setup for wizard to equipment 1
    sp_gnnum = 1       --initialize gun setup for wizard questions to gun 1	
    sp_eqgn_num = spttl_eq1gn  --initialize guns per equipment tracker

    FOR sp_eqnum = 1 TO sp_ttl_eq DO
      FOR sp_gnnum = 1 TO sp_eqgn_num DO    

        IF (spotapp_eq[sp_eqnum].spotgun[sp_gnnum].sp_srvo_td = wizans_yes) THEN --servo tipdress
          srvotd = TRUE
        ENDIF --servo tip dress
       ENDFOR
       IF (spttl_eq2gn = 2) THEN --reinitialize variables for equipment 2 gun setup
         sp_eqgn_num = sp_ttl_gn
       ENDIF
     ENDFOR

  ENDIF  --servo tip dresser option is loaded

  Load_File('FRS:','MENU208.VR',1)  -- Load menu menu utilities prompt boxes for Cutter limits

  SPRUNCMD ('COPY FRS:PEDGTDG3.TP FR:\PED_TDG3.TP', gm_status) 
    IF (gm_status <> 0) THEN
      POST_ERR(38000, 'Failed to copy PED_TDG3.TP to FR', 0,0)
    ENDIF
  Load_File('FR:','PED_TDG3.TP',1)

  IF ((srvotd = FALSE) AND (num_tipdrs > 2)) THEN -- on an electric dresser
    SPRUNCMD ('COPY FRS:TDGL3MTR.TP FR:\TD_3_MTR.TP', gm_status)
      IF (gm_status <> 0) THEN
        POST_ERR(38000, 'Failed to copy TD_3_MTR.TP to FR', 0,0)
      ENDIF
    Load_File('FR:','TD_3_MTR.TP',1)

    SPRUNCMD ('COPY FRS:TDG3ON.TP FR:\TD_3_ON.TP', gm_status)
      IF (gm_status <> 0) THEN
        POST_ERR(38000, 'Failed to copy TD_3_ON.TP to FR', 0,0)
      ENDIF
    Load_File('FR:','TD_3_ON.TP',1)
    Setup_Macro(58, 'START TD MOTOR 3'  ,  'TD_3_ON' , 4, 21,FALSE)
  ENDIF --electric dresser

  IF ((srvotd = TRUE) AND (num_tipdrs > 2)) THEN --servo dresser
    SPRUNCMD ('COPY FRS:STDG3ON.TP FR:\TD_3_ON.TP', gm_status)
      IF (gm_status <> 0) THEN
        POST_ERR(38000, 'Failed to copy TD_3_ON.TP to FR', 0,0)
      ENDIF
    Load_File('FR:','TD_3_ON.TP',1)
    Setup_Macro(58, 'START TD MOTOR 3'  ,  'TD_3_ON' , 4, 21,FALSE)
  ENDIF --servo dresser
 
END td_pg_mc_3
-----------------------------------------------------------------------------
ROUTINE td_pg_mc_4
-- PURPOSE: load tip dress 4 programs and macros
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
VAR
prog_nam :  STRING[12]
srvotd: BOOLEAN

BEGIN

  IF UNINIT(srvo_td_opt) THEN
    srvotd_optn  --servo tip dress option loaded
  ENDIF
  IF UNINIT(num_tipdrs) THEN
    num_tipdrs = 0
  ENDIF

  srvotd = FALSE

  IF (srvo_td_opt = TRUE) THEN -- servo tip dress software option is loaded

    sp_eqnum = 1       --initialize equipment setup for wizard to equipment 1
    sp_gnnum = 1       --initialize gun setup for wizard questions to gun 1	
    sp_eqgn_num = spttl_eq1gn  --initialize guns per equipment tracker

    FOR sp_eqnum = 1 TO sp_ttl_eq DO
      FOR sp_gnnum = 1 TO sp_eqgn_num DO    

        IF (spotapp_eq[sp_eqnum].spotgun[sp_gnnum].sp_srvo_td = wizans_yes) THEN --servo tipdress
          srvotd = TRUE
        ENDIF --servo tip dress
       ENDFOR
       IF (spttl_eq2gn = 2) THEN --reinitialize variables for equipment 2 gun setup
         sp_eqgn_num = sp_ttl_gn
       ENDIF
     ENDFOR

  ENDIF  --servo tip dresser option is loaded

  Load_File('FRS:','MENU209.VR',1)  -- Load menu menu utilities prompt boxes for Cutter limits

  SPRUNCMD ('COPY FRS:PEDGTDG4.TP FR:\PED_TDG4.TP', gm_status) 
    IF (gm_status <> 0) THEN
      POST_ERR(38000, 'Failed to copy PED_TDG4.TP to FR', 0,0)
    ENDIF
  Load_File('FR:','PED_TDG4.TP',1)
 
  IF ((srvotd = FALSE) AND (num_tipdrs > 3)) THEN --electric dresser
    SPRUNCMD ('COPY FRS:TDGL4MTR.TP FR:\TD_4_MTR.TP', gm_status)
      IF (gm_status <> 0) THEN
        POST_ERR(38000, 'Failed to copy TD_4_MTR.TP to FR', 0,0)
      ENDIF
    Load_File('FR:','TD_4_MTR.TP',1)

    SPRUNCMD ('COPY FRS:TDG4ON.TP FR:\TD_4_ON.TP', gm_status)
      IF (gm_status <> 0) THEN
        POST_ERR(38000, 'Failed to copy TD_4_ON.TP to FR', 0,0)
      ENDIF
    Load_File('FR:','TD_4_ON.TP',1)
    Setup_Macro(65, 'START TD MOTOR 4'  ,  'TD_4_ON' , 4, 26,FALSE)
  ENDIF --electric dresser

  IF ((srvotd = TRUE) AND (num_tipdrs > 3)) THEN --servo dresser
    SPRUNCMD ('COPY FRS:STDG4ON.TP FR:\TD_4_ON.TP', gm_status)
      IF (gm_status <> 0) THEN
        POST_ERR(38000, 'Failed to copy TD_4_ON.TP to FR', 0,0)
      ENDIF
    Load_File('FR:','TD_4_ON.TP',1)
    Setup_Macro(65, 'START TD MOTOR 4'  ,  'TD_4_ON' , 4, 26,FALSE)      
  ENDIF --servo dresser

END td_pg_mc_4
-----------------------------------------------------------------------------
ROUTINE td_prg_mcro
-- PURPOSE: load tip dress programs and setup macros
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
VAR
tip_dress:  BOOLEAN
prog_nam :  STRING[12]
srvotipdrs: BOOLEAN

BEGIN

  tip_dress = FALSE --reset for wizard setup
  srvotipdrs = FALSE --reset for wizard setup

  sp_eqnum = 1       --initialize equipment setup for wizard to equipment 1
  sp_gnnum = 1       --initialize gun setup for wizard questions to gun 1	
  sp_eqgn_num = spttl_eq1gn  --initialize guns per equipment tracker

  FOR sp_eqnum = 1 TO sp_ttl_eq DO
    FOR sp_gnnum = 1 TO sp_eqgn_num DO    
      IF (spotapp_eq[sp_eqnum].spotgun[sp_gnnum].sp_td = wizans_yes) THEN --tipdress
        tip_dress = TRUE
      ENDIF --tip dress  
      IF (spotapp_eq[sp_eqnum].spotgun[sp_gnnum].sp_srvo_td = wizans_yes) THEN --servo tip dress
        srvotipdrs = TRUE
      ENDIF --servo tip dress          
    ENDFOR   
    IF (spttl_eq2gn = 2) THEN --reinitialize variables for equipment 2 gun setup
      sp_eqgn_num = sp_ttl_gn
    ENDIF
  ENDFOR 

  IF (tip_dress = TRUE) THEN  --tip dress

    Load_File('FRS:','MENU206.VR',1) -- Load menu menu utilities prompt boxes for Cutter limits
    Load_File('FRS:','cutrrplg1.tp',1)
 
    --equipment 1 gun 1 has a tip dresser
    IF (spotapp_eq[1].spotgun[1].sp_td = wizans_yes) THEN --equipment 1, gun 1 has a tip dresser
      td_pg_mc_1
    ENDIF --equipment 1, gun 1 has a tip dresser

    IF ((spotapp_eq[1].spotgun[2].sp_td = wizans_yes) OR (spotapp_eq[2].spotgun[1].sp_td = wizans_yes)) THEN --tip dresser 2
      td_pg_mc_2
    ENDIF

    --IF ((spotapp_eq[2].spotgun[1].sp_td = wizans_yes) AND (spttl_eq1gn = 2)) THEN --tip dresser 3
      --td_pg_mc_3
    --ENDIF --tip dresser 3

    --IF (spotapp_eq[2].spotgun[2].sp_td = wizans_yes) THEN --tip dresser 4
      --td_pg_mc_4
    --ENDIF --tip dresser 4

    IF (g_servog_opt = TRUE) THEN -- servo gun 
      IF ((wld1_app <> wld1app_cg) AND (UseToolChngr = TRUE)) THEN --carried gun tool changer 

        IF (num_swg_guns > 1) THEN
          Load_File('frs:', 'tipdress2.tp', 0)
          Load_File('frs:', 'homefrtd2.tp', 0)
          Load_File('frs:', 'hometotd2.tp', 0)

          SPRUNCMD ('COPY FRS:TC_TDPR2.TP FR:\TD_PROC2.TP', gm_status)  
          IF (gm_status <> 0) THEN
            POST_ERR(38000, 'Failed to copy TD_PROC2.TP to FR', 0,0)
          ENDIF
          prog_nam = 'td_proc2'
          set_attr_prg ( prog_nam , AT_DEF_GROUP , 3 , prog_nam, gm_status)
          Load_File('FR:','TD_PROC2.TP',0)  
        ENDIF

        IF (num_swg_guns > 2) THEN
          Load_File('frs:', 'tipdress3.tp', 0)
          Load_File('frs:', 'homefrtd3.tp', 0)
          Load_File('frs:', 'hometotd3.tp', 0)

          SPRUNCMD ('COPY FRS:TC_TDPR3.TP FR:\TD_PROC3.TP', gm_status) 
            IF (gm_status <> 0) THEN
              POST_ERR(38000, 'Failed to copy TD_PROC3.TP to FR', 0,0)
            ENDIF 
          prog_nam = 'td_proc3'
          set_attr_prg ( prog_nam , AT_DEF_GROUP , 3 , prog_nam, gm_status)
          Load_File('FR:','TD_PROC3.TP',0) 
        ENDIF

        IF (num_swg_guns > 3) THEN
          Load_File('frs:', 'tipdress4.tp', 0)
          Load_File('frs:', 'homefrtd4.tp', 0)
          Load_File('frs:', 'hometotd4.tp', 0)

          SPRUNCMD ('COPY FRS:TC_TDPR4.TP FR:\TD_PROC4.TP', gm_status) 
            IF (gm_status <> 0) THEN
              POST_ERR(38000, 'Failed to copy TD_PROC4.TP to FR', 0,0)
            ENDIF
          prog_nam = 'td_proc4'
          set_attr_prg ( prog_nam , AT_DEF_GROUP , 3 , prog_nam, gm_status)
          Load_File('FR:','TD_PROC4.TP',0)
        ENDIF

      ENDIF--carried gun tool changer
    ENDIF --servo gun
    
    IF (UseToolChngr = TRUE) THEN -- tool changer

      SPRUNCMD ('COPY FRS:TCSTY29.TP FR:\STYLE29.TP', gm_status) 
      IF (gm_status <> 0) THEN
        POST_ERR(38000, 'Failed to copy STYLE29.TP to FR', 0,0)
      ENDIF
      Load_File('FR:','STYLE29.TP',1)

    ELSE --no tool changer

    ENDIF -- tool changer

    IF (srvotipdrs = TRUE) THEN --servo dresser
     
      prog_nam = 'tcdrescp'
      set_attr_prg ( prog_nam , AT_DEF_GROUP , 3 , prog_nam, gm_status)
      SPRUNCMD ('COPY FRS:TCSDRESCP.TP FR:\TCDRESCP.TP', gm_status)
        IF (gm_status <> 0) THEN
          POST_ERR(38000, 'Failed to copy TCDRESCP.TP to FR', 0,0)
        ENDIF 
      Load_File('FR:','TCDRESCP.TP',1)

    ELSE --electric dresser

      prog_nam = 'tcdrescp'
      set_attr_prg ( prog_nam , AT_DEF_GROUP , 3 , prog_nam, gm_status)
      Load_File('FRS:','TCDRESCP.TP',1)

      SPRUNCMD ('COPY FRS:TDG1OFF.TP FR:\TD_OFF.TP', gm_status)
        IF (gm_status <> 0) THEN
          POST_ERR(38000, 'Failed to copy TD_OFF.TP to FR', 0,0)
        ENDIF
      Load_File('FR:','TD_OFF.TP',1)   
      Setup_Macro(22, 'STOP TD MOTOR(S)'   ,  'TD_OFF', 4, 10,FALSE) 
 
    ENDIF  --servo dresser

  ENDIF --tip dress
        
END td_prg_mcro
-----------------------------------------------------------------------------
ROUTINE loadspotmenu
-- PURPOSE: load spot menus
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
VAR
srvotd_app: BOOLEAN

BEGIN

  SPRUNCMD ('frclrpr', gm_status)

  srvotd_app = FALSE --reset servo tip dress app

  sp_eqnum = 1       --initialize equipment setup for wizard to equipment 1
  sp_gnnum = 1       --initialize gun setup for wizard questions to gun 1	
  sp_eqgn_num = spttl_eq1gn  --initialize guns per equipment tracker

  FOR sp_eqnum = 1 TO sp_ttl_eq DO
    FOR sp_gnnum = 1 TO sp_eqgn_num DO

        IF (spotapp_eq[sp_eqnum].spotgun[sp_gnnum].sp_srvo_td = wizans_yes) THEN --servo tip dress is used
          srvotd_app = TRUE
        ENDIF

    ENDFOR
    IF (spttl_eq2gn = 2) THEN --reinitialize variables for equipment 2 gun setup
      sp_eqgn_num = sp_ttl_gn
    ENDIF
  ENDFOR

  IF (srvotd_app = FALSE) THEN --hide tip dress menu
    SPRUNCMD ('COPY FRS:sggmdres.as FRSU:sgtpdres.as',gm_status)
      IF (gm_status <> 0) THEN
        POST_ERR(38000, 'Failed to copy SGTPDRES.AS to FRSU', 0,0)
      ENDIF
  ELSE  --don't hide tip dress menu
    SPRUNCMD ('COPY FRS:gmtpdres.as FRSU:sgtpdres.as',gm_status)
      IF (gm_status <> 0) THEN
        POST_ERR(38000, 'Failed to copy SGTPDRES.AS to FRSU', 0,0)
      ENDIF
  ENDIF

END loadspotmenu
-----------------------------------------------------------------------------
ROUTINE set_spot_pg
-- PURPOSE: load and configure spot welding application programs
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

IF (numwldctrl <> 0) THEN --spot welding application

  Current_Ver = Version -- Set the version for reference

  IF UNINIT(ErrsInShop.ErrorsPrgrms) THEN
    ErrsInShop.ErrorsPrgrms = 0
  ENDIF
  IF UNINIT(SpotPG_Setup) OR (Reset_Cell) THEN
    SpotPG_Setup = FALSE
  ENDIF

  StrtinErs = ErrsInShop.ErrorsPrgrms -- grab current error count
  ClrUtltyErrs -- Clear all error in utility program to be used when done

  WriteLog('  Starting the Spot Program GMSPOTPG', FALSE)

  IF (SpotPG_Setup = TRUE) THEN -- setup has already been setup
    WriteLog('  Spot Programs Already Setup', FALSE)
    IF ExecSetupAgn('Spot Progs') THEN -- ask user if they want to setup again
      SpotPG_Setup = FALSE
    ELSE
      WriteLog('  Spot Programs already Complete', FALSE)
      WriteLog('  GMSPOTPG Setup NOT executing again', FALSE)
      RETURN
    ENDIF
  ENDIF

  -- Insert routines created call here
  initSpotprgs
  load_spot_pg
  loadspot1_pg
  loadspot2_pg
  spot_stytb
  spot_macro
  td_prg_mcro
  loadspotmenu
  

  ErrsInShop.ErrorsPrgrms =  ErrsInShop.ErrorsPrgrms + (AddUtltyErrs) -- Get all errors in utility program to be added to any program errors
  IF (ErrsInShop.ErrorsPrgrms -StrtinErs) > 0 THEN -- check for I/O setup errors
    WriteLog('  Spot Program Setup GMSPOTPG had ' + int2str((ErrsInShop.ErrorsPrgrms- StrtinErs))+' while executing', TRUE)
  ELSE
    WriteLog('  Spot Program Setup completed', FALSE)
    SpotPG_Setup = TRUE
  ENDIF

  WriteLog('', FALSE)

ENDIF --numwldctrl

END set_spot_pg
-----------------------------------------------------------------------------
BEGIN

END gmspotpg
