--
--    This material is the joint property of GMFanuc Robotics Corporation  and
--    FANUC  LTD  Japan,  and  must  be  returned  to  either GMFanuc Robotics
--    Corporation or FANUC LTD Japan immediately upon request.  This  material
--    and   the  information  illustrated  or  contained  herein  may  not  be
--    reproduced, copied, used, or transmitted in whole or in part in any  way
--    without the prior written consent of both GMFanuc Robotics and FANUC.
--
--             All Rights Reserved
--             Copyright (C)   1992
--             GMFanuc Robotics Corporation
--             FANUC LTD Japan
--
--             Karel is a registered trademark of
--             GMFanuc Robotics Corporation
--    +
--    Program:
--
--    Description: .
--
--    GMPRESRG -- program for setting registers and position registers comments and default values
-------------------------------------------------------------------------------------------------------------
--    SETUP ROUTINES INCLUDED
-------------------------------------------------------------------------------------------------------------
--    Other Application files:
--    GMPRESIO -- program to setup and comment the Cell I/O GMCELLIO is also required to setup workcell interface
--    GMPRESPG -- program for loading all unique program that are specific to Cell applications
--    GMPRESVR -- program for setting variables specific to Cell application
-------------------------------------------------------------------------------
--    Language: KAREL
--
--
--    Modification history:
--    16/07/01  R Kosaski updates to prepare for release
--    16/08/02  R Kosaski added the comment on data register 215 to "PPX Active"
--    11-19-16  RK  data register was EarlyVisionEnabled TOO LONG
--    06-30-17  RK  data registers and String registers updated per Lloyd Steed

--    2018-04-04 schoensm V8.33P05 updates 
--    2018-06-26 baker    removed initpressdcs, initpressiic, init_mtrem
-----------------------------------------------------------------------------
PROGRAM GMPRESRG
-----------------------------------------------------------------------------
%COMMENT = 'Press Regs V4.1'
%ALPHABETIZE
%NOLOCKGROUP
%INVISIBLE
%RWACCESS

%ENVIRONMENT REGOPE -- required for register builtins
%ENVIRONMENT proddef -- Required for the $FEATURE.$MOD[i] variable

%INCLUDE KLEVCCDF  -- Required for the TPERROR write command for the constants
CONST

Version = '2018-06-26'
%INCLUDE gmcnstnt -- used for all GM wizard constants

VAR

  Current_Ver  IN SHADOW :STRING[32] -- Set equal to Version constant in initialization routine
  StrtinErs  : INTEGER  -- How many errors I/O error counter had when the program started

  gm_status    : INTEGER
  i       : INTEGER

PresRegsDone IN SHADOW FROM GMPRESRG: BOOLEAN -- if the registers has ran completly
cur_styl_len  : INTEGER -- Used for how large Style table is when it is read
entry : INTEGER        -- used for the GET_VAR command

  -- From other programs
-- Variables declared for All shops
%INCLUDE gmcfgcel  -- GM wizard variables for workcell variables that are common across all shops
%INCLUDE gmcfgerr  -- Required for the configuration for GM Error counting and logging

-- Variables declares for Shop specifics
%INCLUDE gmcfgprs  -- GM wizard variables for press Applications
%INCLUDE gmcfgtlc  -- GM wizard variables for tool changer Applications
%INCLUDE gmcfgvis  -- GM wizard variables for vision Applications

%INCLUDE gmrdutil -- has all GM common wizard routine in it

ROUTINE writeLog(p_message: STRING; isError: BOOLEAN) FROM GMWIZLOG
------------------------------------------------------------------------------

-----------------------------------------------------------------------------
ROUTINE ChkRegInit
-- PURPOSE:
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

IF UNINIT(CellCommType) THEN
  CellCommType = Ethernet
ENDIF

  RETURN
END ChkRegInit
-------------------------------------------------------------------
ROUTINE set_prs_reg						 --
-- This routine's function is to set all Cell register comments.--
-------------------------------------------------------------------
BEGIN

ChkRegInit
  -- PR Comments
  -- Comment_Reg(RegType,Reg#,Comment)
   WriteLog('   Press set_prs_reg Routine Started', FALSE)

  Comment_Reg(2,11,'PICK LIFT')
  Comment_Reg(2,12,'PICK NEW')
  Comment_Reg(2,13,'PICK PEEL')
  Comment_Reg(2,14,'PICK APPROACH')
  Comment_Reg(2,15,'PICK DEPART')
  Comment_Reg(2,16,'MULTI-STK OFFSET')
  Comment_Reg(2,17,'PICK POS OFFSET')
  Comment_Reg(2,18,'Front CS UFrame')
  Comment_Reg(2,19,'Rear CS UFrame')
  Comment_Reg(2,20,'RESERVED')
  Comment_Reg(2,21,'RESERVED')
  Comment_Reg(2,22,'PICK1 VIS OFFSET')
  Comment_Reg(2,23,'RESERVED')
  Comment_Reg(2,24,'RESERVED')
  Comment_Reg(2,25,'PICK2 VIS OFFSET')
  Comment_Reg(2,26,'RESERVED')
  Comment_Reg(2,27,'RESERVED')
  Comment_Reg(2,28,'PICK3 VIS OFFSET')
  Comment_Reg(2,29,'RESERVED')
  Comment_Reg(2,30,'RESERVED')
  Comment_Reg(2,31,'PICK4 VIS OFFSET')
  Comment_Reg(2,32,'RESERVED')
  Comment_Reg(2,33,'RESERVED')
  Comment_Reg(2,34,'DROP1 VIS OFFSET')
  Comment_Reg(2,35,'RESERVED')
  Comment_Reg(2,36,'RESERVED')
  Comment_Reg(2,37,'DROP2 VIS OFFSET')
  Comment_Reg(2,38,'RESERVED')
  Comment_Reg(2,39,'RESERVED')
  Comment_Reg(2,40,'DROP3 VIS OFFSET')
  Comment_Reg(2,41,'RESERVED')
  Comment_Reg(2,42,'RESERVED')
  Comment_Reg(2,43,'DROP4 VIS OFFSET')
  Comment_Reg(2,44,'RESERVED')
  Comment_Reg(2,45,'RESERVED')
  Comment_Reg(2,46,'RESERVED')
  Comment_Reg(2,47,'RESERVED')
  Comment_Reg(2,48,'RESERVED')
  Comment_Reg(2,49,'DROP CONV OFFSET')
  Comment_Reg(2,50,'RESERVED')
  Comment_Reg(2,51,'RESERVED')
  Comment_Reg(2,52,'RESERVED')
  Comment_Reg(2,53,'SLOT OFFSET')
  Comment_Reg(2,54,'RESERVED')
  Comment_Reg(2,55,'RESERVED')
  Comment_Reg(2,56,'Vision Cal Orign')
  Comment_Reg(2,57,'Vision Cal X Axs')
  Comment_Reg(2,58,'Vision Cal Y Pin')
  Comment_Reg(2,59,'RESERVED')
  Comment_Reg(2,60,'RESERVED')
  Comment_Reg(2,61,'PICK FRAME ')
  Comment_Reg(2,62,'DRP1 FRM RK TYP1')
  Comment_Reg(2,63,'DRP2 FRM RK TYP1')
  Comment_Reg(2,64,'DRP1 FRM RK TYP2')
  Comment_Reg(2,65,'DRP2 FRM RK TYP2')
  Comment_Reg(2,66,'DRP1 FRM RK TYP3')
  Comment_Reg(2,67,'DRP2 FRM RK TYP3')
  Comment_Reg(2,68,'DRP1 FRM RK TYP4')
  Comment_Reg(2,69,'DRP2 FRM RK TYP4')
  Comment_Reg(2,70,'DRP1 FRM RK TYP5')
  Comment_Reg(2,71,'DRP2 FRM RK TYP5')
  Comment_Reg(2,72,'DRP1 FRM RK TYP6')
  Comment_Reg(2,73,'DRP2 FRM RK TYP6')
  Comment_Reg(2,74,'DRP1 FRM RK TYP7')
  Comment_Reg(2,75,'DRP2 FRM RK TYP7')
  Comment_Reg(2,76,'DRP1 FRM RK TYP8')
  Comment_Reg(2,77,'DRP2 FRM RK TYP8')

  Comment_Reg(2,100,'Nil Pos')

   -- Register Comments
  Comment_Reg(1,1,'NUMBER OF CYCLES')
  Comment_Reg(1,2,'LAST MOTION TIME')
  Comment_Reg(1,3,'LAST MOTION SPM ')
  Comment_Reg(1,4,'LAST CYCLE TIME')
  Comment_Reg(1,5,'LAST CYCLE SPM')
  Comment_Reg(1,6,'AVG CYCLE TIME')
  Comment_Reg(1,7,'AVG CYCLE SPM')
  Comment_Reg(1,8,'PRT RATE OPTIONS')

  Comment_Reg(1,10,'VISION TIME 1')
  Comment_Reg(1,11,'VISION TIME 2')

  Comment_Reg(1,13,'CurrentOverride')
  Comment_Reg(1,14,'CG SENSITIVITY')

  Comment_Reg(1,17,'PICK DELAY Sec')
  Comment_Reg(1,18,'PICK TIME_BF Sec')
  Comment_Reg(1,19,'DROP TIME_BF Sec')
  Comment_Reg(1,20,'BLOWOFF TIME Sec')

  Comment_Reg(1,25,'TOOL PRES NEST1')
  Comment_Reg(1,26,'TOOL PRES NEST2')
  Comment_Reg(1,27,'TOOL TYPE NEST1')
  Comment_Reg(1,28,'TOOL TYPE NEST2')
  Comment_Reg(1,29,'NEW RCK CHK CODE')
  Comment_Reg(1,30,'RCK CLR CHK CODE')
  Comment_Reg(1,31,'EARLY VIS ENABLD')
  Comment_Reg(1,32,'RUN EARLY VISION')
  Comment_Reg(1,33,'VISN RETRY COUNT')
  Comment_Reg(1,34,'VIS OFFST STATUS')
  Comment_Reg(1,35,'RUN_FIND STATUS')
  SET_INT_REG(35,0,gm_status)
  Comment_Reg(1,36,'AUTO VALVE NUM')
  Comment_Reg(1,37,'AV PRV/NEXT PRS')
  Comment_Reg(1,38,'AV-ON / RET-OFF')
  Comment_Reg(1,39,'OFFST TOL LIN-mm')
  Comment_Reg(1,40,'OFFST TOL ANG-dg')
  Comment_Reg(1,41,'NEW RACK ON 1')
  Comment_Reg(1,42,'NEW RACK ON 2')
  Comment_Reg(1,43,'OFFSET CODE')
  Comment_Reg(1,44,'CAP OFFSET VALUE')
  Comment_Reg(1,45,'OFFSET CHECK OK')
  Comment_Reg(1,46,'MAX CUML INDX mm')
  Comment_Reg(1,47,'MAJR RCK INDX mm')
  Comment_Reg(1,48,'MINR RCK INDX mm')
  Comment_Reg(1,49,'SIDE OPTION')
  Comment_Reg(1,50,'CALC OFFSET X')
  Comment_Reg(1,51,'CALC OFFSET Y')
  Comment_Reg(1,52,'RACK CHECK OK')
  Comment_Reg(1,53,'RECIPE RACK TYPE')
  Comment_Reg(1,54,'CUR RACK TYPE')
  Comment_Reg(1,55,'NEW RACK1 OK')
  Comment_Reg(1,56,'NEW RACK2 OK')
  Comment_Reg(1,57,'MAX GROUPS')
  Comment_Reg(1,58,'CURRENT GROUP')
  Comment_Reg(1,59,'MAX PRTS PER GRP')
  Comment_Reg(1,60,'PRTS IN CUR GRP')
  Comment_Reg(1,61,'VALID GROUP')
  Comment_Reg(1,62,'DUAL ROBOTS')

--  Comment_Reg(1,69,  'FIRST CYCLE')  --V750P23 jja
--  Comment_Reg(1,70,  'MAX PEEL SLID mm')
--  Comment_Reg(1,71,  'USE VALVE 1')
--  Comment_Reg(1,72,  'USE VALVE 2')
--  Comment_Reg(1,73,  'USE VALVE 3')
--  Comment_Reg(1,74,  'USE VALVE 4')
--  Comment_Reg(1,75,  'USE VALVE 5')
--  Comment_Reg(1,76,  'USE VALVE 6')
--  Comment_Reg(1,77,  'FANNER ACT DB mm')
--  Comment_Reg(1,78,  'FANNING METHOD')

  Comment_Reg(1,79,'MAX LIFT DIST mm')
  Comment_Reg(1,80,'MAX PEEL ROT deg')
  Comment_Reg(1,81,'AUTO RESET OFFST')
  Comment_Reg(1,82,'FINE LIN STEP mm')
  Comment_Reg(1,83,'FINE ROT STP deg')
  Comment_Reg(1,84,'CRSE LIN STEP mm')
  Comment_Reg(1,85,'CRSE ROT STP deg')
  Comment_Reg(1,86,'CAP OFFSET X')
  Comment_Reg(1,87,'CAP OFFSET Y')
  Comment_Reg(1,88,'CAP OFFSET R')
  Comment_Reg(1,89,'USE A7 OFFSET')
  Comment_Reg(1,90,'ACTIVE CAMERA')
  Comment_Reg(1,91,'ACTIVE CAM POS')
  Comment_Reg(1,92,'PICK1 OFFSET X')
  Comment_Reg(1,93,'PICK1 OFFSET Y')
  Comment_Reg(1,94,'PICK1 OFFSET R')
  Comment_Reg(1,95,'PICK2 OFFSET X')
  Comment_Reg(1,96,'PICK2 OFFSET Y')
  Comment_Reg(1,97,'PICK2 OFFSET R')
  Comment_Reg(1,98,'CYC SNC LST SRCH')
  Comment_Reg(1,99,'MAX CYC BTWN SRH')
  Comment_Reg(1,100,'STYLE NUMBER')
  Comment_Reg(1,101,'EARLY PICK OFFST')
  Comment_Reg(1,102,'STACK DROP RCVRY')
  Comment_Reg(1,103,'NEW SEARCH')
  SET_INT_REG(103,0,gm_status)
  Comment_Reg(1,104,'STN PREV CYCLE')
  Comment_Reg(1,105,'PICK LIFT mm')
  Comment_Reg(1,106,'SHEET THCKNSS mm')
  Comment_Reg(1,107,'SEARCH DEPTH mm')
  Comment_Reg(1,108,'COMPLNCE DIST mm')
  Comment_Reg(1,109,'PICK Z VALUE')  -- CAP POS VALUE
  Comment_Reg(1,110,'PEEL RX VALUE')-- PEEL X SLIDE mm
  Comment_Reg(1,111,'PEEL RY VALUE') -- PEEL Y SLIDE mm
  Comment_Reg(1,112,'PEEL X ROT deg')
  Comment_Reg(1,113,'PEEL Y ROT deg')
  Comment_Reg(1,114,'PEEL LIFT mm')
  Comment_Reg(1,115,'STACK X-OFFST mm')
  Comment_Reg(1,116,'STACK Y-OFFST mm')
  Comment_Reg(1,117,'GRP PREV CYCLE')

  Comment_Reg(1,118,'DNET Node Status')
  Comment_Reg(1,119,'DNET TIMEOUT')

  Comment_Reg(1,120,'CUR DROP SIDE')
  Comment_Reg(1,121,'CUR PICK SIDE')
  Comment_Reg(1,122,'RACK 1 IS FULL')
  Comment_Reg(1,123,'RACK 2 IS FULL')
  Comment_Reg(1,124,'ACTV VIS PROCESS')
  Comment_Reg(1,125,'MULTI-POS CONVYR')
  Comment_Reg(1,126,'RACK 1 CLEAR OK')
  Comment_Reg(1,127,'RACK 2 CLEAR OK')
  Comment_Reg(1,128,'CUR RCK GRP FULL')
  Comment_Reg(1,129,'DUNNAGE FLIP') -- AUX VALVE ACTION
  Comment_Reg(1,130,'NODE 55 ENABLED')
  Comment_Reg(1,131,'TL CHK DISABLED')
  Comment_Reg(1,132,'TL TYP LAST PICK')
  Comment_Reg(1,133,'TL CHK COMPLETE')
  Comment_Reg(1,134,'CONVYR HEIGHT')
  Comment_Reg(1,135,'NEXT TOOL TYPE')
  Comment_Reg(1,136,'FLT RESP REMOTE')
  Comment_Reg(1,137,'TL DROP OR PICK')  -- TOOL CHK OPTION
  Comment_Reg(1,138,'TL NUM/TYPE TEMP')
  Comment_Reg(1,139,'ROBOT NUMBER')
  Comment_Reg(1,140,'LINE NUMBER')
  Comment_Reg(1,141,'AUX POWER OPTION')
  Comment_Reg(1,142,'VAC GRPR OR BOTH')
  Comment_Reg(1,143,'PART PRESENT CH1')
  Comment_Reg(1,144,'PART PRESENT CH2')
  Comment_Reg(1,145,'PM1 HW OPTION')
  Comment_Reg(1,146,'PRT PRESNT DELAY')
  Comment_Reg(1,147,'PRT PRESENT OK')
  Comment_Reg(1,148,'BYPASS SIDE1')
  Comment_Reg(1,149,'BYPASS SIDE2')
  Comment_Reg(1,150,'VacType')   -- RK update 11-21-16
  Comment_Reg(1,151,'VISION CONT OK')
  Comment_Reg(1,152,'GO[]PATH SEGMENT')
  Comment_Reg(1,153,'LAST PATH SEG')
  Comment_Reg(1,154,'MH FLT PRT DROP')
  Comment_Reg(1,155,'VAC TYPE') -- Was ???

  Comment_Reg(1,158,'PRE-POST CLR CHK')
  Comment_Reg(1,159,'REQ EARLY FLAG')
  Comment_Reg(1,160,'TL PLT FND OPTN')
  Comment_Reg(1,161,'PART PRESENT CHK')
  Comment_Reg(1,162,'FAULT RESPONSE')
  Comment_Reg(1,163,'FAULT OR ALERT')
  Comment_Reg(1,164,'FAULT MSG CODE')
  Comment_Reg(1,165,'IGNORE PP CHK')
  Comment_Reg(1,166,'TEMP TOOL NUMBER')
  Comment_Reg(1,167,'RETRY MODE')
  Comment_Reg(1,168,'RESPONSE ACTION')
  Comment_Reg(1,169,'RESPONE DIALOG')
  Comment_Reg(1,170,'TL CHNG PROC OK')
  Comment_Reg(1,171,'VISION STATUS')


  FOR i = 172 to 200 DO
    Comment_Reg(1,i,  'VISION DATA')
  ENDFOR

  Comment_Reg(1,250,'EarlyVisionEnb')--11-21-16 RK was EarlyVisionEnabled TOO LONG


    IF CellCommType = Ethernet THEN
      Comment_Reg(1,210,  'ENetNode Present')
    ENDIF
    IF CellCommType = Devicenet THEN
      Comment_Reg(1,210,  'DNetNode Present')
    ENDIF

    Comment_Reg(1,211,'PPX F1 Venturi')
    Comment_Reg(1,212,'PPX F2 Venturi')
    Comment_Reg(1,213,'PPX R1 Venturi')
    Comment_Reg(1,214,'PPX R2 Venturi')
    Comment_Reg(1,215,'PPX Active') -- 8-2-16 RK added per Lloyd Steed
    
    Comment_Reg(1,295,'SYNC Var Enabled') -- 3-26-18 sms V833P05
    Comment_Reg(1,296,'PK-Enc DEGRADE') -- 3-26-18 sms V833P05
    Comment_Reg(1,297,'DP-Enc DEGRADE') -- 3-26-18 sms V833P05
    Comment_Reg(1,298,'PK-AntiAngle') -- 3-26-18 sms V833P05
    Comment_Reg(1,299,'DP-AntiAngle') -- 3-26-18 sms V833P05
    
    Comment_Reg(1,301,'PyldCarGrse/Lub')
    Comment_Reg(1,302,'LPT1RackGrse/Lub')
    Comment_Reg(1,303,'LPT1BeltTnsnInsp')
    Comment_Reg(1,304,'LPT1PinWearInsp')
    Comment_Reg(1,305,'LPT1CableCarInsp')
    Comment_Reg(1,306,'LPT1BeltLifeRem')
    Comment_Reg(1,307,'LPT1BearLifeRem')
    Comment_Reg(1,308,'LPT1DrivLifeRem')
    Comment_Reg(1,309,'LPT1PinLifeRem')
    Comment_Reg(1,310,'LPT1Odometer')

    Comment_Reg(1,322,'ProfilerCycTime') -- 6-30-17 RK added per Lloyd Steed
    Comment_Reg(1,323,'L10 J1')
    Comment_Reg(1,324,'L10 J2')
    Comment_Reg(1,325,'L10 J3')
    Comment_Reg(1,326,'MaxTrq J1')
    Comment_Reg(1,327,'Max Trq J2')
    Comment_Reg(1,328,'Max Trq J3')
    Comment_Reg(1,329,'Max Trq LPT')
    Comment_Reg(1,330,'Avg Trq J1')
    Comment_Reg(1,330,'Avg Trq J2')
    Comment_Reg(1,330,'Avg Trq J3')
    Comment_Reg(1,329,'Avg Trq LPT')

 -- Setup String Registers

    Comment_Reg(3,1,'ProfilerCycTime') -- 6-30-17 RK added per Lloyd Steed
    Comment_Reg(3,2,'L10 J1')
    Comment_Reg(3,3,'L10 J2')
    Comment_Reg(3,4,'L10 J3')
    Comment_Reg(3,5,'MaxTrq J1')
    Comment_Reg(3,6,'Max Trq J2')
    Comment_Reg(3,7,'Max Trq J3')
    Comment_Reg(3,8,'Max Trq LPT')
    Comment_Reg(3,9,'Avg Trq J1')
    Comment_Reg(3,10,'Avg Trq J2')
    Comment_Reg(3,11,'Avg Trq J3')
    Comment_Reg(3,12,'Avg Trq LPT')

    FOR i = 470 to 479 DO
      Comment_Reg(1,i,  'RESERVED ADV MH')
    ENDFOR

   WriteLog('   Press set_prs_reg Routine Completed', FALSE)

END set_prs_reg
-------------------------------------------------------------------------------
--  ****************** Main Program *****************************************--
-------------------------------------------------------------------------------
BEGIN

Current_Ver = Version -- Set the version for reference
-- Check these here instead of a routine so can return to calling routine
IF UNINIT(Use_Press) THEN
  POST_ERR(38000, 'Use_Press not setup in GMPRESRG program', 0, 0) --
  RETURN
ENDIF

IF UNINIT(ErrsInShop.ErrorsRgstrs) THEN
  ErrsInShop.ErrorsRgstrs = 0
ENDIF
IF UNINIT(PresRegsDone) THEN
  PresRegsDone = FALSE
ENDIF

   WriteLog(' Press GMPRESRG Program started', FALSE)

  IF (PresRegsDone = TRUE) THEN -- setup has already been setup
      WriteLog('  Press Registers Already Setup', FALSE)
    IF ExecSetupAgn('Press REGISTERS') THEN -- ask user if they want to setup again
      PresRegsDone = FALSE
    ELSE
      WriteLog('  Press Registers already Complete', FALSE)
      WriteLog('  GMPRESRG Setup NOT executing again', FALSE)
      RETURN
    ENDIF
  ENDIF

 StrtinErs = ErrsInShop.ErrorsRgstrs

 ClrUtltyErrs -- Clear all errors in utility program to be used when done

 set_prs_reg -- setup all the press registers

  -- Get all errors in utility program that was used to any program errors
 ErrsInShop.ErrorsRgstrs = ErrsInShop.ErrorsRgstrs +  (AddUtltyErrs)

 IF (ErrsInShop.ErrorsRgstrs - StrtinErs) > 0 THEN -- check for I/O setup errors
   WriteLog('  Press Register setup,GMPRESPG had ' + int2str((ErrsInShop.ErrorsRgstrs-StrtinErs))+' Errors', TRUE)
 ELSE
   WriteLog(' Press Register setup Program completed', FALSE)
   PRESRegsDone = TRUE
 ENDIF


END GMPRESRG

