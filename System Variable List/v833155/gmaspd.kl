PROGRAM GMASPD
%PRIORITY = 50
%SYSTEM
%ALPHABETIZE
%NOLOCKGROUP
%RWACCESS
%NOBUSYLAMP
%NOPAUSE = ERROR + COMMAND + TPENABLE
%NOABORT = ERROR + COMMAND
%COMMENT = 'GM SPDCusto V4.3'
%NOPAUSESHFT

%ENVIRONMENT atcldef  --$atcellsetup
%ENVIRONMENT sysdef --$mcr.$genoverride, $shell_chk

%INCLUDE klevkmsk
%INCLUDE klevkeys
%INCLUDE kliotyps
%INCLUDE KLEVCCDF  -- allows use of 'cc_clear_win' command
%INCLUDE kliosop 

--Modify Speed
--v1.0 
--author Ken Erickson
--revised 3/10/2020 by BK
--revised 3/13/2020 by KE
--V4.3 BK 5/27/20 Modified removed CMOS convert and declared in Shadow from GMASPD

VAR
prd_spd,rsm_spd IN SHADOW FROM GMASPD :INTEGER
cont_proc IN SHADOW FROM GMASPD	 :INTEGER
CONT_PRC_MEM IN SHADOW FROM GMASPD	 :INTEGER
LAST_PRD_SPD IN SHADOW FROM GMASPD : ARRAY[2] OF INTEGER
PRD_RUN_SPD IN SHADOW FROM GMASPD : ARRAY[2] OF INTEGER
PRD_RES_SPD IN SHADOW FROM GMASPD : ARRAY[2] OF INTEGER
HMI_SPD_MEM IN SHADOW FROM GMASPD	 :INTEGER
HMI_SPD IN SHADOW FROM GMASPD	: INTEGER
HMI_CNTRL IN SHADOW FROM GMASPD	 : BOOLEAN
HMI_CHANGE IN SHADOW FROM GMASPD	: BOOLEAN
TP_HMI_CNTRL IN SHADOW FROM GMASPD	 : BOOLEAN
RESUME_SPD IN SHADOW FROM GMASPD	: BOOLEAN
HFO : BOOLEAN
PRMT_BOX IN SHADOW FROM GMASPD	 : BOOLEAN					   
PRMT_BX_MEM IN SHADOW FROM GMASPD   : BOOLEAN					   
GIN_USE IN SHADOW FROM GMASPD	 : INTEGER 
GOUT_USE IN SHADOW FROM GMASPD	 : INTEGER
HMI_GIN IN SHADOW FROM GMASPD	 : INTEGER
RBT_GOUT IN SHADOW FROM GMASPD	 : INTEGER
X IN SHADOW FROM GMASPD	 : INTEGER
tx_srn        : INTEGER
tx_des,tx_nam : STRING[64]
answer IN SHADOW FROM GMASPD	 :INTEGER
----------------------------
--Start GMASPD.pc--
----------------------------

BEGIN

----------------------------
--Set Vars for GMASPD.pc--
----------------------------

IF UNINIT(PRD_SPD) THEN
    PRD_SPD=0
ENDIF
IF UNINIT(RSM_SPD) THEN
    RSM_SPD=0
ENDIF
IF UNINIT(HMI_CNTRL) THEN
    HMI_CNTRL=FALSE
ENDIF
IF UNINIT(HMI_SPD_MEM) THEN
    HMI_SPD_MEM=0
ENDIF
IF UNINIT(TP_HMI_CNTRL) THEN
    TP_HMI_CNTRL=FALSE
ENDIF
IF UNINIT(CONT_PROC) THEN
    CONT_PROC=0
ENDIF
IF UNINIT(tx_srn) THEN
    tx_srn=4
ENDIF
IF UNINIT(tx_des) THEN
    tx_des = '/md/ProductionSpeed.stm'
ENDIF
IF UNINIT(tx_nam) THEN
    tx_nam = 'Production Speed'
ENDIF
IF UNINIT(GIN_USE) THEN
    GIN_USE=74
ENDIF
IF UNINIT(GOUT_USE) THEN
    GOUT_USE=76
ENDIF


HFO=FALSE
RESUME_SPD=FALSE
HMI_CHANGE=FALSE
RESUME_SPD=FALSE
HMI_GIN=GIN_USE
RBT_GOUT=GOUT_USE
FOR X = 1 TO 2 DO
  LAST_PRD_SPD[X]=$MCR.$GENOVERRIDE
  PRD_RUN_SPD[X]=0
  PRD_RES_SPD[X]=0 
ENDFOR
IF PRD_SPD>0 THEN
    PRD_SPD=$ATCELLSETUP.$PRODRUN_SPD
    PRD_RUN_SPD[1]=$ATCELLSETUP.$PRODRUN_SPD
ENDIF
IF RSM_SPD>0 THEN
    RSM_SPD=$ATCELLSETUP.$PRODRSM_SPD
    PRD_RES_SPD[1]=$ATCELLSETUP.$PRODRSM_SPD
ENDIF
IF $SHELL_CHK[4].$ENABLE=TRUE THEN
    PRMT_BOX=TRUE
    PRMT_BX_MEM=TRUE
ELSE
    PRMT_BOX=FALSE
    PRMT_BX_MEM=FALSE
ENDIF
HMI_SPD=GIN[HMI_GIN]
HMI_SPD_MEM=HMI_SPD

----------------------------
----------------------------

REPEAT
    
    
    HMI_SPD=GIN[HMI_GIN]
    IF(OPOUT[7]=FALSE) THEN	
        IF(HMI_SPD>0) THEN
            IF HMI_CNTRL=FALSE THEN
                LAST_PRD_SPD[1]=$MCR.$GENOVERRIDE
            ENDIF 
            
            ----------------------------
            --Check Gen override Boxes--
            ---------------------------- 
            
            IF CONT_PROC=1 THEN  
                IF ($SHELL_CHK[4].$ENABLE=TRUE) AND ($SHELL_CHK[4].$RESUME=TRUE) AND ($SHELL_CHK[4].$PROMPT=TRUE) THEN
                    PRMT_BX_MEM=TRUE
                    CONT_PROC=1
                    PRMT_BOX=FALSE
                ENDIF
            ENDIF  
            
            ----------------------------
            --Set General Overide Prompt Box for tryout mode--
            --IF SPEED PROMPT BOX OVERRIDE ENABLED
            ---------------------------- 
            
            IF PRMT_BX_MEM=TRUE THEN 
                IF CONT_PROC=1 THEN
                    IF (DIN[10]=TRUE) AND (PRMT_BOX=FALSE) THEN
                        PRMT_BOX=TRUE
                    ELSE
                        IF (DIN[10]=FALSE) AND (PRMT_BOX=TRUE) THEN 
                            PRMT_BOX=FALSE
                        ENDIF 
                    ENDIF
                ENDIF   		
                IF (CONT_PROC=1) AND (PRMT_BOX=FALSE) THEN
                    $SHELL_CHK[4].$ENABLE=TRUE
                    $SHELL_CHK[4].$RESUME=TRUE
                    $SHELL_CHK[4].$PROMPT=TRUE
                    PRMT_BOX=TRUE
                ELSE
                    IF (CONT_PROC=1) AND (PRMT_BOX=TRUE) THEN
                        $SHELL_CHK[4].$ENABLE=FALSE
                        $SHELL_CHK[4].$RESUME=FALSE
                        $SHELL_CHK[4].$PROMPT=FALSE
                        PRMT_BOX=FALSE
                    ENDIF
                ENDIF
            ENDIF
            
            IF (CONT_PROC=0) AND (PRMT_BX_MEM=TRUE) THEN  
                IF ($SHELL_CHK[4].$ENABLE=FALSE) AND ($SHELL_CHK[4].$RESUME=FALSE) AND ($SHELL_CHK[4].$PROMPT=FALSE) THEN
                    PRMT_BX_MEM=FALSE
                    CONT_PROC=0 
                    PRMT_BOX=TRUE
                ENDIF
            ENDIF   
            
            ---------------------------- 
            --Set Production and Resume Speed values for cell and speed page--
            ----------------------------
            
            IF PRD_SPD<>PRD_RUN_SPD[1] THEN
                PRD_RUN_SPD[1]=PRD_SPD
                $ATCELLSETUP.$PRODRUN_SPD=PRD_RUN_SPD[1]
                PRD_SPD=$ATCELLSETUP.$PRODRUN_SPD
            ENDIF
            IF PRD_RUN_SPD[1]<>$ATCELLSETUP.$PRODRUN_SPD THEN
                PRD_SPD=$ATCELLSETUP.$PRODRUN_SPD
            ENDIF 
            IF RSM_SPD<>PRD_RES_SPD[1] THEN
                PRD_RES_SPD[1]=RSM_SPD
                $ATCELLSETUP.$PRODRSM_SPD=PRD_RES_SPD[1] 
                RSM_SPD=$ATCELLSETUP.$PRODRSM_SPD
            ENDIF
            IF PRD_RES_SPD[1]<>$ATCELLSETUP.$PRODRSM_SPD THEN
                RSM_SPD=$ATCELLSETUP.$PRODRSM_SPD
            ENDIF
            IF ($ATCELLSETUP.$PRODRUN_SPD>0) OR ($ATCELLSETUP.$PRODRSM_SPD>0) THEN 
                HMI_CNTRL=FALSE
                TP_HMI_CNTRL=FALSE
            ENDIF 
            
            ---------------------------- 
            --check for HMI or TP speed changes--
            ----------------------------
            
            IF TP_HMI_CNTRL=TRUE  THEN
                DOUT[465]=TRUE --BK
                IF HMI_CNTRL=TRUE THEN
                    HMI_SPD=GIN[HMI_GIN]
                    DELAY 100
                    IF (HMI_SPD_MEM<>HMI_SPD)  THEN
                        HMI_CHANGE=TRUE
                    ELSE
                        HMI_CHANGE=FALSE 	
                    ENDIF
                    IF HMI_CHANGE=TRUE THEN
                        HMI_CHANGE=FALSE
                        HMI_SPD=GIN[HMI_GIN]
                        $MCR.$GENOVERRIDE=HMI_SPD
                        DELAY 100
                        HMI_SPD_MEM=HMI_SPD
                        LAST_PRD_SPD[1]=$MCR.$GENOVERRIDE
                    ELSE 
                        WAIT FOR $MCR.$GENOVERRIDE=$MCR.$GENOVERRIDE
                        HMI_SPD=GIN[HMI_GIN]
                        IF (($MCR.$GENOVERRIDE)<>(LAST_PRD_SPD[1])) AND (HMI_CNTRL=TRUE) THEN 
                            IF HMI_CNTRL=TRUE THEN	
                                HMI_CNTRL=FALSE
                                LAST_PRD_SPD[1]=$MCR.$GENOVERRIDE 	
                            ENDIF
                        ENDIF
                    ENDIF
                ELSE 
                    IF TP_HMI_CNTRL=TRUE THEN
                        IF (HMI_CNTRL=FALSE) AND (DIN[465]=TRUE) AND (OPOUT[7]=FALSE) THEN
                            HMI_CNTRL=TRUE
                            HMI_SPD=GIN[HMI_GIN]
                            HMI_SPD_MEM=HMI_SPD
                            DELAY 100
                            $MCR.$GENOVERRIDE=HMI_SPD
                            LAST_PRD_SPD[1]=$MCR.$GENOVERRIDE  
                        ELSE 
                            IF (HMI_CNTRL=FALSE) AND (OPOUT[7]=FALSE) THEN
                                HMI_SPD=GIN[HMI_GIN]
                                DELAY 100
                                IF ($MCR.$GENOVERRIDE>=HMI_SPD)  THEN
                                    HMI_CNTRL=TRUE
                                    LAST_PRD_SPD[1]=$MCR.$GENOVERRIDE
                                    HMI_SPD=GIN[HMI_GIN]
                                    HMI_SPD_MEM=HMI_SPD    
                                ENDIF  
                            ENDIF 
                        ENDIF
                    ENDIF
                ENDIF
            ELSE
                DOUT[465]=FALSE --BK
                HMI_CNTRL=FALSE	
            ENDIF  
            IF (HMI_CNTRL=TRUE) AND (OPOUT[7]=FALSE) THEN
                HMI_SPD=GIN[HMI_GIN]
                DELAY 100
                $MCR.$GENOVERRIDE=HMI_SPD
                LAST_PRD_SPD[1]=$MCR.$GENOVERRIDE   	
            ENDIF
            
        ELSE
            HMI_CNTRL=FALSE
            IF TP_HMI_CNTRL=TRUE  THEN
                DOUT[465]=TRUE --BK
            ELSE
                DOUT[465]=FALSE
            ENDIF 
        ENDIF
    ELSE
        HMI_CNTRL=FALSE
        DOUT[465]=FALSE
    ENDIF 
    GOUT[RBT_GOUT]=$MCR.$GENOVERRIDE
    HMI_SPD=GIN[HMI_GIN]
    
    ---------------------------- 
    --repeat loop--
    ---------------------------- 
    
    DELAY 500
    
UNTIL HFO=TRUE


END GMASPD 