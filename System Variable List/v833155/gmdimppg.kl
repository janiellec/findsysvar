-- -----------------------------------------------------------------------
--
--   MODULE:         GMDIMPPG.KL
--   TITLE:          GMDIMPPG PROGRAM
--
--
--   WRITTEN BY:     FANUC
--   REVISION DATE:  2016/10/08
--
--   LANGUAGE:       KAREL 8.33 R30iB
--   CONTROL GROUP:  BODY SHOP EXECUTION GROUP
--   STATUS:
--
--
--   ORDER NUMBER:   GMGBL4
--   PROJECT NAME:   GM Global Center
--
--
--         FANUC Robotics retains rights in any and all Software
--         contained in the material attached hereto and said
--         Software may not be copied or reproduced without the
--         written permission of FANUC Robotics.
--
--         All Software, (C) Copyright FANUC Robotics Corporation, 201
--         DESCRIPTION: Project Weld Program  program files. These routines will be
--                      called from the main wizard, no prompts are in the Variable file
--                      only the setttings GMWIZARD are the questions
--
--         HISTORY OF CHANGES:
--
--         REVISION   DATE       BY               COMMENTS
--         --------   ---------  ---------------  --------------------
--              4.1   2017/02/05 marchaka         Modify prompt logic on wizard rerun
--
--
--
--
--------------------------------------------------------------------------
PROGRAM GMDIMPPG

%COMMENT = 'GM DIMP PG V4.1'

%NOLOCKGROUP
%INVISIBLE
%RWACCESS
%NOPAUSE = ERROR + COMMAND + TPENABLE

%INCLUDE KLEVCCDF  -- Required for the TPERROR write command for the contants

%INCLUDE gmcfgcel  -- GM wizard variables for workcell variables that are common across all shops
%INCLUDE gmcfgerr  -- Required for the configuration for GM Error counting and logging
%INCLUDE gmcfgbdy  -- body shop variables
%INCLUDE gmcfgdmp  -- dimpler variables

CONST

Version = '2017-02-05'
%INCLUDE gmcnstnt -- all GM constants for the wizard

VAR

  Current_Ver  IN SHADOW :STRING[32] -- Set equal to Version constant in initialization routine
  StrtinErs   : INTEGER   -- How many errors I/O error counter had when the program started
  DimpPG_Setup  IN SHADOW : BOOLEAN  -- Keeps track if routine setup Dimpler programs at least first time

  prog_nam     : STRING[12]
  gm_status: INTEGER

ROUTINE writeLog(p_message: STRING; isError: BOOLEAN) FROM GMWIZLOG

%INCLUDE GMRDUTIL -- Utility Routine for Setting Variables
-----------------------------------------------------------------------------
ROUTINE initDIMPprgs
-- PURPOSE: to initialize dimpler program setup variables
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  IF UNINIT(DimpPG_Setup) THEN
    DimpPG_Setup = FALSE
  ENDIF

  IF UNINIT(bshop_proc1) THEN
    bshop_proc1 = 0
  ENDIF
  IF UNINIT(bshop_proc2) THEN
    bshop_proc2 = 0
  ENDIF

  IF UNINIT(numdimpctrl) THEN
    numdimpctrl = 0
  ENDIF

  IF UNINIT(dimp1_app) THEN
    dimp1_app = 0
  ENDIF

  Set_S_sVar('$TP_DEFPROG', 'PROMPTYN')
  Set_S_sVar('$SHELL_WRK.$ROUT_NAME', '')

END initDIMPprgs
-----------------------------------------------------------------------------
ROUTINE load_dimppg
-- PURPOSE: load dimpler programs
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN
 
  Load_File('FRS:','tmpdmprc.tp',1)
  Load_File('FRS:','tmplacdm.tp',1) 
  Load_File('FRS:','chktchmd.tp',1)

  IF (bshop_proc1 = dimpappl) THEN --process 1 is a dimple applicatin

    Load_File('FRS:','DIMPLE1.TP',1)   
    Load_File('FRS:','SETSTRK1.TP',1)

  ENDIF

  IF (bshop_proc2 = dimpappl) THEN --process 2 is a dimple application

    Load_File('FRS:','DIMPLE2.TP',1)  
    Load_File('FRS:','SETSTRK2.TP',1) 

  ENDIF -- process 2 is a dimple application

END load_dimppg
-----------------------------------------------------------------------------
ROUTINE dimp_stytb
-- PURPOSE: setup dimpler style table
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN
 

END dimp_stytb
-----------------------------------------------------------------------------
ROUTINE dimp_macro
-- PURPOSE: setup dimpler macros
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

    

END dimp_macro
-----------------------------------------------------------------------------
ROUTINE set_dimp_pg
-- PURPOSE: setup dimpler programs
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

IF (numdimpctrl <> 0) THEN --application has dimpler application

  Current_Ver = Version -- Set the version for reference

  IF UNINIT(ErrsInShop.ErrorsPrgrms) THEN
    ErrsInShop.ErrorsPrgrms = 0
  ENDIF
  IF UNINIT(DimpPG_Setup) OR (Reset_Cell) THEN
    DimpPG_Setup = FALSE
  ENDIF

  StrtinErs = ErrsInShop.ErrorsPrgrms -- grab current error count
  ClrUtltyErrs -- Clear all error in utility program to be used when done

  WriteLog('  Starting the Dimpler Program GMDIMPPG', FALSE)

  IF (DimpPG_Setup = TRUE) THEN -- setup has already been setup
    WriteLog('  Dimpler Programs Already Setup', FALSE)
    IF ExecSetupAgn('Dimpler Progs') THEN -- ask user if they want to setup again
      DimpPG_Setup = FALSE
    ELSE
      WriteLog('  Dimpler Programs already Complete', FALSE)
      WriteLog('  GMDIMPPG Setup NOT executing again', FALSE)
      RETURN
    ENDIF
  ENDIF

--setup routines
  initDIMPprgs
  load_dimppg
  dimp_stytb
  dimp_macro

  ErrsInShop.ErrorsPrgrms =  ErrsInShop.ErrorsPrgrms + (AddUtltyErrs) -- Get all errors in utility program to be added to any program errors
  IF (ErrsInShop.ErrorsPrgrms -StrtinErs) > 0 THEN -- check for I/O setup errors
    WriteLog('  Dimpler Program Setup GMDIMPPG had ' + int2str((ErrsInShop.ErrorsPrgrms- StrtinErs))+' while executing', TRUE)
  ELSE
    WriteLog('  Dimpler Program Setup completed', FALSE)
    DimpPG_Setup = TRUE
  ENDIF

  WriteLog('', FALSE)

ENDIF --numdimpctrl

END set_dimp_pg
-----------------------------------------------------------------------------
BEGIN

END GMDIMPPG
