--
--    This material is the joint property of GMFanuc Robotics Corporation  and
--    FANUC  LTD  Japan,  and  must  be  returned  to  either GMFanuc Robotics
--    Corporation or FANUC LTD Japan immediately upon request.  This  material
--    and   the  information  illustrated  or  contained  herein  may  not  be
--    reproduced, copied, used, or transmitted in whole or in part in any  way
--    without the prior written consent of both GMFanuc Robotics and FANUC.
--
--             All Rights Reserved
--             Copyright (C)   1992
--             GMFanuc Robotics Corporation
--             FANUC LTD Japan
--
--             Karel is a registered trademark of
--             GMFanuc Robotics Corporation
--    +
--    Program: gmwizstd.kl
--
--    Description:
--
--    gmwizdp contains questions for configuring GM G4 application applications
--    
-------------------------------------------------------------------------------------------------------------
--    SETUP ROUTINES INCLUDED
-------------------------------------------------------------------------------------------------------------
--
--    Language: KAREL
--
--    Source File: 
--
--    Author:
--            Fanuc Robotics North America
--            3900 West Hamlin Road
--            Rochester Hills, Michigan    48309-3253
--
--    Modification history:
--           2016/03/23   marchaka Program created
--           2016/06/13   marchaka Equipment number in questions fixed. It wasn't displaying before.
--           2016/10/12   marchaka Logic for combination applications added.
-------------------------------------------------------------------------------------------------------------
PROGRAM gmwizstd
-------------------------------------------------------------------------------------------------------------
%ALPHABETIZE
%NOLOCKGROUP
%INVISIBLE
%RWACCESS
%NOPAUSE = ERROR + COMMAND + TPENABLE

%COMMENT='GM StudWizG4.0'

%INCLUDE gmevrlng -- Required for the language constants
%INCLUDE gm_var    --GM variables
%INCLUDE gmcfgstd  -- GM wizard variables for Stud Applications
%INCLUDE gmcfgbdy  -- GM wizard variables for body shop applications

CONST
%INCLUDE gmcnstnt  -- Constant file for GM

Version = '2016-10-12'

VAR
  ans          : INTEGER
  gm_status    : INTEGER
  psve         : INTEGER
  l_response   : INTEGER



%INCLUDE klrdutil -- Required for the CLR_STND_SCR routine for Pendant screen
%INCLUDE gmrdutil

ROUTINE set_english FROM GMlang1 -- setup variable for the user prompts


ROUTINE USERPAGE FROM USERPAGE  -- forces user screen to pendant


-------------------------------------------------------------------
ROUTINE stud_app_wiz

VAR

  l_equip: INTEGER
  l_gun  : INTEGER

BEGIN

  IF UNINIT(numstudctrl) THEN
    numstudctrl = 0
  ENDIF
  IF UNINIT(stud1_app) THEN
    stud1_app = 0
  ENDIF
  IF UNINIT(stud2_app) THEN
    stud2_app = 0
  ENDIF
  IF UNINIT(stud1_backup) THEN
    stud1_backup = 0
  ENDIF
  IF UNINIT(stud2_backup) THEN
    stud2_backup = 0
  ENDIF


  --ONLY 1 Stud controllers either Process1 or 2
  IF ((bshop_proc1 = studappl) OR (bshop_proc2 = studappl)) THEN  
    numstudctrl = 1
  ELSE
    numstudctrl = 0
  ENDIF  
			 
  SELECT numstudctrl OF

    CASE(1):  --one stud controller ALWAYS but trick the system by adding 2,3,4 equipments  

      IF (stud1_app = 0) THEN --skip if combo, stud1_app is set in gmwizbsh

        REPEAT
          --(CR, 'One Stud Controller',cr,cr)
          --('1. Robot Held Gun',cr)
          --('2. Pedestal Held Gun',cr)
          --('3. Single Pedestal with Dual Guns',cr)
          --('4. Three Pedestal Guns',cr)
          --('5. Four Pedestal Guns ',cr,cr)

          CLR_STND_SCR(gm_status)
          WRITE (CR,s1sd_gmdata,cr,cr)
          WRITE('1.', rhg_gmdata ,cr)
          WRITE('2.', pd_gmdata ,cr)
          WRITE('3.', spdg_gmdata ,cr)
          WRITE('4.', s3pst_gmdata ,cr)
 	  WRITE('5.', s4pst_gmdata ,cr,cr)
	  WRITE(gdata_ans,'(1-5):')
          READ(ans)
        UNTIL (Verify_Answr(ans,1,5))	
        stud1_app = ans	

      ENDIF --skip if combo, stud1_app is set in gmwizbsh

      IF ((stud1_app = stud_rhg) OR (stud1_app = stud_phg) OR (stud1_app = stud_spdg)) THEN --is there a backup head?  
        REPEAT
          -- ** Question #1 - Is there a studbackup? **
          --'Do you want stud gun backup',cr)
          --'for studwelding equipment 1?',cr,cr)
          --('1. Yes',cr)
          --('2. No',cr,cr)

          CLR_STND_SCR(gm_status)
          WRITE(cr, bkstd_gdata1 ,cr)
          WRITE(bkstd_gdata2,'1?',cr,cr)
          WRITE('1.', yes_gmdata ,cr)
          WRITE('2.', no_gmdata ,cr,cr)
          WRITE(gdata_ans,'(1-2):')
          READ(ans)
	UNTIL (Verify_Answr(ans,1,2))
        stud1_backup = ans

        IF (stud1_app = stud_spdg) THEN --does equip 2 have a backup  head?
          REPEAT
            -- ** Question #1 - Is there a studbackup? **
            --'Do you want stud gun backup',cr)
            --'for studwelding equipment 2?',cr,cr)
            --('1. Yes',cr)
            --('2. No',cr,cr)

            CLR_STND_SCR(gm_status)
            WRITE(cr, bkstd_gdata1 ,cr)
            WRITE(bkstd_gdata2,'2?',cr,cr)
            WRITE('1.', yes_gmdata ,cr)
            WRITE('2.', no_gmdata ,cr,cr)
            WRITE(gdata_ans,'(1-2):')
            READ(ans)
          UNTIL (Verify_Answr(ans,1,2))
          stud2_backup = ans
        ENDIF --does equip 2 have a backup head

      IF ((stud1_app = stud_rhg) AND (stud1_backup = wizans_yes)) THEN
        --'Tool Nests Single/Dual Slide'
        --'1. Single Gun on Slide'
        --'2. Two Guns on the same Slide'
  
        CLR_STND_SCR(gm_status)
        REPEAT
          WRITE(cr,sl1_gmdata,'?',cr,cr)
          WRITE('1.',slid1_gmdata,cr)
          WRITE('2.',slid2_gmdata,cr,cr)
          WRITE(gdata_ans,'(1-2):')       
          READ(ans)
        UNTIL(Verify_Answr(ans,1,2))
        stud1_slide = ans
      ENDIF  --slides for guns
                 
    ENDIF  --is there a backup head
  
    ELSE:

  ENDSELECT --stud application select

END stud_app_wiz
-------------------------------------------------------------------
BEGIN

set_english
stud_app_wiz

END gmwizstd


