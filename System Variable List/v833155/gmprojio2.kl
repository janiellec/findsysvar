-- -----------------------------------------------------------------------
--
--   MODULE:         GMPROJIO2.KL
--   TITLE:          GMPROJIO2 PROGRAM
--
--
--   WRITTEN BY:     RANDY KOSASKI
--   REVISION DATE:  1/23/16
--
--   LANGUAGE:       KAREL 8.33 R30iB
--   CONTROL GROUP:  BODY SHOP EXECUTION GROUP
--   STATUS:
--
--
--   ORDER NUMBER:   GMGBL4
--   PROJECT NAME:   GM Global Center
--
--
--         FANUC Robotics retains rights in any and all Software
--         contained in the material attached hereto and said
--         Software may not be copied or reproduced without the
--         written permission of FANUC Robotics.
--
--         All Software, (C) Copyright FANUC Robotics Corporation, 2016
--         DESCRIPTION: Projection Weld Program  program files. These routines will be
--                      called from the main wizard, no prompts are in the Variable file
--                      only the setttings GMWIZARD are the questions
--
--         HISTORY OF CHANGES:
--
--         REVISION   DATE       BY               COMMENTS
--         --------   ---------  ---------------  --------------------
--              4.1   2017/02/05 marchaka         Modify prompts for wizard rerun
--
--
--
--
--------------------------------------------------------------------------
PROGRAM GMPROJIO2

%COMMENT = 'GM PROJ I/O 2 V4.1'

%NOLOCKGROUP
%INVISIBLE
%RWACCESS
%NOPAUSE = ERROR + COMMAND + TPENABLE

%INCLUDE KLEVCCDF  -- Required for the TPERROR write command for the contants
%INCLUDE kliotyps  -- Required for the base I/O types i.e. IO_DIN etc.

%INCLUDE gmcfgcel  -- GM wizard variables for workcell variables that are common across all shops
%INCLUDE gmcfgerr  -- Required for the configuration for GM Error counting and logging
%INCLUDE gmcfgbdy  -- body shop variables
%INCLUDE gmcfgspt  -- spot application variables
%INCLUDE gmcfgpjw  -- projection weld variables
%INCLUDE gm_var    -- GM variables
%INCLUDE gmevrs4io -- GM variables

CONST

Version = '2017-02-05'
%INCLUDE gmcnstnt -- all GM constants for the wizard

VAR

  Current_Ver  IN SHADOW :STRING[32] -- Set equal to Version constant in initialization routine
  StrtinErs   : INTEGER   -- How many errors I/O error counter had when the program started
  ProjIO2Setup  IN SHADOW : BOOLEAN  -- Keeps track if routine setup Mh I/O at least first time

  gm_status: INTEGER
  cig_slot: INTEGER --spot weld carried integrated gun ENET slot
  cig2_slot: INTEGER --spot weld carried integrated gun 2 ENET slot

ROUTINE writeLog(p_message: STRING; isError: BOOLEAN) FROM GMWIZLOG

%INCLUDE GMRDUTIL -- Utility Routine for Setting Variables

ROUTINE TURK_IO_EIP(P_Con_Num:INTEGER;p_Con_Name:STRING) FROM gmenetsu
ROUTINE WTC_EIP(P_Con_Num:INTEGER;p_Con_Name:STRING;P_host_ip:STRING) FROM gmenetsu
-----------------------------------------------------------------------------
ROUTINE init_pjw2
-- PURPOSE: to initialize Programs associated with I/O setup
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  IF UNINIT(ProjIO2Setup) THEN
    ProjIO2Setup = FALSE
  ENDIF

  IF UNINIT(bshop_proc1) THEN
    bshop_proc1 = 0
  ENDIF
  IF UNINIT(bshop_proc2) THEN
    bshop_proc2 = 0
  ENDIF

  IF UNINIT(numprojctrl) THEN
    numprojctrl = 0
  ENDIF

  IF UNINIT(projcommtype) THEN
    projcommtype = 89  --ENET
  ENDIF

  IF UNINIT(cig_slot) THEN
    cig_slot = 45
  ENDIF
  IF UNINIT(cig2_slot) THEN
    cig2_slot = 51
  ENDIF

END init_pjw2
-----------------------------------------------------------------------------
ROUTINE proj_io
-- PURPOSE: setup projection welder I/O for process 1
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  IF (bshop_proc1 = projappl) THEN --process 1 is a projection welder

    SET_PORT_ASG(IO_DIN,  1665,projcommtype,cig_slot,IO_DIN, 17,-8,  gm_status) 
    SET_PORT_ASG(IO_DOUT, 1665,projcommtype,cig_slot,IO_DOUT,17, -8, gm_status)

    SET_PORT_CMT(IO_DIN, 1665, 'diG1Opened', gm_status)
    SET_PORT_CMT(IO_DIN, 1666, 'diG1Closed', gm_status)
    SET_PORT_CMT(IO_DIN, 1667, 'diG1EqHome', gm_status)
    SET_PORT_CMT(IO_DIN, 1668, '(Reserved)',  gm_status) 
    SET_PORT_CMT(IO_DIN, 1669, '(Reserved)', gm_status)
    SET_PORT_CMT(IO_DIN, 1670, '(Reserved)', gm_status)
    SET_PORT_CMT(IO_DIN, 1671, '(Reserved)', gm_status)
    SET_PORT_CMT(IO_DIN, 1672, '(Reserved)', gm_status)

    SET_PORT_CMT(IO_DOUT, 1665, 'doCloseG1', gm_status)
    SET_PORT_CMT(IO_DOUT, 1666, 'doOpenG1', gm_status)
    SET_PORT_CMT(IO_DOUT, 1667, 'doEqualizerG1', gm_status)
    SET_PORT_CMT(IO_DOUT, 1668, '(Reserved)',  gm_status)  
    SET_PORT_CMT(IO_DOUT, 1669, '(Reserved)', gm_status)  
    SET_PORT_CMT(IO_DOUT, 1670, '(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT, 1671, '(Reserved)', gm_status)  
    SET_PORT_CMT(IO_DOUT, 1672, '(Reserved)', gm_status)

    IF (projcommtype = Ethernet) THEN
      TURK_IO_EIP(cig_slot,'PW GUN1')
    ENDIF

  ENDIF --process 1 is a projection welder

  IF ((bshop_proc1 = spotappl) AND (bshop_proc2 = projappl)) THEN -- combination of a spot + projection weld application
                                                                  -- only time projection welder is process 2

    SET_PORT_ASG(IO_DIN,  1713,projcommtype,cig2_slot,IO_DIN, 17,-8,  gm_status) 
    SET_PORT_ASG(IO_DOUT, 1713,projcommtype,cig2_slot,IO_DOUT,17, -8, gm_status)

    SET_PORT_CMT(IO_DIN, 1713, 'diG2Opened', gm_status)
    SET_PORT_CMT(IO_DIN, 1714, 'diG2Closed', gm_status)
    SET_PORT_CMT(IO_DIN, 1715, 'diG2EqHome', gm_status)
    SET_PORT_CMT(IO_DIN, 1716, '(Reserved)',  gm_status) 
    SET_PORT_CMT(IO_DIN, 1717, '(Reserved)', gm_status)
    SET_PORT_CMT(IO_DIN, 1718, '(Reserved)', gm_status)
    SET_PORT_CMT(IO_DIN, 1719, '(Reserved)', gm_status)
    SET_PORT_CMT(IO_DIN, 1720, '(Reserved)', gm_status)

    SET_PORT_CMT(IO_DOUT, 1713, 'doCloseG2', gm_status)
    SET_PORT_CMT(IO_DOUT, 1714, 'doOpenG2', gm_status)
    SET_PORT_CMT(IO_DOUT, 1715, 'doEqualizerG2', gm_status)
    SET_PORT_CMT(IO_DOUT, 1716, '(Reserved)',  gm_status)  
    SET_PORT_CMT(IO_DOUT, 1717, '(Reserved)', gm_status)  
    SET_PORT_CMT(IO_DOUT, 1718, '(Reserved)', gm_status)
    SET_PORT_CMT(IO_DOUT, 1719, '(Reserved)', gm_status)  
    SET_PORT_CMT(IO_DOUT, 1720, '(Reserved)', gm_status)

    IF (projcommtype = Ethernet) THEN
      TURK_IO_EIP(cig2_slot,'PW GUN2')
    ENDIF
 
  ENDIF --combo spot + projection welder

END proj_io
-----------------------------------------------------------------------------
ROUTINE proj_intcnt
-- PURPOSE: setup projection welder interconnects
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  Set_B_sVar('$thrsditable[1].$thr_enb', FALSE)   -- Cap change request = Tip replacement request
  Set_I_sVar('$thrsditable[1].$di_no', 0)		
  Set_I_sVar('$thrsditable[1].$do_no', 0)

  Set_B_sVar('$thrsditable[8].$thr_enb', FALSE)  -- Stepper Reset Alert2						
  Set_I_sVar('$thrsditable[8].$di_no', 0)		     
  Set_I_sVar('$thrsditable[8].$do_no', 0)

  IF (bshop_proc1 = projappl) THEN --process 1 is a projection welder
    IF (projwldapp[1].proj_ctrl = pjw_wtc) THEN --WTC controller used
      Set_B_sVar('$thrsditable[55].$thr_enb', TRUE)                 -- Weld mode = Process #1 ON
      Set_I_sVar('$thrsditable[55].$di_no', projctrl[1].proj_gun[1].di_wdenbl)		         
      Set_I_sVar('$thrsditable[55].$do_no', 65)
    ENDIF --WTC controller used
    IF (projwldapp[1].proj_ctrl = pjw_none) THEN --no weld controller
      Set_B_sVar('$thrsditable[55].$thr_enb', FALSE)                
      Set_I_sVar('$thrsditable[55].$di_no', 0)		         
      Set_I_sVar('$thrsditable[55].$do_no', 0)
    ENDIF
  ENDIF --process 1 is a projection welder

  IF (((bshop_proc1 = spotappl) AND (wld1_app = wld1app_cg)) AND ((bshop_proc2 = projappl) AND (proj1_app = pjw1app_cg))) THEN  --combo cg swg + cg proj TC
    IF (projwldapp[1].proj_ctrl = pjw_wtc) THEN --WTC controller used
      Set_B_sVar('$thrsditable[55].$thr_enb', TRUE)                 -- Weld mode = Process #1 ON
      Set_I_sVar('$thrsditable[55].$di_no', projctrl[1].proj_gun[1].di_wdenbl)		         
      Set_I_sVar('$thrsditable[55].$do_no', 129)
    ENDIF --WTC controller used
    IF (projwldapp[1].proj_ctrl = pjw_none) THEN --no weld controller
      Set_B_sVar('$thrsditable[55].$thr_enb', FALSE)                 
      Set_I_sVar('$thrsditable[55].$di_no', 0)		         
      Set_I_sVar('$thrsditable[55].$do_no', 0)
    ENDIF
  ENDIF --combo cg swg + cg proj TC

  IF (((bshop_proc1 = spotappl) AND (wld1_app = wld1app_pg)) AND ((bshop_proc2 = projappl) AND (proj1_app = pjw1app_pg))) THEN  -- combo ped swg + ped proj 
    IF (projwldapp[1].proj_ctrl = pjw_wtc) THEN --WTC controller used
      Set_B_sVar('$thrsditable[55].$thr_enb', TRUE)                 -- Weld mode = Process #1 ON
      Set_I_sVar('$thrsditable[55].$di_no', projctrl[1].proj_gun[1].di_wdenbl)		         
      Set_I_sVar('$thrsditable[55].$do_no', 129)  
    ENDIF  --WTC controller used
    IF (projwldapp[1].proj_ctrl = pjw_none) THEN --no weld controller
      Set_B_sVar('$thrsditable[55].$thr_enb', FALSE)                
      Set_I_sVar('$thrsditable[55].$di_no', 0)		         
      Set_I_sVar('$thrsditable[55].$do_no', 0)
    ENDIF
  ENDIF  -- combo ped swg + ped proj


END proj_intcnt
-----------------------------------------------------------------------------
ROUTINE projio2cold
-- PURPOSE: setup projection welder I/O during cold start
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  IF (bshop_proc1 = projappl) THEN --process 1 is a projection welder
    SET_PORT_MOD(IO_DOUT, 1665, 2, gm_status)           -- Complementary I/O
  ENDIF --process 1 is a projection welder

  IF ((bshop_proc1 = spotappl) AND (bshop_proc2 = projappl)) THEN -- combination of a spot + projection weld application
                                                                  -- only time projection welder is process 2
    SET_PORT_MOD(IO_DOUT, 1713, 2, gm_status)           -- Complementary I/O
  ENDIF --process 2 is a projeciton welder

END projio2cold
-----------------------------------------------------------------------------
ROUTINE set_projio2
-- PURPOSE: setup projection welder I/O
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

IF (numprojctrl <> 0) THEN --appication has projection weld application

  Current_Ver = Version -- Set the version for reference

  IF UNINIT(ErrsInShop.ErrorsIOCom) THEN
    ErrsInShop.ErrorsIOCom = 0
  ENDIF
  IF UNINIT(ProjIO2Setup) OR (Reset_Cell) THEN
    ProjIO2Setup = FALSE
  ENDIF

  StrtinErs = ErrsInShop.ErrorsIOCom -- grab current error count
  ClrUtltyErrs -- Clear all error in utility program to be used when done

  WriteLog('  Starting the Projection I/O 2 Program GMPROJIO2', FALSE)

  IF (ProjIO2Setup = TRUE) THEN -- setup has already been setup
    WriteLog('  Projection I/O 2 Already Setup', FALSE)
    IF ExecSetupAgn('Projection I/O 2') THEN -- ask user if they want to setup again
      ProjIO2Setup = FALSE
    ELSE
      WriteLog('  Projection I/O 2 already Complete', FALSE)
      WriteLog('  GMPROJIO2 Setup NOT executing again', FALSE)
      RETURN
    ENDIF
  ENDIF

  --setup routines
  init_pjw2
  proj_io
  proj_intcnt

  ErrsInShop.ErrorsIOCom =  ErrsInShop.ErrorsIOCom + (AddUtltyErrs) -- Get all errors in utility program to be added to any program errors
  IF (ErrsInShop.ErrorsIOCom -StrtinErs) > 0 THEN -- check for I/O setup errors
    WriteLog('  Projection I/O 2 setup Program GMPROJIO2 had ' + int2str((ErrsInShop.ErrorsIOCom- StrtinErs))+' while executing', TRUE)
  ELSE
    WriteLog('  Projection I/O 2 setup Program completed', FALSE)
    ProjIO2Setup = TRUE
  ENDIF

  WriteLog('', FALSE)

ENDIF --numprojctrl

END set_projio2
-----------------------------------------------------------------------------
BEGIN

END GMPROJIO2
