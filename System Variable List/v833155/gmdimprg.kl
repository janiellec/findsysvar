-- -----------------------------------------------------------------------
--
--   MODULE:         GMDIMPRG.KL
--   TITLE:          GMDIMPRG PROGRAM
--
--
--   WRITTEN BY:     Fanuc
--   REVISION DATE:  2016/10/08
--
--   LANGUAGE:       KAREL 8.33 R30iB
--   CONTROL GROUP:  BODY SHOP EXECUTION GROUP
--   STATUS:
--
--
--   ORDER NUMBER:   GMGBL4
--   PROJECT NAME:   GM Global Center
--
--
--         FANUC Robotics retains rights in any and all Software
--         contained in the material attached hereto and said
--         Software may not be copied or reproduced without the
--         written permission of FANUC Robotics.
--
--         All Software, (C) Copyright FANUC Robotics Corporation, 2016
--         DESCRIPTION: Projection Weld Program  program files. These routines will be
--                      called from the main wizard, no prompts are in the Variable file
--                      only the setttings GMWIZARD are the questions
--
--         HISTORY OF CHANGES:
--
--         REVISION   DATE       BY               COMMENTS
--         --------   ---------  ---------------  --------------------
--              4.1   2017/02/05 marchaka         Modify prompt logic for wizard rerun
--
--
--
--
--------------------------------------------------------------------------
PROGRAM GMDIMPRG

%COMMENT = 'GM DIMP REG V4.1'

%NOLOCKGROUP
%INVISIBLE
%RWACCESS
%NOPAUSE = ERROR + COMMAND + TPENABLE

%INCLUDE KLEVCCDF  -- Required for the TPERROR write command for the contants

%INCLUDE gmcfgcel  -- GM wizard variables for workcell variables that are common across all shops
%INCLUDE gmcfgerr  -- Required for the configuration for GM Error counting and logging
%INCLUDE gmcfgbdy  -- body shop variables
%INCLUDE gmcfgdmp  -- dimpler variables

CONST

Version = '2017-02-05'
%INCLUDE gmcnstnt -- all GM constants for the wizard

VAR

  Current_Ver  IN SHADOW :STRING[32] -- Set equal to Version constant in initialization routine
  StrtinErs   : INTEGER   -- How many errors I/O error counter had when the program started
  DimpRG_Setup  IN SHADOW : BOOLEAN  -- Keeps track if routine setup Dimpler register at least first time

ROUTINE writeLog(p_message: STRING; isError: BOOLEAN) FROM GMWIZLOG

%INCLUDE GMRDUTIL -- Utility Routine for Setting Variables
-----------------------------------------------------------------------------
ROUTINE initDIMPREGS
-- PURPOSE: to initialize variables for dimpler register setup 
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

  IF UNINIT(DimpRG_Setup) THEN
    DimpRG_Setup = FALSE
  ENDIF

  IF UNINIT(bshop_proc1) THEN
    bshop_proc1 = 0
  ENDIF
  IF UNINIT(bshop_proc2) THEN
    bshop_proc2 = 0
  ENDIF

  IF UNINIT(numdimpctrl) THEN
    numdimpctrl = 0
  ENDIF

  IF UNINIT(dimp1_app) THEN
    dimp1_app = 0
  ENDIF

END initDIMPREGS
-----------------------------------------------------------------------------
ROUTINE set_dimp_rg
-- PURPOSE: set dimpler registers
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

IF (numdimpctrl <> 0) THEN --application has dimpler

  Current_Ver = Version -- Set the version for reference

  IF UNINIT(ErrsInShop.ErrorsRgstrs) THEN
    ErrsInShop.ErrorsRgstrs = 0
  ENDIF
  IF UNINIT(DimpRG_Setup) OR (Reset_Cell) THEN
    DimpRG_Setup = FALSE
  ENDIF

  StrtinErs = ErrsInShop.ErrorsRgstrs -- grab current error count
  ClrUtltyErrs -- Clear all error in utility program to be used when done

  WriteLog('  Starting the Dimpler Program GMDIMPRG', FALSE)

  IF (DimpRG_Setup = TRUE) THEN -- setup has already been setup
    WriteLog('  Dimpler Registers Already Setup', FALSE)
    IF ExecSetupAgn('Dimpler REGS') THEN -- ask user if they want to setup again
      DimpRG_Setup = FALSE
    ELSE
      WriteLog('  Dimpler Registers already Complete', FALSE)
      WriteLog('  GMDIMPRG Setup NOT executing again', FALSE)
      RETURN
    ENDIF
  ENDIF

  --setup routines
  initDIMPregs

  ErrsInShop.ErrorsRgstrs =  ErrsInShop.ErrorsRgstrs + (AddUtltyErrs) -- Get all errors in utility program to be added to any program errors
  IF (ErrsInShop.ErrorsRgstrs -StrtinErs) > 0 THEN -- check for I/O setup errors
    WriteLog('  Dimpler Register Setup GMDIMPRG had ' + int2str((ErrsInShop.ErrorsRgstrs- StrtinErs))+' while executing', TRUE)
  ELSE
    WriteLog('  Dimpler Register Setup completed', FALSE)
    DimpRG_Setup = TRUE
  ENDIF

  WriteLog('', FALSE)

ENDIF --numdimpctrl

END set_dimp_rg
-----------------------------------------------------------------------------
BEGIN

END GMDIMPRG
