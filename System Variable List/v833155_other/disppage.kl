PROGRAM DISPPAGE
-----------------------------------------------------------------------------
--This program was written by Gene Siegle to allow the user to change pages and have it return to the previos screen setup if desired.
--Jan 2017
--%ENVIRONMENT ATCLDEF
--%ENVIRONMENT DNSVDEF
%ENVIRONMENT iosetup
--%ENVIRONMENT mnmcdef
--%ENVIRONMENT SLDEF
--%ENVIRONMENT swgdef
--%ENVIRONMENT SYCRDEF
--%ENVIRONMENT sysdef
--%ENVIRONMENT TPE
--%ENVIRONMENT tpthrdef
%ENVIRONMENT FDEV
%ENVIRONMENT REGOPE
--%ENVIRONMENT celldef
%ENVIRONMENT IOBLT	 -- used for iovalset  l_status = iovalset(19, 10001, l_value)


%SYSTEM
%COMMENT = 'DisplayPage v4.0'
%NOLOCKGROUP
%RWACCESS

%ALPHABETIZE
%INCLUDE klevkmsk
--%INCLUDE kltpctrl
%INCLUDE klevkeys
%INCLUDE kliotyps
--%INCLUDE swevrs4io
--%INCLUDE swevshll
--%INCLUDE atconst
--%INCLUDE swevrlng

VAR

  status,panes,page,page2,page3,id,id2,id3	     : INTEGER
  success,entry	     : INTEGER
  I		:INTEGER
  d_path,sv	:STRING[40]
  rv	:REAL
  restore	:BOOLEAN
  scrn_mode,l_i,tp_act_spid,tp_act_id	IN SHADOW FROM DISPPAGE	:INTEGER
  curscrn_spid,cursrcn_id IN SHADOW FROM DISPPAGE :ARRAY[8] OF INTEGER
  scrn_url IN SHADOW FROM DISPPAGE	:ARRAY[8] OF STRING[60]
   
%INCLUDE klrdutil 

-----------------------------------------------------------------------------
ROUTINE get_tpscrn
-----------------------------------------------------------------------------
BEGIN

	GET_VAR(status,'*SYSTEM*','$UI_CONFIG.$MODE[1]',scrn_mode,success) --get the number of screens
	GET_VAR(status,'*SYSTEM*','$TP_CURSCRN[1].$SP_ID',tp_act_spid,success) --get softpart id
	GET_VAR(status,'*SYSTEM*','$TP_CURSCRN[1].$SCRN_ID',tp_act_id,success) --get the screen id

	 FOR l_i = 1 TO 8 DO
	    GET_VAR(entry, '*system*', '$UI_CURSCRN[' + int_to_strg(l_i) + ',1].$SP_ID', curscrn_spid[l_i], status) --get screen softpart id
	    GET_VAR(entry, '*system*', '$UI_CURSCRN[' + int_to_strg(l_i) + ',1].$SCRN_ID', cursrcn_id[l_i], status) --get screen id

	    GET_VAR(entry, '*system*', '$UI_PANEDATA[' + int_to_strg(l_i) + '].$PAGEURL', scrn_url[l_i], status) --get screen id
	 ENDFOR

END get_tpscrn
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
ROUTINE restor_scrn
-----------------------------------------------------------------------------
BEGIN

SELECT (scrn_mode) OF --
  CASE (3):  -- Single display
	panes = 1
	page = tp_act_spid
	id =  tp_act_id

  CASE (4):  -- Single display
	panes = 1
	page = tp_act_spid
	id =  tp_act_id

  CASE (5):  -- Dual display
	panes = 2
	page = tp_act_spid
	id =  tp_act_id
	page2 = curscrn_spid[1]
	id2 =  cursrcn_id[1]

  CASE (6):  -- Triple display
	panes = 3
	page = tp_act_spid
	id =  tp_act_id
	page2 = curscrn_spid[1]
	id2 =  cursrcn_id[1]
	page3 = curscrn_spid[2]
	id3 =  cursrcn_id[2]

  CASE (13):  -- Dual display Horizontal
	panes = 2
	page = tp_act_spid
	id =  tp_act_id
	page2 = curscrn_spid[1]
	id2 =  cursrcn_id[1]

  CASE (14):  -- Triple display
	panes = 3
	page = tp_act_spid
	id =  tp_act_id
	page2 = curscrn_spid[1]
	id2 =  cursrcn_id[1]
	page3 = curscrn_spid[2]
	id3 =  cursrcn_id[2]

  ELSE:
	panes = 1
	page = tp_act_spid
	id =  tp_act_id
ENDSELECT --


END restor_scrn
-----------------------------------------------------------------------------

BEGIN 

	  GET_TPE_PRM(1,1,panes, rv, sv, status)
	  GET_TPE_PRM(2,1,page, rv, sv, status)
	  GET_TPE_PRM(3,1,id, rv, sv, status)
	  GET_TPE_PRM(4,1,page2, rv, sv, status)
	  GET_TPE_PRM(5,1,id2, rv, sv, status)
	  GET_TPE_PRM(6,1,page3, rv, sv, status)
	  GET_TPE_PRM(7,1,id3, rv, sv, status)

	restore = False
	IF panes = 9999 THEN
       restore = TRUE
       restor_scrn
	ELSE
        get_tpscrn --go get current screen data
	ENDIF

	IF (panes = 1) AND (restore = False) THEN
	  FORCE_MENU( tp_panel,  ky_shift )
	  delay 500
	  FORCE_MENU( tp_panel,  ky_disp_s)
	  delay 1000
	  FORCE_MENU( tp_panel,  ky_enter)
	  delay 1000
	  FORCE_SPMENU(tp_panel,page,id)   
	ENDIF
	IF (panes = 1) AND (restore = True) THEN
	  IF scrn_url[1] = '/frh/cgtp/widedev.stm' THEN
		  FORCE_MENU( tp_panel,  ky_shift )
		  delay 500
		  FORCE_MENU( tp_panel,  ky_disp_s)
		  delay 1000
		  FORCE_MENU( tp_panel,  ky_dn_arw)
		  delay 1000
		  FORCE_MENU( tp_panel,  ky_dn_arw)
		  delay 1000
		  FORCE_MENU( tp_panel,  ky_dn_arw)
		  delay 1000
		  FORCE_MENU( tp_panel,  ky_dn_arw)
		  delay 1000
		  FORCE_MENU( tp_panel,  ky_enter)
		  delay 1000
		  FORCE_SPMENU(tp_panel,page,id)   
	  ENDIF
	  IF scrn_url[1] = '/frh/cgtp/singldev.stm' THEN
		  FORCE_MENU( tp_panel,  ky_shift )
		  delay 500
		  FORCE_MENU( tp_panel,  ky_disp_s)
		  delay 1000
		  FORCE_MENU( tp_panel,  ky_dn_arw)
		  delay 1000
		  FORCE_MENU( tp_panel,  ky_dn_arw)
		  delay 1000
		  FORCE_MENU( tp_panel,  ky_dn_arw)
		  delay 1000
		  FORCE_MENU( tp_panel,  ky_enter)
		  delay 1000
		  FORCE_SPMENU(tp_panel,page,id)   
	  ENDIF
	  IF scrn_url[1] = '/frh/cgtp/wholedev.stm' THEN
		  FORCE_MENU( tp_panel,  ky_shift )
		  delay 500
		  FORCE_MENU( tp_panel,  ky_disp_s)
		  delay 1000
		  FORCE_MENU( tp_panel,  ky_enter)
		  delay 1000
		  FORCE_SPMENU(tp_panel,page,id)   
	  ENDIF
	ENDIF

	  --Force Dual Pane then set screens.
	IF (panes = 2) AND (restore = False) THEN
	  FORCE_MENU( tp_panel,  ky_shift )
	  delay 500
	  FORCE_MENU( tp_panel,  ky_disp_s)
	  delay 1000
	  FORCE_MENU( tp_panel,  ky_dn_arw)
	  delay 1000
	  FORCE_MENU( tp_panel,  ky_enter)
	  delay 1000
	  FORCE_SPMENU(tp2_panel,page2,id2)   
	  delay 1000
	  FORCE_SPMENU(tp_panel,page,id)   
	ENDIF
	IF (panes = 2) AND (restore = True) THEN
		  IF scrn_url[1] = '/frh/cgtp/dwiddev1.stm' THEN
			  FORCE_MENU( tp_panel,  ky_shift )
			  delay 500
			  FORCE_MENU( tp_panel,  ky_disp_s)
			  delay 1000
			  FORCE_MENU( tp_panel,  ky_dn_arw)
			  delay 1000
			  FORCE_MENU( tp_panel,  ky_dn_arw)
			  delay 1000
			  FORCE_MENU( tp_panel,  ky_dn_arw)
			  delay 1000
			  FORCE_MENU( tp_panel,  ky_dn_arw)
			  delay 1000
			  FORCE_MENU( tp_panel,  ky_dn_arw)
			  delay 1000
			  FORCE_MENU( tp_panel,  ky_enter)
			  delay 1000
			  FORCE_SPMENU(tp2_panel,page2,id2)   
			  delay 1000
			  FORCE_SPMENU(tp_panel,page,id)   
		  ENDIF
		  IF scrn_url[1] = '/frh/cgtp/doubdev1.stm' THEN
			  FORCE_MENU( tp_panel,  ky_shift )
			  delay 500
			  FORCE_MENU( tp_panel,  ky_disp_s)
			  delay 1000
			  FORCE_MENU( tp_panel,  ky_dn_arw)
			  delay 1000
			  FORCE_MENU( tp_panel,  ky_enter)
			  delay 1000
			  FORCE_SPMENU(tp2_panel,page2,id2)   
			  delay 1000
			  FORCE_SPMENU(tp_panel,page,id)   
		  ENDIF
	ENDIF

	  --Force Triple Pane then set screens.
	IF (panes = 3) AND (restore = False) THEN
		  FORCE_MENU( tp_panel,  ky_shift )
		  delay 500
		  FORCE_MENU( tp_panel,  ky_disp_s)
		  delay 1000
		  FORCE_MENU( tp_panel,  ky_dn_arw)
		  delay 1000
		  FORCE_MENU( tp_panel,  ky_dn_arw)
		  delay 1000
		  FORCE_MENU( tp_panel,  ky_enter)
		  delay 1000
		  FORCE_SPMENU(tp3_panel,page3,id3)   
		  delay 1000
		  FORCE_SPMENU(tp2_panel,page2,id2)   
		  delay 1000
		  FORCE_SPMENU(tp_panel,page,id)
	ENDIF
	  IF (panes = 3) AND (restore = TRUE) THEN
		  IF scrn_url[3] = '/frh/cgtp/twiddev3.stm' THEN
			  FORCE_MENU( tp_panel,  ky_shift )
			  delay 500
			  FORCE_MENU( tp_panel,  ky_disp_s)
			  delay 1000
			  FORCE_MENU( tp_panel,  ky_dn_arw)
			  delay 1000
			  FORCE_MENU( tp_panel,  ky_dn_arw)
			  delay 1000
			  FORCE_MENU( tp_panel,  ky_dn_arw)
			  delay 1000
			  FORCE_MENU( tp_panel,  ky_dn_arw)
			  delay 1000
			  FORCE_MENU( tp_panel,  ky_dn_arw)
			  delay 1000
			  FORCE_MENU( tp_panel,  ky_dn_arw)
			  delay 1000
			  FORCE_MENU( tp_panel,  ky_enter)
			  delay 1000
			  FORCE_SPMENU(tp3_panel,page3,id3)   
			  delay 1000
			  FORCE_SPMENU(tp2_panel,page2,id2)   
			  delay 1000
			  FORCE_SPMENU(tp_panel,page,id)
		  ENDIF	       
		  IF scrn_url[3] = '/frh/cgtp/tdev3.stm' THEN
			  FORCE_MENU( tp_panel,  ky_shift )
			  delay 500
			  FORCE_MENU( tp_panel,  ky_disp_s)
			  delay 1000
			  FORCE_MENU( tp_panel,  ky_dn_arw)
			  delay 1000
			  FORCE_MENU( tp_panel,  ky_dn_arw)
			  delay 1000
			  FORCE_MENU( tp_panel,  ky_enter)
			  delay 1000
			  FORCE_SPMENU(tp3_panel,page3,id3)   
			  delay 1000
			  FORCE_SPMENU(tp2_panel,page2,id2)   
			  delay 1000
			  FORCE_SPMENU(tp_panel,page,id)
		  ENDIF
	  ENDIF
	restore = False
END DISPPAGE