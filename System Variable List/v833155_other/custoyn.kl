-------------------------------------------------------------------------------
--	  Provides User with 50 Y/N Menus  1-25  GRS4 Standards.
--									   26-50 Custom Applications for user.
--
--	  yn_menu[1,1] = Menu Title 		[40 Characters MAX]
--	  yn_menu[1,2] = Menu Description	[40 Characters MAX]
--	  yn_menu[1,3] = Menu Option 1 		[40 Characters MAX]
--	  yn_menu[1,4] = Menu Option 2  	[40 Characters MAX]
--    yn_menu[1,5] = Menu Response Line [40 Characters MAX]
--
--    Example:
--	  yn_menu[1,1] = "SPR Henrob Rivet Fault"
--	  yn_menu[1,2] = " "
--	  yn_menu[1,3] = "Retry Rivet"
--	  yn_menu[1,4] = "Skip Rivet"
--	  yn_menu[1,5] = "[Retry] = 0  [Skip] = 1"
--					 Enter Selection = ( Valid response is 0 or 1)
--
-------------------------------------------------------------------------------
--    06-13-10   Steedlj Custom Yes/No or Skip/Retry Replacements, under same
--                       conditions as all boxes to repost.
--                       Cycle Start, TP reset, Panel Reset.
--    10/23/13   JJA R30iB Development
--    12/03/13   GJK Revised program to work with R30iB
--    05/14/14   GJK Removed Menus 30 and 31 and added them to custolst
--	  04/18/16	 BJK Added Request to continue menu for G4 V4.0
--    07/22/16   marchaka Conditioned some selections to not get set if an FDS system.
--                        The wizard handled it.
--    02-19-17 Kosaski a lot of changes and added user menu array
--    2017/03/28 marchaka Changed name of menu_screen routine to menu_scrn_yn.
--                        Change made so gmcellvr can initialize variable settings
--                        for the menu edit webscreens.  All three custo* programs
--                        had the name menu_screen, had to differentiate the routine
--                        between all the programs.
--    2018/01/29 marchaka Added check for ArcTool.  If ArcTool is loaded need to call recovery
--                        menu clean up from atshcust instead of atcustom.
--    2018/09/11 schoensm Added check for PushCorp Laser Clean, V8.33P06 updates
--    2019/01/13 kosaskrr Added default for menu item 30 which is overwritten in MHGRPCMN ManCycl_Cfrm routine
--    2019/06/27 marchaka Check if it is ArcTool in post_custyn routine.  This is to fix an issue where arctoolopt
--                        is uninitialized during a cold start.
--    2019/08/03 marchaka User user prompt box output instead of the system.
--    2020/10/07 schoensm V8.33P10 add items 33 and 34. 
-------------------------------------------------------------------------------
PROGRAM custoyn
-------------------------------------------------------------------------------

%RWACCESS
%NOPAUSESHFT
%NOLOCKGROUP
%COMMENT='GRS4Cust YN V4.6'
%NOPAUSE = ERROR + TPENABLE + COMMAND
--%NOABORT = ERROR + COMMAND

-- Softpart built-ins
%ENVIRONMENT SYSDEF -- needed for setting the $SCAN_TIME
%ENVIRONMENT REGOPE -- needed for the set register builtin
%ENVIRONMENT ioblt  -- needed for iovalset

%INCLUDE kliotyps
%INCLUDE gmcfgbdy  --GM bodyshop wizard variables

CONST

%INCLUDE gmcnstnt  -- Constant file for GM, including CH declarations from GM_CH_ID

  ER_WARN       =  0
  ER_PAUSE      =  1
  ER_ABORT      =  2
  TPI_ENABLE    = 249
  TPI_EDIT      = 145
  TPI_RESET     = 153  -- TP RESET
  CLR_SCRN	= 128 	--clear the screen
  CRSR_HOME	= 137 	--moves cursor to home position

  Revision = '2020-10-07'

VAR

 Cur_Revision IN SHADOW :STRING[32] -- Set equal to Version constant in initialization routine

  User_yn_menu  IN SHADOW FROM custoyn: ARRAY[25,5] OF STRING[40]
  yn_menu       IN SHADOW FROM custoyn: ARRAY[50,5] OF STRING[40]
  yn_menunum    IN SHADOW FROM custoyn: INTEGER
  yn_answer     IN SHADOW FROM custoyn: INTEGER
  check_val     IN SHADOW FROM custoyn: BOOLEAN
  prmpt_back    IN SHADOW FROM GMCUSTO  : BOOLEAN
  dnet64size    IN SHADOW FROM GMCUSTO  : BOOLEAN

  User_Aborted  , -- Used for identifying if the program was aborted or finished CH runing in ATCUSTOM to clean up
  Rcvry_Active IN SHADOW from ATCUSTOM : BOOLEAN -- Used for menu program indicating they are active
  Curnt_UMenu,  -- Used for the result of subtracting the users past arguments when greater than standard, menaing next array
  max_menu,     -- Indicates the max menu avaialble between  USER_YN_MENU and YN_MENU
  ans    				IN SHADOW : INTEGER
  ansd_yn       IN SHADOW : INTEGER -- RK added because ATCUSTOM needs unique for each menu
  yn_flag  			IN SHADOW : BOOLEAN
  l_i     : INTEGER
  l_j     : INTEGER
  status  : INTEGER
  psve    : INTEGER
  real_value : REAL
  real_value2: REAL
  str_value  : STRING[10]
  str_value2 : STRING[10]
  gm_status  : INTEGER

  arctoolopt:  BOOLEAN --Check if ArcTool
  user_abortat  , -- ArcTool --Used for identifying if the program was aborted or finished
  rcvry_act_at IN SHADOW FROM GMATVAR: BOOLEAN -- ArcTool Used for if the user recovery is being executed to start CH
  prmp_dout IN SHADOW FROM GMVARS: INTEGER  --User Prompt Box DO

%INCLUDE klrdutil -- Need for the CLR_STND_SCR routine
%INCLUDE gmrdutil  -- Need for the GM utility builins like Set_B_Svar)

ROUTINE ClnUpRcvyMnu FROM ATCUSTOM
ROUTINE ATClnRcvyMnu FROM ATSHCUST

-----------------------------------------------------------------------------
ROUTINE  init_menus
-- PURPOSE: set verify the variables used have beeen setup prior to using
--
--
-----------------------------------------------------------------------------
BEGIN
            -- Reset Menu Title, Line1, Line 2, Response
  FOR l_i = 1 to (ARRAY_LEN(yn_menu)) DO --jja R30iB
    FOR l_j = 1 to 5 DO
      IF UNINIT (yn_menu[l_i,l_j]) THEN
        IF l_j=1 THEN
          yn_menu[l_i,l_j] = 'Yes/No menu ' +int2str(l_i) + ' has NOT been Setup'
        ELSE
          yn_menu[l_i,l_j] = ''
        ENDIF
      ENDIF
    ENDFOR
  ENDFOR
  FOR l_i = 1 to (ARRAY_LEN(User_yn_menu)) DO
    FOR l_j = 1 to 5 DO
      IF UNINIT (User_yn_menu[l_i,l_j]) THEN
        IF l_j=1 THEN
          User_yn_menu[l_i,l_j] = 'User Yes/No menu ' +int2str(l_i) + ' has NOT been Setup'
        ELSE
          User_yn_menu[l_i,l_j] = ''
        ENDIF
      ENDIF
    ENDFOR
  ENDFOR

END  init_menus
-----------------------------------------------------------------------------
ROUTINE init_arc_yn
-- PURPOSE: INitialize Arc Variables on power up
--
--
-----------------------------------------------------------------------------
BEGIN

  IF UNINIT(arctoolopt) THEN --ArcTool?
    arctoolopt = FALSE --reset to FALSE
    IF Chk_Feature('H541') THEN -- is the Arc Tool option loaded
      arctoolopt = TRUE
    ENDIF
    IF Chk_Feature('H574') THEN -- is the LR Arc Tool option loaded
      arctoolopt = TRUE
    ENDIF
  ENDIF --ArcTool?

END init_arc_yn
-----------------------------------------------------------------------------
ROUTINE menu_scrn_yn
-- DESCRIPTION:
--   This routine is to define the GM USer Menu Screen
-----------------------------------------------------------------------------
VAR
  l_status: INTEGER
BEGIN

    -- CUSTONY / CUST LST                     1234567890123456789012345678901234567890
    Set_S_PVar('CUSTOYN', 'YN_MENU[1,1]', 'Request Continue in Teach')
    Set_S_PVar('CUSTOYN', 'YN_MENU[1,2]', '0 = Wait')
    Set_S_PVar('CUSTOYN', 'YN_MENU[1,3]', '1 = Continue')
    Set_S_PVar('CUSTOYN', 'YN_MENU[1,4]', '')
    Set_S_PVar('CUSTOYN', 'YN_MENU[1,5]', '')

    Set_S_PVar('CUSTOYN', 'YN_MENU[2,1]', 'Water Saver NOT Tripped')
    Set_S_PVar('CUSTOYN', 'YN_MENU[2,2]', 'Are all caps changed?')
    Set_S_PVar('CUSTOYN', 'YN_MENU[2,3]', '1 = Reset Stepper')
    Set_S_PVar('CUSTOYN', 'YN_MENU[2,4]', '0 = DO NOT Reset Stepper')
    Set_S_PVar('CUSTOYN', 'YN_MENU[2,5]', '')

    Set_S_PVar('CUSTOYN', 'YN_MENU[3,1]', 'Both Steppers are NOT Reset')
    Set_S_PVar('CUSTOYN', 'YN_MENU[3,2]', 'Verify that all caps are changed')
    Set_S_PVar('CUSTOYN', 'YN_MENU[3,3]', '1 = Reset All Steppers')
    Set_S_PVar('CUSTOYN', 'YN_MENU[3,4]', '0 = TO Abort Style')
    Set_S_PVar('CUSTOYN', 'YN_MENU[3,5]', '')

    Set_S_PVar('CUSTOYN', 'YN_MENU[4,1]', 'Have the caps been changed?')
    Set_S_PVar('CUSTOYN', 'YN_MENU[4,2]', '(All caps must be changed)')
    Set_S_PVar('CUSTOYN', 'YN_MENU[4,3]', '1 = Reset All Steppers')
    Set_S_PVar('CUSTOYN', 'YN_MENU[4,4]', '0 = TO Continue with old caps')
    Set_S_PVar('CUSTOYN', 'YN_MENU[4,5]', '')

    Set_S_PVar('CUSTOYN', 'YN_MENU[5,1]', 'Tip Dresser Dump Motion About to Occur') --used in td_pd_ck
    Set_S_PVar('CUSTOYN', 'YN_MENU[5,2]', 'Are You Sure?')
    Set_S_PVar('CUSTOYN', 'YN_MENU[5,3]', '1 = TO Dump Tip Dresser')
    Set_S_PVar('CUSTOYN', 'YN_MENU[5,4]', '0 = TO Skip Tip Dressing')
    Set_S_PVar('CUSTOYN', 'YN_MENU[5,5]', '')

    Set_S_PVar('CUSTOYN', 'YN_MENU[6,1]', 'Has Cutter 1 been replaced?') -- used in cutrlmt
    Set_S_PVar('CUSTOYN', 'YN_MENU[6,2]', '')
    Set_S_PVar('CUSTOYN', 'YN_MENU[6,3]', '1 = Cutter 1 was replaced')
    Set_S_PVar('CUSTOYN', 'YN_MENU[6,4]', '0 = Skip Replacement & Dress')
    Set_S_PVar('CUSTOYN', 'YN_MENU[6,5]', '')

    Set_S_PVar('CUSTOYN', 'YN_MENU[7,1]', 'FFR Gun Change was Initiated') -- used in ffrstud1
    Set_S_PVar('CUSTOYN', 'YN_MENU[7,2]', 'Would you like to change guns?')
    Set_S_PVar('CUSTOYN', 'YN_MENU[7,3]', '1 = Change Current Gun')
    Set_S_PVar('CUSTOYN', 'YN_MENU[7,4]', '0 = Keep Current Gun')
    Set_S_PVar('CUSTOYN', 'YN_MENU[7,5]', '')

    --V8.33P06 stand-alone configurations    
    Set_S_PVar('CUSTOYN', 'YN_MENU[8,1]', 'SBI Plasma Weld FAULT') -- used in PushCorp Laser Clean Process
    Set_S_PVar('CUSTOYN', 'YN_MENU[8,2]', 'SBI Sequence Not Completed')
    Set_S_PVar('CUSTOYN', 'YN_MENU[8,3]', '0 = Retry Weld')
    Set_S_PVar('CUSTOYN', 'YN_MENU[8,4]', '1 = Skip Weld')
    Set_S_PVar('CUSTOYN', 'YN_MENU[8,5]', '')

    Set_S_PVar('CUSTOYN', 'YN_MENU[9,1]', 'Have The Weld Caps been changed?')
    Set_S_PVar('CUSTOYN', 'YN_MENU[9,2]', '1 = Yes all caps were changed')
    Set_S_PVar('CUSTOYN', 'YN_MENU[9,3]', '0 = No caps were changed')
    Set_S_PVar('CUSTOYN', 'YN_MENU[9,4]', '')
    Set_S_PVar('CUSTOYN', 'YN_MENU[9,5]', 'Return to User Screen after')

    Set_S_PVar('CUSTOYN', 'YN_MENU[10,1]', 'Have the Cap Cartridges been reloaded')
    Set_S_PVar('CUSTOYN', 'YN_MENU[10,2]', 'and clamped?')
    Set_S_PVar('CUSTOYN', 'YN_MENU[10,3]', '1 = Cartridges Reloaded/Clamped')
    Set_S_PVar('CUSTOYN', 'YN_MENU[10,4]', '0 = Cartridges not reloaded')
    Set_S_PVar('CUSTOYN', 'YN_MENU[10,5]', 'Return to User Screen after')

    Set_S_PVar('CUSTOYN', 'YN_MENU[11,1]', 'Gun Has Not Moved Fault')
    Set_S_PVar('CUSTOYN', 'YN_MENU[11,2]', '#1 to Retry Rivet')
    Set_S_PVar('CUSTOYN', 'YN_MENU[11,3]', '#0 to Skip to Next Rivet')
    Set_S_PVar('CUSTOYN', 'YN_MENU[11,4]', 'Return to User Screen after debug')

    Set_S_PVar('CUSTOYN', 'YN_MENU[12,1]', 'FFR Recovery Choices')
    Set_S_PVar('CUSTOYN', 'YN_MENU[12,2]', 'Retry Allowed')
    Set_S_PVar('CUSTOYN', 'YN_MENU[12,3]', '#1 to Retry Rivet')
    Set_S_PVar('CUSTOYN', 'YN_MENU[12,4]', '#0 for FFR')
    Set_S_PVar('CUSTOYN', 'YN_MENU[12,5]', 'Return to User Screen after debug')

    Set_S_PVar('CUSTOYN', 'YN_MENU[13,1]', 'FFR Recovery Choices')
    Set_S_PVar('CUSTOYN', 'YN_MENU[13,2]', 'Retry Not Allowed')
    Set_S_PVar('CUSTOYN', 'YN_MENU[13,3]', '#1 for FFR')
    Set_S_PVar('CUSTOYN', 'YN_MENU[13,4]', '#0 for Skip')
    Set_S_PVar('CUSTOYN', 'YN_MENU[13,5]', 'Return to User Screen after debug')

    Set_S_PVar('CUSTOYN', 'YN_MENU[14,1]', 'Gun Not Open')
    Set_S_PVar('CUSTOYN', 'YN_MENU[14,2]', '#1 to Retry')
    Set_S_PVar('CUSTOYN', 'YN_MENU[14,3]', '#0 Not Safe To Move')
    Set_S_PVar('CUSTOYN', 'YN_MENU[14,4]', 'Return to User Screen after debug')

    Set_S_PVar('CUSTOYN', 'YN_MENU[15,1]', 'FFR Maintenance Position Choices')
    Set_S_PVar('CUSTOYN', 'YN_MENU[15,2]', 'Continue Next/Last')
    Set_S_PVar('CUSTOYN', 'YN_MENU[15,3]', '#1 for Continue Next')
    Set_S_PVar('CUSTOYN', 'YN_MENU[15,4]', '#0 for Continue Last')
    Set_S_PVar('CUSTOYN', 'YN_MENU[15,5]', 'Return to User Screen after debug')

    Set_S_PVar('CUSTOYN', 'YN_MENU[16,1]', 'Have Projection Weld Caps Changed?')
    Set_S_PVar('CUSTOYN', 'YN_MENU[16,2]', '1 = Yes all PW caps were changed')
    Set_S_PVar('CUSTOYN', 'YN_MENU[16,3]', '0 = No caps were changed')
    Set_S_PVar('CUSTOYN', 'YN_MENU[16,4]', 'Return to User Screen after debug')

    Set_S_PVar('CUSTOYN', 'YN_MENU[17,1]', 'Gun Not in Initial Position')
    Set_S_PVar('CUSTOYN', 'YN_MENU[17,2]', '#1 to recheck gun positon')
    Set_S_PVar('CUSTOYN', 'YN_MENU[17,3]', '#0 to skip dimple and continue')
    Set_S_PVar('CUSTOYN', 'YN_MENU[17,4]', 'Return to User Screen after debug')

    Set_S_PVar('CUSTOYN', 'YN_MENU[18,1]', 'GUN NOT CLOSED')
    Set_S_PVar('CUSTOYN', 'YN_MENU[18,2]', '#1 to retry')
    Set_S_PVar('CUSTOYN', 'YN_MENU[18,3]', '#0 to skip dimple and continue')
    Set_S_PVar('CUSTOYN', 'YN_MENU[18,4]', 'Return to User Screen after debug')

    Set_S_PVar('CUSTOYN', 'YN_MENU[19,1]', 'GUN NOT OPENED')
    Set_S_PVar('CUSTOYN', 'YN_MENU[19,2]', '#1 to Retry')
    Set_S_PVar('CUSTOYN', 'YN_MENU[19,3]', '#0 to Recheck Gun Opened')
    Set_S_PVar('CUSTOYN', 'YN_MENU[19,4]', 'Return to User Screen after debug')

    Set_S_PVar('CUSTOYN', 'YN_MENU[20,1]', '---- Cap Change not Detected ----')           --from ccmenuyn
    Set_S_PVar('CUSTOYN', 'YN_MENU[20,2]', 'Did not detect a cap change on Gun 1.')
    Set_S_PVar('CUSTOYN', 'YN_MENU[20,3]', '  What would you like to do?')
    Set_S_PVar('CUSTOYN', 'YN_MENU[20,4]', '1 = Reset TipWear and Stepper')
    Set_S_PVar('CUSTOYN', 'YN_MENU[20,5]', '0 = Do not Reset TipWear or Stepper ')

    Set_S_PVar('CUSTOYN', 'YN_MENU[21,1]', '---- Cap Change not Detected ----')
    Set_S_PVar('CUSTOYN', 'YN_MENU[21,2]', 'Did not detect a cap change on Gun 2.')
    Set_S_PVar('CUSTOYN', 'YN_MENU[21,3]', '  What would you like to do?')
    Set_S_PVar('CUSTOYN', 'YN_MENU[21,4]', '1 = Reset TipWear and Stepper')
    Set_S_PVar('CUSTOYN', 'YN_MENU[21,5]', '0 = Do not Reset TipWear or Stepper ')

    Set_S_PVar('CUSTOYN', 'YN_MENU[22,1]', '---- Cap Change not Detected ----')
    Set_S_PVar('CUSTOYN', 'YN_MENU[22,2]', 'Did not detect a cap change on Gun 3.')
    Set_S_PVar('CUSTOYN', 'YN_MENU[22,3]', '  What would you like to do?')
    Set_S_PVar('CUSTOYN', 'YN_MENU[22,4]', '1 = Reset TipWear and Stepper')
    Set_S_PVar('CUSTOYN', 'YN_MENU[22,5]', '0 = Do not Reset TipWear or Stepper ')

    Set_S_PVar('CUSTOYN', 'YN_MENU[23,1]', '---- Cap Change not Detected ----')
    Set_S_PVar('CUSTOYN', 'YN_MENU[23,2]', 'Did not detect a cap change on Gun 4.')
    Set_S_PVar('CUSTOYN', 'YN_MENU[23,3]', '  What would you like to do?')
    Set_S_PVar('CUSTOYN', 'YN_MENU[23,4]', '1 = Reset TipWear and Stepper')
    Set_S_PVar('CUSTOYN', 'YN_MENU[23,5]', '0 = Do not Reset TipWear or Stepper ')

    Set_S_PVar('CUSTOYN', 'YN_MENU[24,1]', 'A Cap Change was Detected on Gun 1')
    Set_S_PVar('CUSTOYN', 'YN_MENU[24,2]', '    but was not requested.')
    Set_S_PVar('CUSTOYN', 'YN_MENU[24,3]', '  What would you like to do?')
    Set_S_PVar('CUSTOYN', 'YN_MENU[24,4]', '1 = Reset TipWear and Stepper')
    Set_S_PVar('CUSTOYN', 'YN_MENU[24,5]', '0 = Do not Reset TipWear or Stepper ')

    Set_S_PVar('CUSTOYN', 'YN_MENU[25,1]', 'A Cap Change was Detected on Gun 2')
    Set_S_PVar('CUSTOYN', 'YN_MENU[25,2]', '    but was not requested.')
    Set_S_PVar('CUSTOYN', 'YN_MENU[25,3]', '  What would you like to do?')
    Set_S_PVar('CUSTOYN', 'YN_MENU[25,4]', '1 = Reset TipWear and Stepper')
    Set_S_PVar('CUSTOYN', 'YN_MENU[25,5]', '0 = Do not Reset TipWear or Stepper ')

    Set_S_PVar('CUSTOYN', 'YN_MENU[26,1]', 'A Cap Change was Detected on Gun 3')
    Set_S_PVar('CUSTOYN', 'YN_MENU[26,2]', '    but was not requested.')
    Set_S_PVar('CUSTOYN', 'YN_MENU[26,3]', '  What would you like to do?')
    Set_S_PVar('CUSTOYN', 'YN_MENU[26,4]', '1 = Reset TipWear and Stepper')
    Set_S_PVar('CUSTOYN', 'YN_MENU[26,5]', '0 = Do not Reset TipWear or Stepper ')

    Set_S_PVar('CUSTOYN', 'YN_MENU[27,1]', 'A Cap Change was Detected on Gun 4')
    Set_S_PVar('CUSTOYN', 'YN_MENU[27,2]', '    but was not requested.')
    Set_S_PVar('CUSTOYN', 'YN_MENU[27,3]', '  What would you like to do?')
    Set_S_PVar('CUSTOYN', 'YN_MENU[27,4]', '1 = Reset TipWear and Stepper')
    Set_S_PVar('CUSTOYN', 'YN_MENU[27,5]', '0 = Do not Reset TipWear or Stepper ')  --from ccmenuyn

    Set_S_PVar('CUSTOYN', 'YN_MENU[28,1]', '------- TIP CHANGE ERROR -------')
    Set_S_PVar('CUSTOYN', 'YN_MENU[28,2]', ' TIP MEASUREMENT FAILED')
    Set_S_PVar('CUSTOYN', 'YN_MENU[28,3]', '  WERE THE CAPS CHANGED?')
    Set_S_PVar('CUSTOYN', 'YN_MENU[28,4]', ' #1 = YES CAPS WERE CHANGED')
    Set_S_PVar('CUSTOYN', 'YN_MENU[28,5]', ' #0 = NO CAPS WERE NOT CHANGED')

    Set_S_PVar('CUSTOYN', 'YN_MENU[29,1]', '------- TIP CHANGE ERROR -------')
    Set_S_PVar('CUSTOYN', 'YN_MENU[29,2]', ' CAP LOSS NOT DETECTED')
    Set_S_PVar('CUSTOYN', 'YN_MENU[29,3]', '    WERE THE CAPS CHANGED?')
    Set_S_PVar('CUSTOYN', 'YN_MENU[29,4]', ' #1 = YES CAPS WERE CHANGED')
    Set_S_PVar('CUSTOYN', 'YN_MENU[29,5]', ' #0 = NO CAPS WERE NOT CHANGED')

    IF UNINIT(YN_MENU[30,1]) THEN
      Set_S_PVar('CUSTOYN', 'YN_MENU[30,1]', '------- MENU RESERVED -------')
      Set_S_PVar('CUSTOYN', 'YN_MENU[30,2]', ' For MHGRIP utility for valve')
      Set_S_PVar('CUSTOYN', 'YN_MENU[30,3]', ' prompt for manual cycle in')
      Set_S_PVar('CUSTOYN', 'YN_MENU[30,4]', ' teach.')
      Set_S_PVar('CUSTOYN', 'YN_MENU[30,5]', ' ')
    ENDIF

    Set_S_PVar('CUSTOYN', 'YN_MENU[31,1]', '------- VISION -------')
    Set_S_PVar('CUSTOYN', 'YN_MENU[31,2]', ' IS ROBOT POSITIONED AT')
    Set_S_PVar('CUSTOYN', 'YN_MENU[31,3]', '   STATUS OF FIXTURE POS?')
    Set_S_PVar('CUSTOYN', 'YN_MENU[31,4]', ' #1 = YES')
    Set_S_PVar('CUSTOYN', 'YN_MENU[31,5]', ' #0 = NO')

    Set_S_PVar('CUSTOYN', 'YN_MENU[32,1]', '------- VISION -------')
    Set_S_PVar('CUSTOYN', 'YN_MENU[32,2]', ' IS RACK EMPTY?')
    Set_S_PVar('CUSTOYN', 'YN_MENU[32,3]', '   ')
    Set_S_PVar('CUSTOYN', 'YN_MENU[32,4]', ' #1 = YES')
    Set_S_PVar('CUSTOYN', 'YN_MENU[32,5]', ' #0 = NO')
                                          
    Set_S_PVar('CUSTOYN', 'YN_MENU[33,1]', '-----------------SPR--------------------')
    Set_S_PVar('CUSTOYN', 'YN_MENU[33,2]', '-------Rivets removed from setter?------')
    Set_S_PVar('CUSTOYN', 'YN_MENU[33,3]', '----------------------------------------')
    Set_S_PVar('CUSTOYN', 'YN_MENU[33,4]', '--------------#1 = YES------------------')
    Set_S_PVar('CUSTOYN', 'YN_MENU[33,5]', '--------------#0 = NO-------------------')
    
    Set_S_PVar('CUSTOYN', 'YN_MENU[34,1]', '-----------------SPR--------------------')
    Set_S_PVar('CUSTOYN', 'YN_MENU[34,2]', '----Is Calibration block installed?-----')
    Set_S_PVar('CUSTOYN', 'YN_MENU[34,3]', '----------------------------------------')
    Set_S_PVar('CUSTOYN', 'YN_MENU[34,4]', '--------------#1 = YES------------------')
    Set_S_PVar('CUSTOYN', 'YN_MENU[34,5]', '--------------#0 = NO-------------------')

    Set_S_PVar('CUSTOYN', 'YN_MENU[35,1]', '--Dimple in Teach Mode--')
    Set_S_PVar('CUSTOYN', 'YN_MENU[35,2]', 'Cannot stroke Dimpler without metal')
    Set_S_PVar('CUSTOYN', 'YN_MENU[35,3]', ' Is part/metal present?')
    Set_S_PVar('CUSTOYN', 'YN_MENU[35,4]', '1 = Yes part/metal present')
    Set_S_PVar('CUSTOYN', 'YN_MENU[35,5]', '0 = No part/metal present')

END menu_scrn_yn
-----------------------------------------------------------------------------
ROUTINE ShowSetings
-- PURPOSE: to show the user the proper settings
--
--
-- INPUT:
--            -
-- OUTPUT:
--            -
-- CALLED BY:
--
--
-----------------------------------------------------------------------------
BEGIN

     WRITE TPERROR(CHR(129))-- Clear line from previous writing
     WRITE TPDISPLAY (CHR(CLR_SCRN),CHR(CRSR_HOME))
     WRITE TPPROMPT(CHR(129))-- Clear line from previous writing
     CANCEL FILE TPPROMPT -- Need to cancel read if aborting

  --Custom List Prompts
            --1234567890123456789012345678901234567890
      WRITE ('The Call to the CUSTOYN program has an',cr)
      WRITE ('error. To use the CUSTOYN program you',cr)
      WRITE ('have to pass 2 arguments to tell the',cr)
      WRITE ('program what you want to do:',cr,cr)
      WRITE ('AR[1]= Y/N Menu Text to Display.(1-',max_menu,')',cr)
      WRITE ('AR[2]= Data Register for Answer.(40)',cr)

      WRITE ('The program has to ABORT because of',cr)
      WRITE ('this error to allow correcting.',cr)
      WRITE TPPROMPT(CR,'Please Correct Program and Start Again')

  FORCE_SPMENU(tp_panel,SPI_TPUSER,1)

END ShowSetings
-----------------------------------------------------------------------------
ROUTINE Post_Custyn
-- DESCRIPTION:
--   This routine Clears the user screen and Posts Custoyn to it
-----------------------------------------------------------------------------
VAR
  l_status: INTEGER

BEGIN
-- Had to have this here in case repost is triggered and never ran
 IF UNINIT(yn_menunum) THEN
   yn_menunum = 1
 ENDIF

 init_menus -- need to ensure menus are setup in case called from ATCUSTOM reset

 init_arc_yn --initialize ArcTool VAR not stored on memory on power up

IF dnet64size = FALSE THEN
  gm_status = iovalset(2, prmp_dout, 1)
  IF (gm_status <> 0) THEN 
    POST_ERR(38000, 'Failed to set User Manual Inteverntion DO to ON', 0, 0)
  ENDIF 
ENDIF

     WRITE TPERROR(CHR(129))-- Clear line from previous writing
     WRITE TPDISPLAY (CHR(CLR_SCRN),CHR(CRSR_HOME))
     WRITE TPPROMPT(CHR(129))-- Clear line from previous writing
     CANCEL FILE TPPROMPT -- Need to cancel read if aborting

      --Custom YN or Skip/Retry Prompts
      WRITE (cr,cr,'---------------------------------',cr)

        IF (yn_menunum <= ARRAY_LEN(yn_menu)) THEN
          WRITE (yn_menu[yn_menunum,1],cr)
          WRITE (yn_menu[yn_menunum,2],cr)
          WRITE (yn_menu[yn_menunum,3],cr)
          WRITE (yn_menu[yn_menunum,4],cr)
          WRITE (yn_menu[yn_menunum,5],cr)
        ELSE -- need to post users menu
          IF (yn_menunum > ARRAY_LEN(yn_menu)) THEN
            Curnt_UMenu = 0
            Curnt_UMenu = yn_menunum - (ARRAY_LEN(yn_menu))
            IF (Curnt_UMenu >0) AND (Curnt_UMenu <=(ARRAY_LEN(User_yn_menu)))  THEN
              WRITE (User_yn_menu[Curnt_UMenu,1],cr)
              WRITE (User_yn_menu[Curnt_UMenu,2],cr)
              WRITE (User_yn_menu[Curnt_UMenu,3],cr)
              WRITE (User_yn_menu[Curnt_UMenu,4],cr)
              WRITE (User_yn_menu[Curnt_UMenu,5],cr)
            ELSE
              POST_ERR(38000, 'Unknown USER menu'+int2str(Curnt_UMenu), 0, 0) --
            ENDIF
          ENDIF
        ENDIF

      WRITE ('---------------------------------',cr)
      WRITE TPPROMPT(CR,'Enter selection = ' )

  FORCE_SPMENU(tp_panel,SPI_TPUSER,1)

  IF (arctoolopt = TRUE) THEN --ArcTool
    rcvry_act_at = TRUE --set flag for atshcust to know started this
  ELSE
    Rcvry_Active = TRUE -- set flag for GMATCSTM to know started this
  ENDIF --ArcTool

END Post_Custyn

-----------------------------------------------------------------------------
-- custoyn
-----------------------------------------------------------------------------

BEGIN --custoyn

  yn_flag = FALSE
  Cur_Revision = Revision

  init_arc_yn

 init_menus -- need to ensure menus are setup

  IF UNINIT(yn_answer) THEN
    yn_answer = 40
  ENDIF
  IF UNINIT(check_val) THEN
    check_val = TRUE
  ENDIF
    ansd_yn = -1

  GET_TPE_PRM(1,1, yn_menunum, real_value, str_value, status)   -- Get the MENU Number
  GET_TPE_PRM(2,1, yn_answer, real_value2, str_value2, status)  -- Get the R[X] to write the answer to.

-- Checks to make sure your using valid arguements.
-- turns off the parameter checking.

max_menu = (ARRAY_LEN(User_yn_menu)) + (ARRAY_LEN(yn_menu))

IF check_val = TRUE THEN
  IF (yn_menunum < 1) OR (yn_menunum > max_menu)THEN
    ShowSetings
    POST_ERR(38000,'CUSTOYN AR[1]='+int2str(yn_menunum)+' Must be <= '+int2str(max_menu),0,2)
  ENDIF
  IF (yn_answer < 1) OR (yn_answer > 999) THEN
    ShowSetings
    POST_ERR(38000,'CUSTOYN AR[2]='+int2str(yn_answer)+' Needs < 999',0,2 )
  ENDIF
ENDIF

  IF (arctoolopt = TRUE) THEN --ArcTool
    PURGE CONDITION[CHATWatchAbr] -- Purge to clear condition uses same one in All CUSTO 3 programs
    CONDITION[ChATWatchAbr]: --
      WHEN (ABORT) DO --
        user_abortat = TRUE -- trigger routine in ATCUSTOM to clean up
     ENDCONDITION --
     ENABLE CONDITION[ChATWatchAbr]
  ELSE --SpotTool+
    PURGE CONDITION[CHWatchAbort] -- Purge to clear condition uses same one in All CUSTO 3 programs
    CONDITION[ChWatchAbort]: --
      WHEN (ABORT) DO --
        user_aborted = TRUE -- trigger routine in ATCUSTOM to clean up
     ENDCONDITION --
     ENABLE CONDITION[ChWatchAbort]
  ENDIF


SET_INT_REG(yn_answer, -1, status) -- Set the register to NON functional answer

menu_scrn_yn  -- setup the display
IF (yn_menunum <= ARRAY_LEN(yn_menu)) THEN
  POST_ERR(38000, yn_menu[yn_menunum,1], 0, 0) -- post the header to alarm screen
ELSE
  IF (yn_menunum > ARRAY_LEN(yn_menu)) THEN
    Curnt_UMenu = 0
    Curnt_UMenu = yn_menunum - (ARRAY_LEN(yn_menu))
    IF (Curnt_UMenu >0) AND (Curnt_UMenu <=(ARRAY_LEN(User_yn_menu)))  THEN
      POST_ERR(38000, User_yn_menu[Curnt_UMenu,1], 0, 0) -- post the header to alarm screen
    ELSE
      POST_ERR(38000, 'Unknown USER menu'+int2str(Curnt_UMenu), 0, 0) --
    ENDIF
  ENDIF
ENDIF

IF status = 0 THEN

    REPEAT

      yn_flag = TRUE
      Post_Custyn
      READ TPPROMPT(ansd_yn)

      IF (UNINIT(ansd_yn)) THEN -- Had to add this because if previous ran aborted before
        ansd_yn = -1            -- getting answer, then will have uninit data next time.
        delay 1000          -- this does not seem to fix it, it keeps returning UNINIT
      ELSE                  -- but returns without any key strokes? NEED "CLOSE FILE TPPROMPT"
        IF (ansd_yn < 0) OR (ansd_yn > 1) THEN
          WRITE TPPROMPT(ansd_yn,' is NOT valid please enter again')
          Delay 3000
        ENDIF
      ENDIF

    UNTIL (ansd_yn = 0 ) OR (ansd_yn = 1 )

   IF (arctoolopt = TRUE) THEN  --ArcTool
      DISABLE CONDITION[ChATWatchAbr]
   ELSE --SpotTool+
     DISABLE CONDITION[ChWatchAbort]
   ENDIF

   IF (ansd_yn = 0) or (ansd_yn = 1) THEN
       SET_INT_REG(yn_answer, ansd_yn, status) -- Set R[X] for answer
      -- yn_flag = FALSE  Need to leave True so CLEANUP routine in GMATCSTM can use
   ENDIF

   IF (arctoolopt = TRUE) THEN  --ArcTool
     ATClnRcvyMnu -- Reset all variables and log the user answer
   ELSE --SpotTool+
     ClnUpRcvyMnu
   ENDIF

ENDIF

END custoyn









