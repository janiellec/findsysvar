-------------------------------------------------------------------------------
--
--    8-AUG-2015 DCDMenu.  Created by: Ron MacQuarrie
--    used to give meaningful DCD options in teach
--             
--    Program utilizes 1 argument(s) 
--
--    [AR1] menu number
--
--    Program requires the use of DCD_TEXT.PC to hold 
--    text options for DCD calls.
--   
--		If no arguments provided, we will post default menu
--		and assume the default register of R[151]
--
--    Utility created to populate DCD_TEXT.PC (DCDTEXT.CM) 
--
--     UPDATES / REVISIONS
--    
--    03-AUG-2018
--    1) Increase menu items 
--		2) Add ability to next page for more options 
--
-------------------------------------------------------------------------------
PROGRAM DCDTCH
-------------------------------------------------------------------------------

%RWACCESS
%NOPAUSESHFT
%NOLOCKGROUP
%COMMENT= 'Post DCD Options'
%NOPAUSE = ERROR + TPENABLE + COMMAND
%NOABORT = ERROR + COMMAND

-- Softpart built-ins
%ENVIRONMENT SWGDEF
%ENVIRONMENT proddef
%ENVIRONMENT SYSDEF
%ENVIRONMENT strng
%ENVIRONMENT REGOPE
%ENVIRONMENT UIF
%ENVIRONMENT ioblt
%ENVIRONMENT IOSETUP
%ENVIRONMENT MULTI

VAR

  ver_num        IN SHADOW  :STRING[40]
  ans            IN SHADOW  :INTEGER
  mnunum         IN SHADOW  :INTEGER        -- not cleared with cycle power
  max_dcd        IN SHADOW  :INTEGER
  Title          IN SHADOW  :STRING[40]
  curntmenu      IN SHADOW  :STRING[40]
  currentscr     IN SHADOW  :STRING[40]
  dashes         IN SHADOW  :STRING[45]     -- not cleared with cycle power
  data_type      IN SHADOW  :INTEGER
  entry          IN SHADOW  :INTEGER
  event_no       IN SHADOW  :INTEGER
  i              IN SHADOW  :INTEGER
  Choices        IN SHADOW  :INTEGER
  PostSIndex     IN SHADOW  :INTEGER
  PostEIndex     IN SHADOW  :INTEGER
  int_value      IN SHADOW  :INTEGER
  DCD_TEXT1      IN SHADOW  :ARRAY[20] OF STRING[40]
  DCD_DEFAULT    IN SHADOW  :ARRAY[10] OF STRING[40]
  real_value     IN SHADOW  :REAL
  STATUS         IN SHADOW  :INTEGER        -- not cleared with cycle power
  string_value   IN SHADOW  :STRING[40]
  valid_ans      IN SHADOW  :BOOLEAN        -- not cleared with cycle power
  valid_text     IN SHADOW  :STRING[40]
  var2check      IN SHADOW  :STRING[40]
  var2run        IN SHADOW  :STRING[40]
  emptyline                  :STRING[40]
  pwrcycled                 :STRING[3]
  lineuninit								:BOOLEAN
  

      
%INCLUDE kliosop
%INCLUDE klrdutil
%INCLUDE klrdread


ROUTINE WriteConsole(p_message : STRING) FROM swutils


----------------------------------------------------------------------------
ROUTINE initialize
----------------------------------------------------------------------------
BEGIN	

--DCD_DEFAULT[1] =  '1234567890123456789012345678901234567890'  
  Title =  'Default DCD Teach Manual Selection Menu'
  DCD_DEFAULT[1] = 	'Value entered will then run "SELECT" in'
  DCD_DEFAULT[2] = 	'program that called DCD. Please verify'
  DCD_DEFAULT[3] = 	'the DCD options if unsure! (1-31)'
  DCD_DEFAULT[4] = 	''
  DCD_DEFAULT[5] = 	'After verifying use MENU #9 to return'
  DCD_DEFAULT[6] = 	'to this screen to make selection.'
  
  
  FOR i = 1 TO 20 DO --up to 20 because unitintialize data
	SET_VAR (entry,'DCDTCH', 'DCD_TEXT1[' + int_to_strg(i) + ']' ,'',STATUS)	
  ENDFOR

   ver_num      = 'Aug 21,2015' -- set version date
   valid_ans    = FALSE         -- reset answer 
   dashes       = '----------------------------------------'
   mnunum       = 0
   max_dcd      = 31
   Choices      = 0

END initialize

----------------------------------------------------------------------------
ROUTINE tstArgument
----------------------------------------------------------------------------
BEGIN	


  -- get parameter 1 (parameter)

  GET_TPE_PRM(1, data_type, event_no,real_value,string_value,STATUS)
   mnunum = event_no

	-- test mnunum to be valid

  IF STATUS<>0 THEN  -- 17042 "ROUT-042 TPE parameters do not exist"
   -- missing Argument
   
	 mnunum = 100 		-- set to the default text
	 
  ELSE
    -- check to see if value is valid
    IF (mnunum = 0) OR (mnunum >70) THEN
      -- INVALID ENTRY
      
      --
      -- ******************************************
      -- Discuss with Bill if he wants to fault or go back to default?
      -- or Display fault then display default
      -- ******************************************
      --
      
POSTERR1::
      FORCE_SPMENU(TP_PANEL,SPI_TPUSER,1)
--    WRITE ('1234567890123456789012345678901234567890')
      WRITE (CR,dashes,CR)
      WRITE ('',CR)
      WRITE ('DCD Menu call is out of range.',CR)
      WRITE ('',CR)
      WRITE ('Please return and correct the call.',CR)
      WRITE ('',CR)
      WRITE ('Call requires a valid menu number  ',CR)
      WRITE ('between 1 - 70.',CR)
      WRITE ('',CR)
      WRITE (dashes)
      WRITE TPFUNC (CR,'  OK                                           ',CR)   -- Clear Fkey display
      pwrcycled = 'NO'

      ABORT 


--      POST_ERR(12322,'', 0, 1) 
    ENDIF
  ENDIF

END tstArgument


----------------------------------------------------------------------------
ROUTINE getDCDStr
----------------------------------------------------------------------------

BEGIN

IF ((mnunum >=1) AND (mnunum <70)) THEN    -- NOT DEFAULT, Argument was present

  lineuninit = TRUE

  -- Get Title of menu
  var2check = ('DCD_USER[' + int_to_strg(mnunum) +'].TITLE')
  GET_VAR(entry,'DCD_TEXT',var2check,Title,STATUS)
  		
  IF (STATUS <>0) THEN  -- incountered an issue, line unitintialized or file not found
     GOTO POSTERR2	
  ENDIF	

  -- Get number of choices
  var2check = ('DCD_USER[' + int_to_strg(mnunum) +'].NUMOFCHOICES')
  GET_VAR(entry,'DCD_TEXT',var2check,Choices,STATUS)
  		
  IF ((STATUS <>0) OR (Choices >20)) THEN  -- incountered an issue, line unitintialized or value out of range
     GOTO POSTERR2	
  ENDIF	

  -- Get the amount of lines indicated by number of choices
  FOR i = 1 TO Choices DO     --up to 20 lines of data
     	var2check = ('DCD_USER[' + int_to_strg(mnunum) +'].TEXT['+ int_to_strg(i)+ ']')
  		GET_VAR(entry,'DCD_TEXT',var2check,var2run,STATUS)
  		
  	IF (STATUS <>0) THEN  -- incountered an issue, line unitintialized
  		emptyline = (' ')
  	  SET_VAR(entry,'DCDTCH','DCD_TEXT1[' + int_to_strg(i) + ']',emptyline,STATUS)

  	ELSE
  		
  	  SET_VAR(entry,'DCDTCH','DCD_TEXT1[' + int_to_strg(i) + ']',var2run,STATUS)
  		lineuninit = FALSE  -- Found valid line in menu
  	ENDIF	
  	
  ENDFOR
   
   -- Add lines to complet pages
    
   IF (Choices <6) THEN  -- Need to add blank lines to complete first page.
   	For i = (Choices +1) TO 6 DO
   		emptyline = (' ')
  	  SET_VAR(entry,'DCDTCH','DCD_TEXT1[' + int_to_strg(i) + ']',emptyline,STATUS)
   	ENDFOR 
   ENDIF

   IF ((Choices >6) AND (Choices <10))THEN  -- Need to add blank lines to complete 2nd page.
   	For i = (Choices +1) TO 10 DO
   		emptyline = (' ')
  	  SET_VAR(entry,'DCDTCH','DCD_TEXT1[' + int_to_strg(i) + ']',emptyline,STATUS)
   	ENDFOR 
   ENDIF

   IF ((Choices >10) AND (Choices <15))THEN  -- Need to add blank lines to complete 3rd page.
   	For i = (Choices +1) TO 15 DO
   		emptyline = (' ')
  	  SET_VAR(entry,'DCDTCH','DCD_TEXT1[' + int_to_strg(i) + ']',emptyline,STATUS)
   	ENDFOR 
   ENDIF

   IF ((Choices >15) AND (Choices <20))THEN  -- Need to add blank lines to complete 4th page.
   	For i = (Choices +1) TO 20 DO
   		emptyline = (' ')
  	  SET_VAR(entry,'DCDTCH','DCD_TEXT1[' + int_to_strg(i) + ']',emptyline,STATUS)
   	ENDFOR 
   ENDIF


    IF (lineuninit) THEN  -- did not find any valid lines in menu
        POSTERR2::
          FORCE_SPMENU(TP_PANEL,SPI_TPUSER,1)

          -- File not found
      		--
      		-- ******************************************
      		-- Discuss with Bill if he wants to fault or go back to default?
      		-- or Display fault then display default
      		-- ******************************************
      		--

--         WRITE ('1234567890123456789012345678901234567890')
           WRITE (CR,dashes,CR)
           WRITE ('',CR)
           WRITE ('DCD Menu ' + int_to_strg(mnunum) + ' cannot be found or missing',CR)
           WRITE ('information.',CR)
           WRITE ('Please check the DCD_TEXT.PC is present ',CR)
           WRITE ('and the Karel Vars for menu are ',CR)
           WRITE ('populated.',CR)
           WRITE ('',CR)
           WRITE (dashes,CR)
         -- force to acknowledge
           WRITE TPFUNC (CR,'  OK                                          ',CR)   -- Clear Fkey display
           pwrcycled = 'NO'
            WRITE TPFUNC (CR,'  DCD MENU PROGRAM ABORTED                         ',CR)   -- Clear Fkey display
            ABORT 

      ENDIF  
      
ELSE
   	
   	-- Default was selected
   	Choices = 6
   	
     FOR i = 1 TO 6 DO -- load the default lines
     	var2check = ('DCD_DEFAULT['+ int_to_strg(i)+ ']')
  		GET_VAR(entry,'DCDTCH',var2check,var2run,STATUS)
  		SET_VAR(entry,'DCDTCH','DCD_TEXT1[' + int_to_strg(i) + ']',var2run,STATUS)
     ENDFOR
   	
ENDIF	

END getDCDStr



----------------------------------------------------------------------------
ROUTINE postsingle
----------------------------------------------------------------------------

BEGIN

IF UNINIT(ans) THEN
  ans = 0
ENDIF

IF UNINIT(max_dcd) THEN
  ans = 31  -- 15 for G1 or G2, 31 for G3
ENDIF

SET_INT_REG (151,0,STATUS)   -- initialize return register
   
  REPOST::
    
    WRITE TPERROR (CHR(128))    -- clears the tp error screen
    WRITE TPERROR ('DCDTCH: ' + int_to_strg( mnunum))
    WRITE ('           '  + int_to_strg( mnunum),CR)
    
  REPEAT
    --post Title
    WRITE (Title,CR)
    Write('',CR) -- Blank line

  	FOR i = 1 TO 6 DO --up to 6 line of text
  	  curntmenu = ('DCD_TEXT1[' + int_to_strg(i) + ']')
      GET_VAR(entry,'DCDTCH',curntmenu,valid_text,STATUS)
      IF i<6 THEN
      	WRITE (valid_text,CR)
      ELSE
      	 WRITE (valid_text,CR)
      	 WRITE (CR,'Please Enter Selection:')
      ENDIF
  	ENDFOR

  --         WRITE (CR,'1234567890123456789012345678901234567890')
		WRITE TPFUNC (CR,'                                        ',CR)   -- Clear Fkeys
    FORCE_SPMENU(TP_PANEL,SPI_TPUSER,1)
    pwrcycled = 'NO'


   REPEAT
     GET_VAR(entry,'*system*','$TP_SCREEN',currentscr,STATUS)
       IF ((UNINIT(pwrcycled)) OR (currentscr <> 't_sc')) THEN
           GOTO REPOST
       ENDIF
		 READ (ans)
		 IF ((ans < 1) OR (ans > max_dcd)) THEN
		 	 GOTO REPOST
		 ENDIF	
   UNTIL ((ans >= 1) AND (ans <= 31))
    -- Set R[151] or sysvar for answer
       SET_INT_REG(151, ans, status)
       valid_ans = TRUE
  UNTIL valid_ans
   WRITE TPERROR (CHR(128))    -- clears the tp error screen

   FORCE_SPMENU(tp_panel,SPI_TPTCH,1)


END postsingle

----------------------------------------------------------------------------
ROUTINE postmulti
----------------------------------------------------------------------------

BEGIN

IF UNINIT(ans) THEN
  ans = 0
ENDIF

IF UNINIT(max_dcd) THEN
  ans = 31  -- 15 for G1 or G2, 31 for G3
ENDIF

SET_INT_REG (151,0,STATUS)   -- initialize return register

PostSIndex = 1  -- Set to Start at first item
PostEIndex = 5  -- Set to Finish at fifth item
 
  REPOSTMulti::
    
    WRITE TPERROR (CHR(128))    -- clears the tp error screen
    WRITE TPERROR ('DCDTCH: ' + int_to_strg( mnunum))
    WRITE ('           '  + int_to_strg( mnunum),CR)
    
  REPEAT
    --post Title
    WRITE (Title,CR)
    Write('',CR) -- Blank line

  	FOR i = PostSIndex TO PostEIndex DO -- 5 line of text
  	  curntmenu = ('DCD_TEXT1[' + int_to_strg(i) + ']')
      GET_VAR(entry,'DCDTCH',curntmenu,valid_text,STATUS)
      IF i<PostEIndex THEN
      	WRITE (valid_text,CR)
      ELSE
      	 WRITE (valid_text,CR)
      	 WRITE ('0-For more options',CR)
      	 WRITE (CR,'Please Enter Selection:')
      ENDIF
  	ENDFOR

  --         WRITE (CR,'1234567890123456789012345678901234567890')
		WRITE TPFUNC (CR,'                                        ',CR)   -- Clear Fkeys
    FORCE_SPMENU(TP_PANEL,SPI_TPUSER,1)
    pwrcycled = 'NO'


   REPEAT
     GET_VAR(entry,'*system*','$TP_SCREEN',currentscr,STATUS)
       IF ((UNINIT(pwrcycled)) OR (currentscr <> 't_sc')) THEN
           GOTO  REPOSTMulti
       ENDIF
		 READ (ans)
		 IF (ans > max_dcd) THEN
		 	 GOTO  REPOSTMulti
		 ENDIF	
   UNTIL (((ans >= 1) AND (ans <= 31)) OR (ans = 0))

    IF (ans = 0) Then -- more options requested, post next screen, or return to first
     
     IF (PostEIndex = 5) Then -- display second screen
   			PostSIndex = 6
   			PostEIndex = 10
   			GOTO  REPOSTMulti
   	 ENDIF
   	 IF ((PostEIndex = 10) AND (Choices>10)) Then -- display third  screen
   			PostSIndex = 11
   			PostEIndex = 15
   			GOTO  REPOSTMulti
   	 ENDIF
   	 IF ((PostEIndex = 10) AND (Choices<11)) Then -- re-display first screen
   			PostSIndex = 1
   			PostEIndex = 5
   			GOTO  REPOSTMulti
   	 ENDIF
   	 IF ((PostEIndex = 15) AND (Choices>16)) Then -- display fourth screen
   			PostSIndex = 16
   			PostEIndex = 20
   			GOTO  REPOSTMulti
   	 ENDIF
   	 IF ((PostEIndex = 15) AND (Choices<16)) Then -- re-display first screen
   			PostSIndex = 1
   			PostEIndex = 5
   			GOTO  REPOSTMulti
   	 ENDIF
   	 IF (PostEIndex = 20) Then
   			PostSIndex = 1
   			PostEIndex = 5
   			GOTO  REPOSTMulti
   	 ENDIF
   	 	
    ENDIF	
    -- Set R[151] or sysvar for answer
       SET_INT_REG(151, ans, status)
       valid_ans = TRUE
  UNTIL valid_ans
   WRITE TPERROR (CHR(128))    -- clears the tp error screen

   FORCE_SPMENU(tp_panel,SPI_TPTCH,1)

END postmulti


----------------------------------------------------------------------------
ROUTINE cleartpscrn
----------------------------------------------------------------------------
					         
BEGIN	

   WRITE ('',CR,CR,CR,CR,CR,CR,CR,CR,CR,CR)
   WRITE TPFUNC (CR,'                                               ',CR)   -- Clear Fkey display
   
END cleartpscrn
-----------------------------------------------------------------------------
-- DCDTCH Mainline
-----------------------------------------------------------------------------

BEGIN 

initialize                -- Initialize variables
tstArgument               -- validate arguments
getDCDStr 

-- Check number of choices require single of multi screen
IF Choices < 7 Then  -- only 1 screen is required.                -- get DCD text strings
postsingle                  -- post single menu and get response
ELSE -- multipule screens required.
postmulti                  -- post Multiple menu screens and get response
ENDIF
--cleartpscrn               -- clear screen on exit
-----------------------------------------------------------------------------
END DCDTCH