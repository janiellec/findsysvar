-------------------------------------------------------------------------------
--	  Provides User with 50 Y/N Menus  1-35  GRS4 Press standards.
--									   36-50 Custom Applications for user.
--
--	  yn_menu[1,1] = Menu Title 		[40 Characters MAX]
--	  yn_menu[1,2] = Menu Description	[40 Characters MAX]
--	  yn_menu[1,3] = Menu Option 1 		[40 Characters MAX]
--	  yn_menu[1,4] = Menu Option 2  	[40 Characters MAX]
--    yn_menu[1,5] = Menu Response Line [40 Characters MAX]
--
--    Example:
--	  yn_menu[1,1] = "SPR Henrob Rivet Fault"
--	  yn_menu[1,2] = " "
--	  yn_menu[1,3] = "Retry Rivet"
--	  yn_menu[1,4] = "Skip Rivet"
--	  yn_menu[1,5] = "[Retry] = 0  [Skip] = 1"
--					 Enter Selection = ( Valid response is 0 or 1)
--
-------------------------------------------------------------------------------
--    06-13-10   Steedlj Custom Yes/No or Skip/Retry Replacements, under same 
--                       conditions as all boxes to repost.  
--                       Cycle Start, TP reset, Panel Reset. 
--    10/23/13   JJA R30iB Development
--    12/03/13   GJK Revised program to work with R30iB
--    05/14/14   GJK Removed Menus 30 and 31 and added them to custolst
--	  10/4/14    Steedlj Initial Press G3 / G4 Release
-------------------------------------------------------------------------------
PROGRAM pcustyn
-------------------------------------------------------------------------------

%RWACCESS
%NOPAUSESHFT
%NOLOCKGROUP
%COMMENT='GRS4PCustYN V4.0'  			--steedlj Press Release
%NOPAUSE = ERROR + TPENABLE + COMMAND
%NOABORT = ERROR + COMMAND

-- Softpart built-ins
%ENVIRONMENT SWGDEF
%ENVIRONMENT SGDEF1
%ENVIRONMENT proddef
%ENVIRONMENT SYSDEF
%ENVIRONMENT strng
%ENVIRONMENT REGOPE
%ENVIRONMENT UIF
%ENVIRONMENT ioblt
%ENVIRONMENT IOSETUP

%INCLUDE kliotyps

CONST

  ER_WARN       =  0
  ER_PAUSE      =  1
  ER_ABORT      =  2
  TPI_ENABLE    = 249 
  TPI_EDIT      = 145
  TPI_RESET     = 153   -- TP RESET
  CLR_SCRN		= 128 	-- clear the screen
  CRSR_HOME		= 137 	-- moves cursor to home position

VAR

  yn_menu       IN SHADOW FROM PCUSTYN	: ARRAY[50,5] OF STRING[40]  
  yn_menunum    IN SHADOW FROM PCUSTYN	: INTEGER
  yn_answer     IN SHADOW FROM PCUSTYN	: INTEGER
  check_val     IN SHADOW FROM PCUSTYN	: BOOLEAN
  prmpt_back    IN SHADOW FROM GMCUSTO  : BOOLEAN
  dnet64size    IN SHADOW FROM GMCUSTO  : BOOLEAN

  ans    	IN SHADOW : INTEGER
  yn_flag  	IN SHADOW : BOOLEAN
  l_i     : INTEGER
  l_j     : INTEGER
  status  : INTEGER
  psve    : INTEGER
  real_value : REAL
  real_value2: REAL
  str_value  : STRING[10]
  str_value2 : STRING[10]
  gm_status  : INTEGER

%INCLUDE kliosop  
%INCLUDE etdcapsh
%INCLUDE klrdutil
%INCLUDE klrdread

-----------------------------------------------------------------------------
ROUTINE Menu_Screen
-- DESCRIPTION: 
--   This routine is to define the GM USer Menu Screen 
-----------------------------------------------------------------------------
VAR
  l_status: INTEGER
BEGIN

--		yn_menu[1,1] = Menu Title 			[40 Characters MAX]
--	  	yn_menu[1,2] = Menu Description		[40 Characters MAX]
--	  	yn_menu[1,3] = Menu Option 1 		[40 Characters MAX]
--	  	yn_menu[1,4] = Menu Option 2  		[40 Characters MAX]
--    	yn_menu[1,5] = Menu Response Line 	[40 Characters MAX]

    -- PCUSTNY /                             1234567890123456789012345678901234567890
    SET_VAR(psve, 'PCUSTYN', 'YN_MENU[1,1]', 'HANDLING FAULT', gm_status)
    SET_VAR(psve, 'PCUSTYN', 'YN_MENU[1,2]', 'PART NOT RELEASE', gm_status)
    SET_VAR(psve, 'PCUSTYN', 'YN_MENU[1,3]', '0 = Retry', gm_status)
    SET_VAR(psve, 'PCUSTYN', 'YN_MENU[1,4]', '1 = Drop', gm_status)
    SET_VAR(psve, 'PCUSTYN', 'YN_MENU[1,5]', 'Valid Response (0 or 1)', gm_status)

    SET_VAR(psve, 'PCUSTYN', 'YN_MENU[2,1]', 'HANDLING FAULT', gm_status)
    SET_VAR(psve, 'PCUSTYN', 'YN_MENU[2,2]', 'CONTINUE / CANCEL', gm_status)
    SET_VAR(psve, 'PCUSTYN', 'YN_MENU[2,3]', '0 = Continue Drop', gm_status)
    SET_VAR(psve, 'PCUSTYN', 'YN_MENU[2,4]', '1 = Cancel Drop', gm_status)
    SET_VAR(psve, 'PCUSTYN', 'YN_MENU[2,5]', 'Valid Response (0 or 1)', gm_status)

    SET_VAR(psve, 'PCUSTYN', 'YN_MENU[3,1]', 'PROCESS ERROR TOOL CHANGER', gm_status)
    SET_VAR(psve, 'PCUSTYN', 'YN_MENU[3,2]', 'LATCHING FAULT', gm_status)
    SET_VAR(psve, 'PCUSTYN', 'YN_MENU[3,3]', '0 = Retry', gm_status)
    SET_VAR(psve, 'PCUSTYN', 'YN_MENU[3,4]', '1 = Unlatch & Move to Home', gm_status)
    SET_VAR(psve, 'PCUSTYN', 'YN_MENU[3,5]', 'Valid Response (0 or 1)', gm_status)

    SET_VAR(psve, 'PCUSTYN', 'YN_MENU[4,1]', 'PROCESS ERROR TOOL CHANGER', gm_status)
    SET_VAR(psve, 'PCUSTYN', 'YN_MENU[4,2]', 'UNLATCHING FAULT', gm_status)
    SET_VAR(psve, 'PCUSTYN', 'YN_MENU[4,3]', '0 = Retry', gm_status)
    SET_VAR(psve, 'PCUSTYN', 'YN_MENU[4,4]', '1 = Latching & Move to Home', gm_status)
    SET_VAR(psve, 'PCUSTYN', 'YN_MENU[4,5]', 'Valid Response (0 or 1)', gm_status)

    SET_VAR(psve, 'PCUSTYN', 'YN_MENU[5,1]', 'PROCESS ERROR', gm_status)
    SET_VAR(psve, 'PCUSTYN', 'YN_MENU[5,2]', 'VISION FAULT', gm_status)
    SET_VAR(psve, 'PCUSTYN', 'YN_MENU[5,3]', '0 = Retry', gm_status)
    SET_VAR(psve, 'PCUSTYN', 'YN_MENU[5,4]', '1 = Move to Home & ABORT', gm_status)
    SET_VAR(psve, 'PCUSTYN', 'YN_MENU[5,5]', 'Valid Response (0 or 1)', gm_status)

END Menu_Screen

-----------------------------------------------------------------------------
ROUTINE Post_Custyn 
-- DESCRIPTION: 
--   This routine Clears the user screen and Posts Custoyn to it 
-----------------------------------------------------------------------------
VAR
  l_status: INTEGER
  
BEGIN

  SET_VAR(psve, '*system*', '$PRMPDSPON', TRUE, gm_status)
  prmpt_back = TRUE

     WRITE TPDISPLAY (CHR(CLR_SCRN),CHR(CRSR_HOME))

      --Custom YN or Skip/Retry Prompts
      WRITE (cr,cr,'---------------------------------',cr)
      WRITE (yn_menu[yn_menunum,1],cr)
      WRITE (yn_menu[yn_menunum,2],cr)             
      WRITE (yn_menu[yn_menunum,3],cr)             
      WRITE (yn_menu[yn_menunum,4],cr)                          
      WRITE (yn_menu[yn_menunum,5],cr,cr)                          
      WRITE (cr,'Enter selection = ' )
     

  FORCE_SPMENU(tp_panel,SPI_TPUSER,1)

END Post_Custyn      
   
-----------------------------------------------------------------------------
-- custoyn
-----------------------------------------------------------------------------

BEGIN --custoyn

  yn_flag = FALSE

  -- Reset Menu Title, Line1, Line 2, Response
  FOR l_i = 1 to 50 DO --jja R30iB
    FOR l_j = 1 to 5 DO 
      IF UNINIT (yn_menu[l_i,l_j]) THEN
	 yn_menu[l_i,l_j] = ''  
      ENDIF
    ENDFOR
  ENDFOR
  
  IF UNINIT(yn_answer) THEN
    yn_answer = 40
  ENDIF 
  IF UNINIT(check_val) THEN
    check_val = TRUE
  ENDIF
  IF UNINIT(ans) THEN
    ans = 0
  ENDIF
 
  GET_TPE_PRM(1,1, yn_menunum, real_value, str_value, status)   -- Get the MENU Number
  GET_TPE_PRM(2,1, yn_answer, real_value2, str_value2, status)  -- Get the R[X] to write the answer to.

-- Checks to make sure your using valid arguements.
-- turn off the parameter checking.
IF check_val = TRUE THEN  
    IF ((yn_menunum > 50) OR (yn_answer =0) ) THEN --jja R30iB
      POST_ERR(ER_TYPEER,'Invalid parameters AR[1]orAR[2]',0,2 )
      ABORT
    ELSE
    ENDIF
ENDIF

Menu_Screen 

IF status = 0 THEN
  FORCE_SPMENU(tp_panel,SPI_TPUSER,1)

  REPEAT
     
     yn_flag = TRUE
     Post_Custyn
     READ (ans)
     
    UNTIL (ans = 0 ) OR (ans = 1 )
     
	 IF (ans = 0) or (ans = 1) THEN
       -- Set R[X] for answer
       SET_INT_REG(yn_answer, ans, status)
         yn_flag = FALSE
         SET_VAR(psve, '*system*', '$PRMPDSPON', FALSE, gm_status)
         prmpt_back = FALSE
	 ENDIF

      FORCE_SPMENU(tp_panel,SPI_TPTCH,1)

ENDIF

END pcustyn