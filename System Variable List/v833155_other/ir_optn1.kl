-------------------------------------------------------------------------------
--
--    04-SEPT-2008 iRVision Error Recovery choices version #1.
--    GM-GRS-4 Vision Recovery Choices
--    03-02-2009 Global 2 Register Val.
--    03-10-10   Steedlj BODYSHOP/Metal Add SET_VAR and repost function
--    02-24-11   Steedlj Purge Conditions
--    10-15-13 jja R30iB Development
--    08-06-16 RRK added ManIntvntReq constant instead of hard coded was DO55 now DO17
-------------------------------------------------------------------------------
PROGRAM ir_optn1
-------------------------------------------------------------------------------

%RWACCESS
%NOPAUSESHFT
%NOLOCKGROUP
%COMMENT='iRVsn 2DFlt v4.1'
%NOPAUSE = ERROR + TPENABLE + COMMAND
%NOABORT = ERROR + COMMAND

-- Softpart built-ins
%ENVIRONMENT SWGDEF
%ENVIRONMENT SGDEF1
%ENVIRONMENT proddef
%ENVIRONMENT SYSDEF
%ENVIRONMENT strng
%ENVIRONMENT REGOPE
%ENVIRONMENT UIF
%ENVIRONMENT ioblt
%ENVIRONMENT IOSETUP

CONST
  ER_WARN  = 0
  ER_PAUSE = 1
  ER_ABORT = 2
  io_dout       =  2   -- Digital output
  tpi_enable    = 249
  io_sopin      = 11   -- Same as io_opin
  io_din        =  1   -- Digital input
  io_tpin       = 14
  io_opin       = 11
  tpi_edit      = 145
  io_uopin      = 20   -- User operator's panel input
  tpi_reset     = 153  -- TP RESET
  CH_RPOST = 675
  ManIntvntReq  = 17 -- RK added Manual intervention required, was hard coded

VAR
  ans:          INTEGER
  done:         BOOLEAN
  cycle_strt   IN SHADOW : BOOLEAN
  ans_status   IN SHADOW : INTEGER
  edt_status   IN SHADOW : INTEGER
  ans2_status  IN SHADOW : INTEGER

  status:    	INTEGER
  g_status:     INTEGER
  psve:         INTEGER
  screen:       STRING[4]
  title1        IN SHADOW FROM IR_OPTN1: STRING[15]
  ir_text1      IN SHADOW FROM IR_OPTN1: STRING[25]
  ir_text2      IN SHADOW FROM IR_OPTN1: STRING[25]
  ir_text3      IN SHADOW FROM IR_OPTN1: STRING[25]
  ir_prval      IN SHADOW FROM IR_OPTN1: INTEGER
  ir_answer     IN SHADOW FROM IR_OPTN1: INTEGER
  int_value:    INTEGER
  int_value2:   INTEGER
  real_value:   REAL
  real_value2:  REAL
  str_value:    STRING[10]
  str_value2:   STRING[10]
  check_val     IN SHADOW FROM IR_OPTN1: BOOLEAN
  xyz:          XYZWPR
  gm_status:    INTEGER

  prmpt_back   IN SHADOW FROM GMCUSTO  : BOOLEAN
  dnet64size   IN SHADOW FROM GMCUSTO  : BOOLEAN

%INCLUDE etdcapsh
%INCLUDE klrdutil
%INCLUDE klrdread

-----------------------------------------------------------------------------
ROUTINE repost
-- DESCRIPTION:
--   This routine is called by Cycle Start to repost
--   User Screen for selection questions.
-----------------------------------------------------------------------------
VAR

  l_status: INTEGER

BEGIN

IF done = FALSE THEN

IF dnet64size = FALSE THEN
  SET_VAR(psve, '*system*', '$PRMPDSPON', TRUE, gm_status)
  --Turn on ManInterventReqTP
   g_status = iovalset(IO_DOUT,ManIntvntReq, 1)
   prmpt_back = TRUE
ENDIF

 l_status = iovalrd(IO_DIN, 6, ans_status)
 l_status = iovalrd(IO_TPIN, 153, edt_status)
 l_status = iovalrd(IO_OPIN, 1, ans2_status)
   --writeconsole('[repost] Read I/O')
 IF (ans_status = 1) OR (edt_status = 1) OR (ans2_status = 1) THEN
   --writeconsole('[repost] Read I/O TRUE')
  cycle_strt = TRUE
  FORCE_SPMENU(tp_panel,SPI_TPUSER,1)
 ELSE
  cycle_strt = FALSE
 ENDIF
ENDIF
 ENABLE CONDITION[CH_RPOST]

END repost

-----------------------------------------------------------------------------
-- ir_optn1
-----------------------------------------------------------------------------

BEGIN --ir_optn1

done = FALSE
cycle_strt = FALSE

IF UNINIT(title1) THEN
  title1   = '2D Vision Fault'
  ir_text1 = 'Retry Vision Process'
  ir_text2 = 'Index to Next slot'
  ir_text3 = 'Reject Rack'
  ir_prval  = 11
  ir_answer = 308
  check_val = TRUE
ENDIF

IF UNINIT(ans) THEN
  ans = 2
ENDIF

GET_TPE_PRM(1,1, ir_prval, real_value, str_value, status)     -- Get the PR from the TP program
GET_TPE_PRM(2,1, ir_answer, real_value2, str_value2, status)  -- Get the R[X] to write the answer to.
xyz = GET_POS_REG(ir_prval, status)

-- Checks to make sure your using PR[11] and R[308] if others are needed
-- turn off the parameter checking.
IF check_val = TRUE THEN
    IF ((ir_prval <> 11) OR (ir_answer <> 308)) THEN
      POST_ERR(ER_TYPEER,'parameters AR[]',0,2 )
      ABORT
    ELSE
    ENDIF
ENDIF

IF status = 0 THEN

-- 2D iRVision Error Recovery Choices
  FORCE_SPMENU(tp_panel,SPI_TPUSER,1)
  done = FALSE

  --jja  R30iB Update02
  -- Start Repost Condition
  IF (done = FALSE) THEN
    IF (ans <= 2) AND (ans <> 0) THEN
      --writeconsole('[ir_optn] Repost')
      CONDITION[CH_RPOST]: WITH $SCAN_TIME = 150
      WHEN (NOT TPIN[tpi_enable]) DO
        repost
      ENDCONDITION
      ENABLE CONDITION[CH_RPOST]
    ENDIF
  ENDIF

  REPEAT
    REPEAT
loop1::
 	    -- Start Repost Condition
--jja  R30iB Update02  	      IF (done = FALSE) THEN
--jja  R30iB Update02		  IF (ans <= 2) AND (ans <> 0) THEN
--jja  R30iB Update02     	           --writeconsole('[ir_optn] Repost')
--jja  R30iB Update02     	           CONDITION[CH_RPOST]: WITH $SCAN_TIME = 150
--jja  R30iB Update02     	           WHEN (NOT TPIN[tpi_enable]) DO
--jja  R30iB Update02       		   repost
--jja  R30iB Update02     	           ENDCONDITION
--jja  R30iB Update02     	           ENABLE CONDITION[CH_RPOST]
--jja  R30iB Update02		  ENDIF
--jja  R30iB Update02  	      ENDIF

      WRITE (cr,'          ',title1,cr)
      WRITE ('1 = ',ir_text1,cr)
      WRITE ('2 = ',ir_text2,cr)
      WRITE ('3 = ',ir_text3,cr)
      WRITE (cr,'PR[',ir_prval,']',cr)
      WRITE (xyz)
      WRITE (cr,' Enter selection  = ')
      READ (ans)
    UNTIL (ans >= 1) AND (ans <=3)

     -- Case for Re-post
     IF ( (cycle_strt = TRUE) AND (done = FALSE) ) THEN
	   goto loop1
     ENDIF

    -- Set R[X] for answer
      SET_INT_REG(ir_answer, ans, status)
      done = TRUE
      DISABLE CONDITION[CH_RPOST]
      PURGE CONDITION[CH_RPOST]
      IF dnet64size = FALSE THEN
        --Turn off ManInterventReqTP
	    SET_VAR(psve, '*system*', '$PRMPDSPON', FALSE, gm_status)
        g_status = iovalset(IO_DOUT,ManIntvntReq, 0)
        prmpt_back = FALSE
      ENDIF
      FORCE_SPMENU(tp_panel,SPI_TPTCH,1)
  UNTIL done

ENDIF

END ir_optn1

