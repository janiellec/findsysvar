PROGRAM AVERAGE

-- This program was created by GENE Siegle to store the Average of Data 
 
%PRIORITY = 50
%SYSTEM
%NOLOCKGROUP
%RWACCESS
%NOABORT = ERROR	      -- not aborted by errors
%COMMENT = 'Average V4.0'

  TYPE
    style_t FROM AVERAGE = STRUCTURE
    numb	:ARRAY[10] OF REAL  --INTEGER
    cpos	:ARRAY[10] OF XYZWPR
    jpos  :ARRAY[10] OF JOINTPOS
  ENDSTRUCTURE
 
 VAR
  status,entry,success,i,a,b,int_val,style 	: INTEGER    -- returns status of attempted operation
  in_reg,out_reg,d_type,int_reg	:INTEGER
  rf	:BOOLEAN
  rv,int_out,divisor	:REAL
  sv	:STRING[30]
  style_set	:ARRAY[30] OF style_t
  cpos_val,cpos_out,cpos_tmp	:XYZWPR
  conf_str	:STRING[25]

BEGIN

  GET_TPE_PRM(1,1,style, rv, sv, status)
	b = style
  GET_TPE_PRM(2,1,in_reg, rv, sv, status)
  GET_TPE_PRM(3,1,out_reg, rv, sv, status)
  GET_TPE_PRM(4,1,d_type, rv, sv, status)

  IF UNINIT(a)THEN
    a = 1
  ENDIF
  IF UNINIT(b)THEN
    b = 1
  ENDIF
  IF UNINIT(i)THEN
    i = 1
  ENDIF
  IF UNINIT(int_out)THEN
    int_out = 0
  ENDIF
  FOR a = 1 TO 10 DO
    IF UNINIT(style_set[b].numb[a]) THEN
	  style_set[b].numb[a] = 0
	ENDIF
  ENDFOR
  IF UNINIT(cpos_out) THEN
	cpos_out.config_data.cfg_turn_no1 = 0
	cpos_out.config_data.cfg_turn_no2 = 0
	cpos_out.config_data.cfg_turn_no3 = 0
	cpos_out.config_data.cfg_flip = FALSE
	cpos_out.config_data.cfg_left = FALSE
	cpos_out.config_data.cfg_up = FALSE
	cpos_out.config_data.cfg_front = FALSE
    cpos_out.x = 0
    cpos_out.y = 0
    cpos_out.z = 0
    cpos_out.w = 0
    cpos_out.p = 0
    cpos_out.r = 0
  ENDIF

 
	cpos_tmp.config_data.cfg_turn_no1 = 0
	cpos_tmp.config_data.cfg_turn_no2 = 0
	cpos_tmp.config_data.cfg_turn_no3 = 0
	cpos_tmp.config_data.cfg_flip = FALSE
	cpos_tmp.config_data.cfg_left = FALSE
	cpos_tmp.config_data.cfg_up = FALSE
	cpos_tmp.config_data.cfg_front = FALSE
    cpos_tmp.x = 0
    cpos_tmp.y = 0
    cpos_tmp.z = 0
    cpos_tmp.w = 0
    cpos_tmp.p = 0
    cpos_tmp.r = 0


    FOR a = 1 TO 10 DO
    IF UNINIT(style_set[b].cpos[a]) THEN
	  style_set[b].cpos[a] = cpos_tmp
	ENDIF
  ENDFOR

  GET_REG(b,rf,int_reg,rv,status)
  i = int_reg

  IF d_type = 1 THEN
    GOTO NUMSET
  ENDIF
  IF d_type =2 THEN
    GOTO CPOSSET
  ENDIF

 NUMSET:: 
-- Sets the average for a Number SET
  divisor = 10.00
  GET_REG(in_reg,rf,int_val,rv,status)
   IF rf = TRUE THEN
      style_set[b].numb[i] = rv
   ENDIF
   IF rf = FALSE THEN
     style_set[b].numb[i] = int_val
   ENDIF
--	i = i + 1
--	IF i > 10 THEN
--	  i = 1
--	ENDIF

  int_out = (style_set[b].numb[1]+ style_set[b].numb[2]&
  + style_set[b].numb[3]+ style_set[b].numb[4]&
  + style_set[b].numb[5]+ style_set[b].numb[6]&
  + style_set[b].numb[7]+ style_set[b].numb[8]&
  + style_set[b].numb[9]+ style_set[b].numb[10]) / divisor
  SET_REAL_REG(out_reg,int_out,status)
-- End Of Number set
 GOTO BOTTOM

 CPOSSET::
   cpos_val = GET_POS_REG(in_reg,status)
     style_set[b].cpos[i] = cpos_val
     style_set[b].cpos[i].config_data = cpos_val.config_data
--	 i = i + 1
--     IF i > 10 THEN
--	   i = 1
--	 ENDIF
-- Set the config data for the output pos reg
   cpos_out.config_data = cpos_val.config_data

   cpos_out.x = (style_set[b].cpos[1].x + style_set[b].cpos[2].x &
   + style_set[b].cpos[3].x + style_set[b].cpos[4].x &
   + style_set[b].cpos[5].x + style_set[b].cpos[6].x &
   + style_set[b].cpos[7].x + style_set[b].cpos[8].x &
   + style_set[b].cpos[9].x + style_set[b].cpos[10].x) / 10

   cpos_out.y = (style_set[b].cpos[1].y + style_set[b].cpos[2].y &
   + style_set[b].cpos[3].y + style_set[b].cpos[4].y &
   + style_set[b].cpos[5].y + style_set[b].cpos[6].y &
   + style_set[b].cpos[7].y + style_set[b].cpos[8].y &
   + style_set[b].cpos[9].y + style_set[b].cpos[10].y) / 10

   cpos_out.z = (style_set[b].cpos[1].z + style_set[b].cpos[2].z &
   + style_set[b].cpos[3].z + style_set[b].cpos[4].z &
   + style_set[b].cpos[5].z + style_set[b].cpos[6].z &
   + style_set[b].cpos[7].z + style_set[b].cpos[8].z &
   + style_set[b].cpos[9].z + style_set[b].cpos[10].z) / 10

   cpos_out.w = (style_set[b].cpos[1].w + style_set[b].cpos[2].w &
   + style_set[b].cpos[3].w + style_set[b].cpos[4].w &
   + style_set[b].cpos[5].w + style_set[b].cpos[6].w &
   + style_set[b].cpos[7].w + style_set[b].cpos[8].w &
   + style_set[b].cpos[9].w + style_set[b].cpos[10].w) / 10

   cpos_out.p = (style_set[b].cpos[1].p + style_set[b].cpos[2].p &
   + style_set[b].cpos[3].p + style_set[b].cpos[4].p &
   + style_set[b].cpos[5].p + style_set[b].cpos[6].p &
   + style_set[b].cpos[7].p + style_set[b].cpos[8].p &
   + style_set[b].cpos[9].p + style_set[b].cpos[10].p) / 10

   cpos_out.r = (style_set[b].cpos[1].r + style_set[b].cpos[2].r &
   + style_set[b].cpos[3].r + style_set[b].cpos[4].r &
   + style_set[b].cpos[5].r + style_set[b].cpos[6].r &
   + style_set[b].cpos[7].r + style_set[b].cpos[8].r &
   + style_set[b].cpos[9].r + style_set[b].cpos[10].r) / 10



   SET_POS_REG(out_reg,cpos_out,status)

   BOTTOM::

END AVERAGE