--    This material is the joint property of Fanuc Robotics Corporation  and
--    FANUC  LTD  Japan,  and  must  be  returned  to  either Fanuc Robotics
--    Corporation or FANUC LTD Japan immediately upon request.  This  material
--    and   the  information  illustrated  or  contained  herein  may  not  be
--    reproduced, copied, used, or transmitted in whole or in part in any  way
--    without the prior written consent of both Fanuc Robotics and FANUC.
--
--             All Rights Reserved
--             Copyright (C)   1991,1995
--             Fanuc Robotics Corporation
--             FANUC LTD Japan
--
--             Karel is a registered trademark of
--             Fanuc Robotics Corporation
--    +
--    Program: ffr_optn.kl  - Displays Fast fault options 
--				called at the end of repair program
--
--    Description:
--
--    This program is called from the repair TP program. It displays FFR options to the
--     user	
--
--
--    Language: KAREL
--
--    Source File:  ffr_optn.kl    04-MAR-99   04:00PM
--
--    Author: PATNAISM
--            FANUC Robotics Corporation
--            3900 West Hamlin Road
--            Rochester Hills, Michigan    48309-3253
--
--    Modification history:
--    23-SEp-1999 PATNAISM V5.22  Initial creation
--    24-FEB-2000 DRESLISM make sure style is not 0
--    18-apr-00   mas     change from atshell to swshell
--    19-NOV-2000 Dreslism really abort all if they choose abort
--                so that fast fault does not continue anymore.
--    23-JAN-2006 steedlj Make text so it can be translated.
--    10-Oct-2013 jja        R30iB Development
-------------------------------------------------------------------------------
PROGRAM ffr_optn
-------------------------------------------------------------------------------

%RWACCESS
%NOPAUSESHFT
%NOLOCKGROUP
%COMMENT='FFR Weld v4.0'
%NOPAUSE = ERROR + TPENABLE + COMMAND
%NOABORT = ERROR + COMMAND

-- Softpart built-ins
%ENVIRONMENT SYSDEF
--%ENVIRONMENT ATCLDEF
%ENVIRONMENT MULTI
%ENVIRONMENT ATSTYDEF
%ENVIRONMENT ioblt --jja R30iB

%INCLUDE gmevrs4io  
CONST
  IGNOR_OFFLIN  = 128

VAR
  ans:          INTEGER
  done:         BOOLEAN
  status: 	INTEGER
  screen:       STRING[4]  
  cont_next IN CMOS: BOOLEAN  
--  style IN CMOS FROM SWSHELL:  INTEGER
  attr_nosave: FILE

-- From Customizations
   clast_gmdata     IN SHADOW FROM GMLANG1  : STRING[35]
   cnext_gmdata     IN SHADOW FROM GMLANG1  : STRING[35]
   abrt_gmdata      IN SHADOW FROM GMLANG1  : STRING[35]
   rerun_gmdata     IN SHADOW FROM GMLANG1  : STRING[35]
   frhdr_gmdata     IN SHADOW FROM GMLANG1  : STRING[35]
   ffrans_gdata     IN SHADOW FROM GMLANG1  : STRING[35]
   wiz_lang     IN SHADOW FROM GMCUSTO : INTEGER  
   l_ignore                                 : INTEGER --jja R30iB

  --jja  R30iB Update02
  l_val,
  l_stat     : INTEGER  

-- From Customizations
ROUTINE set_english  FROM GMLANG1
ROUTINE set_german   FROM GMLANG1
   
%INCLUDE klrdutil
%INCLUDE klrdread


BEGIN --ffr_optns

-- Check for Language Initalization
IF UNINIT(frhdr_gmdata) THEN
  set_english
  wiz_lang = 1
ENDIF


  --jja  R30iB Update02
  IF UNINIT(doAdptOff_i[1]) THEN 
    doAdptOff_i[1] = 1075
  ENDIF
  IF UNINIT(diAdaptCap_t[1]) THEN
    diAdaptCap_t[1] = 1
  ENDIF
  IF UNINIT(diAdaptCap_i[1]) THEN
    diAdaptCap_i[1] = 1077
  ENDIF

  IF UNINIT(doAdptOff_i[2]) THEN
    doAdptOff_i[2] = 1139
  ENDIF
  IF UNINIT(diAdaptCap_t[2]) THEN
    diAdaptCap_t[2] = 1
  ENDIF
  IF UNINIT(diAdaptCap_i[2]) THEN
    diAdaptCap_i[2] = 1141
  ENDIF

  
  
  FORCE_SPMENU(tp_panel,SPI_TPUSER,1)
--  delay(500)
--  att_stnd_win(status)
--  clr_stnd_scr(status)
--  ACT_SCREEN('T_SC', screen, status)
--  $tp_lckuser = false
--  WRITE_DICT(TPDISPLAY, 'CTRL', TPCTRL_CLRSC, status)

  done = FALSE
  --  Decide what we're going to update.
  REPEAT
    REPEAT 
    
-- Language Question Setting
IF (wiz_lang = 1) OR (wiz_lang =2) THEN
  set_english
ENDIF
       
IF wiz_lang = 3 THEN
  set_german
ENDIF
                
      WRITE (CR,frhdr_gmdata ,cr)
      WRITE (cr)
      WRITE    (clast_gmdata ,cr)
      WRITE    (cnext_gmdata ,cr)
      WRITE    (abrt_gmdata ,cr)
      WRITE(CR,ffrans_gdata ,CR)
      WRITE(CR)
      WRITE ('>')
      READ (ans)
    UNTIL (ans >= 1) AND (ans <=3)
     
    SELECT ans OF
      CASE (1):
 	  -- nothing special normal FFR sequence
	  done = true
 
          l_stat = IOVALRD( diAdaptCap_t[1], diAdaptCap_i[1], l_val )
          IF (l_stat = 0) THEN
            IF (DIN[diAdaptCap_i[1]] = ON ) THEN 
              l_ignore = iovalset(2 + IGNOR_OFFLIN,  doAdptOff_i[1],1) --jja R30iB Reweld - Turn OFF Adaptive WC1
            ENDIF
          ENDIF
 
          l_stat = IOVALRD( diAdaptCap_t[2], diAdaptCap_i[2], l_val )
          IF (l_stat = 0) THEN
            IF (DIN[diAdaptCap_i[2]] = ON ) THEN 
              l_ignore = iovalset(2 + IGNOR_OFFLIN,  doAdptOff_i[2],1) --jja R30iB Reweld - Turn OFF Adaptive WC2
            ENDIF
          ENDIF

      CASE (2):
          -- start welding form the next point
          cont_next = true
          done = true
          l_ignore = iovalset(2 + IGNOR_OFFLIN, 1075,0) --jja R30iB Reweld - Turn OFF Adaptive WC1
          l_ignore = iovalset(2 + IGNOR_OFFLIN, 1139,0) --jja R30iB Reweld - Turn OFF Adaptive WC2
      CASE (3):
          ABORT_TASK('*ALL*', TRUE, TRUE, status)
          done = true
          l_ignore = iovalset(2 + IGNOR_OFFLIN, 1075,0) --jja R30iB Reweld - Turn OFF Adaptive WC1
          l_ignore = iovalset(2 + IGNOR_OFFLIN, 1139,0) --jja R30iB Reweld - Turn OFF Adaptive WC2
      ELSE:
    ENDSELECT
  UNTIL done
 FORCE_SPMENU(tp_panel,SPI_TPTCH,1)
END ffr_optn
	




